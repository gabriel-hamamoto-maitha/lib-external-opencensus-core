{"version":3,"file":"/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/src/tags/types.ts","sources":["/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/src/tags/types.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;AAqCH,8EAA8E;AAC9E,IAAY,MASX;AATD,WAAY,MAAM;IAChB;;;OAGG;IACH,uDAAkB,CAAA;IAElB,0DAA0D;IAC1D,sEAA0B,CAAA;AAC5B,CAAC,EATW,MAAM,GAAN,cAAM,KAAN,cAAM,QASjB","sourcesContent":["/**\n * Copyright 2019, OpenCensus Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** TagKey represents a tag key */\nexport interface TagKey {\n  /** The name of the key. */\n  readonly name: string;\n}\n\n/** TagValue represents a tag value */\nexport interface TagValue {\n  /** The value of a tag. */\n  readonly value: string;\n}\n\n/** TagValueWithMetadata holds a TagValue and a TagMetadata. */\nexport interface TagValueWithMetadata {\n  /** The tag value */\n  readonly tagValue: TagValue;\n  /** The metadata for the tag */\n  readonly tagMetadata: TagMetadata;\n}\n\n/**\n * TagMetadata contains properties associated with a Tag.\n * Anytime a sender serializes a tag, sends it over the wire and receiver\n * deserializes the tag then the tag is considered to have travelled one hop.\n * There could be one or more proxy(ies) between sender and receiver. Proxies\n * are treated as transparent entities and they do not create additional hops.\n */\nexport interface TagMetadata {\n  /**\n   * For now, only special values of TagTtl are supported. In future,\n   * additional properties may be added to address specific situations.\n   */\n  readonly tagTtl: number;\n}\n\n/** TagTtl is an integer that represents number of hops a tag can propagate */\nexport enum TagTtl {\n  /**\n   * NO_PROPAGATION is considered to have local scope and is used within the\n   * process it created.\n   */\n  NO_PROPAGATION = 0,\n\n  /** UNLIMITED_PROPAGATION can propagate unlimited hops. */\n  UNLIMITED_PROPAGATION = -1,\n}\n"]}
"use strict";/**
 * Copyright 2019, OpenCensus Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function cov_1nu1jw0bru(){var path="/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/src/trace/model/no-record/no-record-root-span.ts";var hash="7cfbadc1972b2c2015db4828889c79e8ce982cdc";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/src/trace/model/no-record/no-record-root-span.ts",statementMap:{"0":{start:{line:17,column:0},end:{line:17,column:62}},"1":{start:{line:18,column:0},end:{line:18,column:34}},"2":{start:{line:19,column:15},end:{line:19,column:56}},"3":{start:{line:20,column:25},end:{line:20,column:52}},"4":{start:{line:34,column:8},end:{line:34,column:22}},"5":{start:{line:35,column:8},end:{line:35,column:29}},"6":{start:{line:36,column:8},end:{line:36,column:36}},"7":{start:{line:37,column:8},end:{line:37,column:25}},"8":{start:{line:38,column:8},end:{line:38,column:25}},"9":{start:{line:39,column:8},end:{line:39,column:46}},"10":{start:{line:40,column:8},end:{line:42,column:9}},"11":{start:{line:41,column:12},end:{line:41,column:46}},"12":{start:{line:43,column:8},end:{line:43,column:60}},"13":{start:{line:47,column:8},end:{line:47,column:20}},"14":{start:{line:51,column:8},end:{line:51,column:33}},"15":{start:{line:55,column:8},end:{line:55,column:38}},"16":{start:{line:59,column:8},end:{line:59,column:36}},"17":{start:{line:63,column:8},end:{line:63,column:17}},"18":{start:{line:67,column:8},end:{line:67,column:22}},"19":{start:{line:71,column:8},end:{line:71,column:20}},"20":{start:{line:74,column:0},end:{line:74,column:44}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:33,column:4},end:{line:33,column:5}},loc:{start:{line:33,column:71},end:{line:44,column:5}},line:33},"1":{name:"(anonymous_1)",decl:{start:{line:46,column:4},end:{line:46,column:5}},loc:{start:{line:46,column:17},end:{line:48,column:5}},line:46},"2":{name:"(anonymous_2)",decl:{start:{line:50,column:4},end:{line:50,column:5}},loc:{start:{line:50,column:18},end:{line:52,column:5}},line:50},"3":{name:"(anonymous_3)",decl:{start:{line:54,column:4},end:{line:54,column:5}},loc:{start:{line:54,column:23},end:{line:56,column:5}},line:54},"4":{name:"(anonymous_4)",decl:{start:{line:58,column:4},end:{line:58,column:5}},loc:{start:{line:58,column:21},end:{line:60,column:5}},line:58},"5":{name:"(anonymous_5)",decl:{start:{line:62,column:4},end:{line:62,column:5}},loc:{start:{line:62,column:27},end:{line:64,column:5}},line:62},"6":{name:"(anonymous_6)",decl:{start:{line:66,column:4},end:{line:66,column:5}},loc:{start:{line:66,column:12},end:{line:68,column:5}},line:66},"7":{name:"(anonymous_7)",decl:{start:{line:70,column:4},end:{line:70,column:5}},loc:{start:{line:70,column:10},end:{line:72,column:5}},line:70}},branchMap:{"0":{loc:{start:{line:40,column:8},end:{line:42,column:9}},type:"if",locations:[{start:{line:40,column:8},end:{line:42,column:9}},{start:{line:40,column:8},end:{line:42,column:9}}],line:40},"1":{loc:{start:{line:43,column:22},end:{line:43,column:59}},type:"binary-expr",locations:[{start:{line:43,column:22},end:{line:43,column:40}},{start:{line:43,column:44},end:{line:43,column:59}}],line:43}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},b:{"0":[0,0],"1":[0,0]},inputSourceMap:{version:3,file:"/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/src/trace/model/no-record/no-record-root-span.ts",sources:["/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/src/trace/model/no-record/no-record-root-span.ts"],names:[],mappings:";AAAA;;;;;;;;;;;;;;GAcG;;;AAEH,yDAAyD;AAEzD,qDAAgD;AAEhD,2EAA2E;AAC3E,MAAa,gBAAiB,SAAQ,6BAAY;IAahD;;;;;;;;;OASG;IACH,YACE,MAAwB,EACxB,IAAY,EACZ,IAAoB,EACpB,OAAe,EACf,YAAoB,EACpB,UAA6B;QAE7B,KAAK,CAAC,MAAM,CAAC,CAAC;QACd,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC;QAC5B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,iBAAiB,GAAG,YAAY,CAAC;QACtC,IAAI,UAAU,EAAE;YACd,IAAI,CAAC,eAAe,GAAG,UAAU,CAAC;SACnC;QACD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,EAAE,CAAC;IACtD,CAAC;IAED,6CAA6C;IAC7C,UAAU;QACR,OAAO,IAAI,CAAC;IACd,CAAC;IAED,2CAA2C;IAC3C,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IAED,sCAAsC;IACtC,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,iBAAiB,CAAC;IAChC,CAAC;IAED,2CAA2C;IAC3C,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,eAAe,CAAC;IAC9B,CAAC;IAED,2CAA2C;IAC3C,IAAI,gBAAgB;QAClB,OAAO,CAAC,CAAC;IACX,CAAC;IAED,2CAA2C;IAC3C,KAAK;QACH,KAAK,CAAC,KAAK,EAAE,CAAC;IAChB,CAAC;IAED,2CAA2C;IAC3C,GAAG;QACD,KAAK,CAAC,GAAG,EAAE,CAAC;IACd,CAAC;CACF;AA7ED,4CA6EC",sourcesContent:["/**\n * Copyright 2019, OpenCensus Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as logger from '../../../common/console-logger';\nimport * as types from '../types';\nimport { NoRecordSpan } from './no-record-span';\n\n/** Implementation for the Span class that does not record trace events. */\nexport class NoRecordRootSpan extends NoRecordSpan {\n  /** Its trace ID. */\n  private traceIdLocal: string;\n  /** Its trace state. */\n  private traceStateLocal?: types.TraceState;\n  /**\n   * This span's parent Id.  This is a string and not a Span because the\n   * parent was likely started on another machine.\n   */\n  private parentSpanIdLocal: string;\n  /** A tracer object */\n  readonly tracer: types.TracerBase;\n\n  /**\n   * Constructs a new NoRecordRootSpanImpl instance.\n   * @param tracer A tracer object.\n   * @param name The displayed name for the new span.\n   * @param kind The kind of new span.\n   * @param traceId The trace Id.\n   * @param parentSpanId The id of the parent span, or empty if the new span is\n   *     a root span.\n   * @param traceState Optional traceState.\n   */\n  constructor(\n    tracer: types.TracerBase,\n    name: string,\n    kind: types.SpanKind,\n    traceId: string,\n    parentSpanId: string,\n    traceState?: types.TraceState\n  ) {\n    super(tracer);\n    this.tracer = tracer;\n    this.traceIdLocal = traceId;\n    this.name = name;\n    this.kind = kind;\n    this.parentSpanIdLocal = parentSpanId;\n    if (traceState) {\n      this.traceStateLocal = traceState;\n    }\n    this.logger = this.tracer.logger || logger.logger();\n  }\n\n  /** Returns whether a span is root or not. */\n  isRootSpan(): boolean {\n    return true;\n  }\n\n  /** No-op implementation of this method. */\n  get traceId(): string {\n    return this.traceIdLocal;\n  }\n\n  /** Gets the ID of the parent span. */\n  get parentSpanId(): string {\n    return this.parentSpanIdLocal;\n  }\n\n  /** No-op implementation of this method. */\n  get traceState(): types.TraceState | undefined {\n    return this.traceStateLocal;\n  }\n\n  /** No-op implementation of this method. */\n  get numberOfChildren(): number {\n    return 0;\n  }\n\n  /** No-op implementation of this method. */\n  start() {\n    super.start();\n  }\n\n  /** No-op implementation of this method. */\n  end() {\n    super.end();\n  }\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"7cfbadc1972b2c2015db4828889c79e8ce982cdc"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1nu1jw0bru=function(){return actualCoverage;};}return actualCoverage;}cov_1nu1jw0bru();cov_1nu1jw0bru().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_1nu1jw0bru().s[1]++;exports.NoRecordRootSpan=void 0;const logger=(cov_1nu1jw0bru().s[2]++,require("../../../common/console-logger"));const no_record_span_1=(cov_1nu1jw0bru().s[3]++,require("./no-record-span"));/** Implementation for the Span class that does not record trace events. */class NoRecordRootSpan extends(no_record_span_1.NoRecordSpan){/**
     * Constructs a new NoRecordRootSpanImpl instance.
     * @param tracer A tracer object.
     * @param name The displayed name for the new span.
     * @param kind The kind of new span.
     * @param traceId The trace Id.
     * @param parentSpanId The id of the parent span, or empty if the new span is
     *     a root span.
     * @param traceState Optional traceState.
     */constructor(tracer,name,kind,traceId,parentSpanId,traceState){cov_1nu1jw0bru().f[0]++;cov_1nu1jw0bru().s[4]++;super(tracer);cov_1nu1jw0bru().s[5]++;this.tracer=tracer;cov_1nu1jw0bru().s[6]++;this.traceIdLocal=traceId;cov_1nu1jw0bru().s[7]++;this.name=name;cov_1nu1jw0bru().s[8]++;this.kind=kind;cov_1nu1jw0bru().s[9]++;this.parentSpanIdLocal=parentSpanId;cov_1nu1jw0bru().s[10]++;if(traceState){cov_1nu1jw0bru().b[0][0]++;cov_1nu1jw0bru().s[11]++;this.traceStateLocal=traceState;}else{cov_1nu1jw0bru().b[0][1]++;}cov_1nu1jw0bru().s[12]++;this.logger=(cov_1nu1jw0bru().b[1][0]++,this.tracer.logger)||(cov_1nu1jw0bru().b[1][1]++,logger.logger());}/** Returns whether a span is root or not. */isRootSpan(){cov_1nu1jw0bru().f[1]++;cov_1nu1jw0bru().s[13]++;return true;}/** No-op implementation of this method. */get traceId(){cov_1nu1jw0bru().f[2]++;cov_1nu1jw0bru().s[14]++;return this.traceIdLocal;}/** Gets the ID of the parent span. */get parentSpanId(){cov_1nu1jw0bru().f[3]++;cov_1nu1jw0bru().s[15]++;return this.parentSpanIdLocal;}/** No-op implementation of this method. */get traceState(){cov_1nu1jw0bru().f[4]++;cov_1nu1jw0bru().s[16]++;return this.traceStateLocal;}/** No-op implementation of this method. */get numberOfChildren(){cov_1nu1jw0bru().f[5]++;cov_1nu1jw0bru().s[17]++;return 0;}/** No-op implementation of this method. */start(){cov_1nu1jw0bru().f[6]++;cov_1nu1jw0bru().s[18]++;super.start();}/** No-op implementation of this method. */end(){cov_1nu1jw0bru().f[7]++;cov_1nu1jw0bru().s[19]++;super.end();}}cov_1nu1jw0bru().s[20]++;exports.NoRecordRootSpan=NoRecordRootSpan;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3VzZXJtYWl0aGEvdHJhZGVtYXN0ZXIvbGlicy9saWItZXh0ZXJuYWwtb3BlbmNlbnN1cy1ub2RlL3NyYy90cmFjZS9tb2RlbC9uby1yZWNvcmQvbm8tcmVjb3JkLXJvb3Qtc3Bhbi50cyIsInNvdXJjZXMiOlsiL1VzZXJzL3VzZXJtYWl0aGEvdHJhZGVtYXN0ZXIvbGlicy9saWItZXh0ZXJuYWwtb3BlbmNlbnN1cy1ub2RlL3NyYy90cmFjZS9tb2RlbC9uby1yZWNvcmQvbm8tcmVjb3JkLXJvb3Qtc3Bhbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7Ozs7Ozs7O0dBY0c7OztBQUVILHlEQUF5RDtBQUV6RCxxREFBZ0Q7QUFFaEQsMkVBQTJFO0FBQzNFLE1BQWEsZ0JBQWlCLFNBQVEsNkJBQVk7SUFhaEQ7Ozs7Ozs7OztPQVNHO0lBQ0gsWUFDRSxNQUF3QixFQUN4QixJQUFZLEVBQ1osSUFBb0IsRUFDcEIsT0FBZSxFQUNmLFlBQW9CLEVBQ3BCLFVBQTZCO1FBRTdCLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNkLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxZQUFZLEdBQUcsT0FBTyxDQUFDO1FBQzVCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxZQUFZLENBQUM7UUFDdEMsSUFBSSxVQUFVLEVBQUU7WUFDZCxJQUFJLENBQUMsZUFBZSxHQUFHLFVBQVUsQ0FBQztTQUNuQztRQUNELElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLElBQUksTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQ3RELENBQUM7SUFFRCw2Q0FBNkM7SUFDN0MsVUFBVTtRQUNSLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVELDJDQUEyQztJQUMzQyxJQUFJLE9BQU87UUFDVCxPQUFPLElBQUksQ0FBQyxZQUFZLENBQUM7SUFDM0IsQ0FBQztJQUVELHNDQUFzQztJQUN0QyxJQUFJLFlBQVk7UUFDZCxPQUFPLElBQUksQ0FBQyxpQkFBaUIsQ0FBQztJQUNoQyxDQUFDO0lBRUQsMkNBQTJDO0lBQzNDLElBQUksVUFBVTtRQUNaLE9BQU8sSUFBSSxDQUFDLGVBQWUsQ0FBQztJQUM5QixDQUFDO0lBRUQsMkNBQTJDO0lBQzNDLElBQUksZ0JBQWdCO1FBQ2xCLE9BQU8sQ0FBQyxDQUFDO0lBQ1gsQ0FBQztJQUVELDJDQUEyQztJQUMzQyxLQUFLO1FBQ0gsS0FBSyxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ2hCLENBQUM7SUFFRCwyQ0FBMkM7SUFDM0MsR0FBRztRQUNELEtBQUssQ0FBQyxHQUFHLEVBQUUsQ0FBQztJQUNkLENBQUM7Q0FDRjtBQTdFRCw0Q0E2RUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAyMDE5LCBPcGVuQ2Vuc3VzIEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCAqIGFzIGxvZ2dlciBmcm9tICcuLi8uLi8uLi9jb21tb24vY29uc29sZS1sb2dnZXInO1xuaW1wb3J0ICogYXMgdHlwZXMgZnJvbSAnLi4vdHlwZXMnO1xuaW1wb3J0IHsgTm9SZWNvcmRTcGFuIH0gZnJvbSAnLi9uby1yZWNvcmQtc3Bhbic7XG5cbi8qKiBJbXBsZW1lbnRhdGlvbiBmb3IgdGhlIFNwYW4gY2xhc3MgdGhhdCBkb2VzIG5vdCByZWNvcmQgdHJhY2UgZXZlbnRzLiAqL1xuZXhwb3J0IGNsYXNzIE5vUmVjb3JkUm9vdFNwYW4gZXh0ZW5kcyBOb1JlY29yZFNwYW4ge1xuICAvKiogSXRzIHRyYWNlIElELiAqL1xuICBwcml2YXRlIHRyYWNlSWRMb2NhbDogc3RyaW5nO1xuICAvKiogSXRzIHRyYWNlIHN0YXRlLiAqL1xuICBwcml2YXRlIHRyYWNlU3RhdGVMb2NhbD86IHR5cGVzLlRyYWNlU3RhdGU7XG4gIC8qKlxuICAgKiBUaGlzIHNwYW4ncyBwYXJlbnQgSWQuICBUaGlzIGlzIGEgc3RyaW5nIGFuZCBub3QgYSBTcGFuIGJlY2F1c2UgdGhlXG4gICAqIHBhcmVudCB3YXMgbGlrZWx5IHN0YXJ0ZWQgb24gYW5vdGhlciBtYWNoaW5lLlxuICAgKi9cbiAgcHJpdmF0ZSBwYXJlbnRTcGFuSWRMb2NhbDogc3RyaW5nO1xuICAvKiogQSB0cmFjZXIgb2JqZWN0ICovXG4gIHJlYWRvbmx5IHRyYWNlcjogdHlwZXMuVHJhY2VyQmFzZTtcblxuICAvKipcbiAgICogQ29uc3RydWN0cyBhIG5ldyBOb1JlY29yZFJvb3RTcGFuSW1wbCBpbnN0YW5jZS5cbiAgICogQHBhcmFtIHRyYWNlciBBIHRyYWNlciBvYmplY3QuXG4gICAqIEBwYXJhbSBuYW1lIFRoZSBkaXNwbGF5ZWQgbmFtZSBmb3IgdGhlIG5ldyBzcGFuLlxuICAgKiBAcGFyYW0ga2luZCBUaGUga2luZCBvZiBuZXcgc3Bhbi5cbiAgICogQHBhcmFtIHRyYWNlSWQgVGhlIHRyYWNlIElkLlxuICAgKiBAcGFyYW0gcGFyZW50U3BhbklkIFRoZSBpZCBvZiB0aGUgcGFyZW50IHNwYW4sIG9yIGVtcHR5IGlmIHRoZSBuZXcgc3BhbiBpc1xuICAgKiAgICAgYSByb290IHNwYW4uXG4gICAqIEBwYXJhbSB0cmFjZVN0YXRlIE9wdGlvbmFsIHRyYWNlU3RhdGUuXG4gICAqL1xuICBjb25zdHJ1Y3RvcihcbiAgICB0cmFjZXI6IHR5cGVzLlRyYWNlckJhc2UsXG4gICAgbmFtZTogc3RyaW5nLFxuICAgIGtpbmQ6IHR5cGVzLlNwYW5LaW5kLFxuICAgIHRyYWNlSWQ6IHN0cmluZyxcbiAgICBwYXJlbnRTcGFuSWQ6IHN0cmluZyxcbiAgICB0cmFjZVN0YXRlPzogdHlwZXMuVHJhY2VTdGF0ZVxuICApIHtcbiAgICBzdXBlcih0cmFjZXIpO1xuICAgIHRoaXMudHJhY2VyID0gdHJhY2VyO1xuICAgIHRoaXMudHJhY2VJZExvY2FsID0gdHJhY2VJZDtcbiAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgIHRoaXMua2luZCA9IGtpbmQ7XG4gICAgdGhpcy5wYXJlbnRTcGFuSWRMb2NhbCA9IHBhcmVudFNwYW5JZDtcbiAgICBpZiAodHJhY2VTdGF0ZSkge1xuICAgICAgdGhpcy50cmFjZVN0YXRlTG9jYWwgPSB0cmFjZVN0YXRlO1xuICAgIH1cbiAgICB0aGlzLmxvZ2dlciA9IHRoaXMudHJhY2VyLmxvZ2dlciB8fCBsb2dnZXIubG9nZ2VyKCk7XG4gIH1cblxuICAvKiogUmV0dXJucyB3aGV0aGVyIGEgc3BhbiBpcyByb290IG9yIG5vdC4gKi9cbiAgaXNSb290U3BhbigpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIC8qKiBOby1vcCBpbXBsZW1lbnRhdGlvbiBvZiB0aGlzIG1ldGhvZC4gKi9cbiAgZ2V0IHRyYWNlSWQoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy50cmFjZUlkTG9jYWw7XG4gIH1cblxuICAvKiogR2V0cyB0aGUgSUQgb2YgdGhlIHBhcmVudCBzcGFuLiAqL1xuICBnZXQgcGFyZW50U3BhbklkKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMucGFyZW50U3BhbklkTG9jYWw7XG4gIH1cblxuICAvKiogTm8tb3AgaW1wbGVtZW50YXRpb24gb2YgdGhpcyBtZXRob2QuICovXG4gIGdldCB0cmFjZVN0YXRlKCk6IHR5cGVzLlRyYWNlU3RhdGUgfCB1bmRlZmluZWQge1xuICAgIHJldHVybiB0aGlzLnRyYWNlU3RhdGVMb2NhbDtcbiAgfVxuXG4gIC8qKiBOby1vcCBpbXBsZW1lbnRhdGlvbiBvZiB0aGlzIG1ldGhvZC4gKi9cbiAgZ2V0IG51bWJlck9mQ2hpbGRyZW4oKTogbnVtYmVyIHtcbiAgICByZXR1cm4gMDtcbiAgfVxuXG4gIC8qKiBOby1vcCBpbXBsZW1lbnRhdGlvbiBvZiB0aGlzIG1ldGhvZC4gKi9cbiAgc3RhcnQoKSB7XG4gICAgc3VwZXIuc3RhcnQoKTtcbiAgfVxuXG4gIC8qKiBOby1vcCBpbXBsZW1lbnRhdGlvbiBvZiB0aGlzIG1ldGhvZC4gKi9cbiAgZW5kKCkge1xuICAgIHN1cGVyLmVuZCgpO1xuICB9XG59XG4iXX0=
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
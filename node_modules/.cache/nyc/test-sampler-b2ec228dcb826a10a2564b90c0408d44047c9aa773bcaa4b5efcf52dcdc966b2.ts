"use strict";/**
 * Copyright 2018, OpenCensus Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function cov_ntbzssueq(){var path="/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/test/test-sampler.ts";var hash="a6f65054ddc728056720d96f5ddf7b8d1b4c848e";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/test/test-sampler.ts",statementMap:{"0":{start:{line:17,column:0},end:{line:17,column:62}},"1":{start:{line:18,column:15},end:{line:18,column:32}},"2":{start:{line:19,column:14},end:{line:19,column:31}},"3":{start:{line:20,column:20},end:{line:20,column:59}},"4":{start:{line:21,column:17},end:{line:21,column:53}},"5":{start:{line:22,column:18},end:{line:22,column:57}},"6":{start:{line:23,column:15},end:{line:23,column:40}},"7":{start:{line:24,column:24},end:{line:29,column:1}},"8":{start:{line:30,column:0},end:{line:120,column:3}},"9":{start:{line:31,column:17},end:{line:31,column:29}},"10":{start:{line:32,column:17},end:{line:32,column:38}},"11":{start:{line:33,column:20},end:{line:33,column:54}},"12":{start:{line:34,column:25},end:{line:34,column:27}},"13":{start:{line:38,column:4},end:{line:53,column:7}},"14":{start:{line:39,column:8},end:{line:45,column:11}},"15":{start:{line:40,column:25},end:{line:40,column:92}},"16":{start:{line:41,column:28},end:{line:41,column:66}},"17":{start:{line:42,column:40},end:{line:42,column:74}},"18":{start:{line:43,column:12},end:{line:43,column:62}},"19":{start:{line:44,column:12},end:{line:44,column:43}},"20":{start:{line:46,column:8},end:{line:52,column:11}},"21":{start:{line:47,column:25},end:{line:47,column:92}},"22":{start:{line:48,column:28},end:{line:48,column:68}},"23":{start:{line:49,column:40},end:{line:49,column:74}},"24":{start:{line:50,column:12},end:{line:50,column:62}},"25":{start:{line:51,column:12},end:{line:51,column:43}},"26":{start:{line:57,column:4},end:{line:72,column:7}},"27":{start:{line:58,column:8},end:{line:64,column:11}},"28":{start:{line:59,column:25},end:{line:59,column:92}},"29":{start:{line:60,column:28},end:{line:60,column:66}},"30":{start:{line:61,column:40},end:{line:61,column:74}},"31":{start:{line:62,column:12},end:{line:62,column:61}},"32":{start:{line:63,column:12},end:{line:63,column:44}},"33":{start:{line:65,column:8},end:{line:71,column:11}},"34":{start:{line:66,column:25},end:{line:66,column:92}},"35":{start:{line:67,column:28},end:{line:67,column:67}},"36":{start:{line:68,column:40},end:{line:68,column:74}},"37":{start:{line:69,column:12},end:{line:69,column:61}},"38":{start:{line:70,column:12},end:{line:70,column:44}},"39":{start:{line:73,column:4},end:{line:99,column:7}},"40":{start:{line:74,column:8},end:{line:77,column:11}},"41":{start:{line:75,column:28},end:{line:75,column:68}},"42":{start:{line:76,column:12},end:{line:76,column:71}},"43":{start:{line:78,column:8},end:{line:98,column:11}},"44":{start:{line:79,column:28},end:{line:79,column:68}},"45":{start:{line:80,column:33},end:{line:84,column:13}},"46":{start:{line:85,column:12},end:{line:88,column:15}},"47":{start:{line:86,column:44},end:{line:86,column:73}},"48":{start:{line:87,column:16},end:{line:87,column:93}},"49":{start:{line:89,column:36},end:{line:93,column:13}},"50":{start:{line:94,column:12},end:{line:97,column:15}},"51":{start:{line:95,column:44},end:{line:95,column:73}},"52":{start:{line:96,column:16},end:{line:96,column:95}},"53":{start:{line:100,column:4},end:{line:104,column:7}},"54":{start:{line:101,column:8},end:{line:103,column:11}},"55":{start:{line:102,column:12},end:{line:102,column:117}},"56":{start:{line:105,column:4},end:{line:109,column:7}},"57":{start:{line:106,column:8},end:{line:108,column:11}},"58":{start:{line:107,column:12},end:{line:107,column:113}},"59":{start:{line:110,column:4},end:{line:114,column:7}},"60":{start:{line:111,column:8},end:{line:113,column:11}},"61":{start:{line:112,column:12},end:{line:112,column:111}},"62":{start:{line:115,column:4},end:{line:119,column:7}},"63":{start:{line:116,column:8},end:{line:118,column:11}},"64":{start:{line:117,column:12},end:{line:117,column:105}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:30,column:20},end:{line:30,column:21}},loc:{start:{line:30,column:26},end:{line:120,column:1}},line:30},"1":{name:"(anonymous_1)",decl:{start:{line:38,column:38},end:{line:38,column:39}},loc:{start:{line:38,column:44},end:{line:53,column:5}},line:38},"2":{name:"(anonymous_2)",decl:{start:{line:39,column:51},end:{line:39,column:52}},loc:{start:{line:39,column:57},end:{line:45,column:9}},line:39},"3":{name:"(anonymous_3)",decl:{start:{line:46,column:52},end:{line:46,column:53}},loc:{start:{line:46,column:58},end:{line:52,column:9}},line:46},"4":{name:"(anonymous_4)",decl:{start:{line:57,column:37},end:{line:57,column:38}},loc:{start:{line:57,column:43},end:{line:72,column:5}},line:57},"5":{name:"(anonymous_5)",decl:{start:{line:58,column:50},end:{line:58,column:51}},loc:{start:{line:58,column:56},end:{line:64,column:9}},line:58},"6":{name:"(anonymous_6)",decl:{start:{line:65,column:63},end:{line:65,column:64}},loc:{start:{line:65,column:69},end:{line:71,column:9}},line:65},"7":{name:"(anonymous_7)",decl:{start:{line:73,column:43},end:{line:73,column:44}},loc:{start:{line:73,column:49},end:{line:99,column:5}},line:73},"8":{name:"(anonymous_8)",decl:{start:{line:74,column:50},end:{line:74,column:51}},loc:{start:{line:74,column:56},end:{line:77,column:9}},line:74},"9":{name:"(anonymous_9)",decl:{start:{line:78,column:80},end:{line:78,column:81}},loc:{start:{line:78,column:86},end:{line:98,column:9}},line:78},"10":{name:"(anonymous_10)",decl:{start:{line:85,column:33},end:{line:85,column:34}},loc:{start:{line:85,column:44},end:{line:88,column:13}},line:85},"11":{name:"(anonymous_11)",decl:{start:{line:94,column:36},end:{line:94,column:37}},loc:{start:{line:94,column:47},end:{line:97,column:13}},line:94},"12":{name:"(anonymous_12)",decl:{start:{line:100,column:51},end:{line:100,column:52}},loc:{start:{line:100,column:57},end:{line:104,column:5}},line:100},"13":{name:"(anonymous_13)",decl:{start:{line:101,column:32},end:{line:101,column:33}},loc:{start:{line:101,column:38},end:{line:103,column:9}},line:101},"14":{name:"(anonymous_14)",decl:{start:{line:105,column:48},end:{line:105,column:49}},loc:{start:{line:105,column:54},end:{line:109,column:5}},line:105},"15":{name:"(anonymous_15)",decl:{start:{line:106,column:30},end:{line:106,column:31}},loc:{start:{line:106,column:36},end:{line:108,column:9}},line:106},"16":{name:"(anonymous_16)",decl:{start:{line:110,column:45},end:{line:110,column:46}},loc:{start:{line:110,column:51},end:{line:114,column:5}},line:110},"17":{name:"(anonymous_17)",decl:{start:{line:111,column:31},end:{line:111,column:32}},loc:{start:{line:111,column:37},end:{line:113,column:9}},line:111},"18":{name:"(anonymous_18)",decl:{start:{line:115,column:40},end:{line:115,column:41}},loc:{start:{line:115,column:46},end:{line:119,column:5}},line:115},"19":{name:"(anonymous_19)",decl:{start:{line:116,column:30},end:{line:116,column:31}},loc:{start:{line:116,column:36},end:{line:118,column:9}},line:116}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},b:{},inputSourceMap:{version:3,file:"/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/test/test-sampler.ts",sources:["/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/test/test-sampler.ts"],names:[],mappings:"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",sourcesContent:["/**\n * Copyright 2018, OpenCensus Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assert from 'assert';\nimport { SpanKind } from '../src';\nimport { TraceParams } from '../src/trace/config/types';\nimport { RootSpan } from '../src/trace/model/root-span';\nimport { CoreTracer } from '../src/trace/model/tracer';\nimport {\n  SamplerBuilder,\n  TraceParamsBuilder,\n} from '../src/trace/sampler/sampler';\n\nconst tracer = new CoreTracer();\n\nconst traceParameters: TraceParams = {\n  numberOfAnnontationEventsPerSpan: 12,\n  numberOfAttributesPerSpan: 10,\n  numberOfLinksPerSpan: 7,\n  numberOfMessageEventsPerSpan: 5,\n};\n\ndescribe('Sampler', () => {\n  const name = 'MySpanName';\n  const kind = SpanKind.SERVER;\n  const traceId = 'd4cda95b652f4a1592b449d5929fda1b';\n  const parentSpanId = '';\n\n  /**\n   * Should return true\n   */\n  describe('shouldSample() always', () => {\n    it('should return a always sampler for 1', () => {\n      const root = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      const sampler = SamplerBuilder.getSampler(1);\n      const samplerShouldSample = sampler.shouldSample(root.traceId);\n      assert.strictEqual(sampler.description, 'always');\n      assert.ok(samplerShouldSample);\n    });\n    it('should return a always sampler for >1', () => {\n      const root = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      const sampler = SamplerBuilder.getSampler(100);\n      const samplerShouldSample = sampler.shouldSample(root.traceId);\n      assert.strictEqual(sampler.description, 'always');\n      assert.ok(samplerShouldSample);\n    });\n  });\n  /**\n   * Should return false\n   */\n  describe('shouldSample() never', () => {\n    it('should return a never sampler for 0', () => {\n      const root = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      const sampler = SamplerBuilder.getSampler(0);\n      const samplerShouldSample = sampler.shouldSample(root.traceId);\n      assert.strictEqual(sampler.description, 'never');\n      assert.ok(!samplerShouldSample);\n    });\n    it('should return a never sampler for negative value', () => {\n      const root = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      const sampler = SamplerBuilder.getSampler(-1);\n      const samplerShouldSample = sampler.shouldSample(root.traceId);\n      assert.strictEqual(sampler.description, 'never');\n      assert.ok(!samplerShouldSample);\n    });\n  });\n\n  describe('shouldSample() probability', () => {\n    it('should return a probability sampler', () => {\n      const sampler = SamplerBuilder.getSampler(0.7);\n      assert.ok(sampler.description.indexOf('probability') >= 0);\n    });\n    it('should accept and reject traces based on last 26 bytes of traceId', () => {\n      const sampler = SamplerBuilder.getSampler(0.5);\n\n      const shouldSample = [\n        '11111111111111111110000000000000',\n        '1111111111111111111000ffffffffff',\n        '11111111111111111117ffffffffffff',\n      ];\n      shouldSample.forEach(traceId => {\n        const samplerShouldSample = sampler.shouldSample(traceId);\n        assert.ok(\n          samplerShouldSample,\n          `should have sampled but didn't: ${traceId}`\n        );\n      });\n\n      const shouldNotSample = [\n        '11111111111111111118000000000000',\n        '11111111111111111118000fffffffff',\n        '1111111111111111111fffffffffffff',\n      ];\n      shouldNotSample.forEach(traceId => {\n        const samplerShouldSample = sampler.shouldSample(traceId);\n        assert.ok(\n          !samplerShouldSample,\n          `should not have sampled but did: ${traceId}`\n        );\n      });\n    });\n  });\n  describe('getNumberOfAnnotationEventsPerSpan', () => {\n    it('should return  12', () => {\n      assert.strictEqual(\n        TraceParamsBuilder.getNumberOfAnnotationEventsPerSpan(traceParameters),\n        12\n      );\n    });\n  });\n  describe('getNumberOfMessageEventsPerSpan', () => {\n    it('should return 5', () => {\n      assert.strictEqual(\n        TraceParamsBuilder.getNumberOfMessageEventsPerSpan(traceParameters),\n        5\n      );\n    });\n  });\n  describe('getNumberOfAttributesPerSpan', () => {\n    it('should return 10', () => {\n      assert.strictEqual(\n        TraceParamsBuilder.getNumberOfAttributesPerSpan(traceParameters),\n        10\n      );\n    });\n  });\n  describe('getNumberOfLinksPerSpan', () => {\n    it('should return 7', () => {\n      assert.strictEqual(\n        TraceParamsBuilder.getNumberOfLinksPerSpan(traceParameters),\n        7\n      );\n    });\n  });\n});\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"a6f65054ddc728056720d96f5ddf7b8d1b4c848e"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_ntbzssueq=function(){return actualCoverage;};}return actualCoverage;}cov_ntbzssueq();cov_ntbzssueq().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const assert=(cov_ntbzssueq().s[1]++,require("assert"));const src_1=(cov_ntbzssueq().s[2]++,require("../src"));const root_span_1=(cov_ntbzssueq().s[3]++,require("../src/trace/model/root-span"));const tracer_1=(cov_ntbzssueq().s[4]++,require("../src/trace/model/tracer"));const sampler_1=(cov_ntbzssueq().s[5]++,require("../src/trace/sampler/sampler"));const tracer=(cov_ntbzssueq().s[6]++,new tracer_1.CoreTracer());const traceParameters=(cov_ntbzssueq().s[7]++,{numberOfAnnontationEventsPerSpan:12,numberOfAttributesPerSpan:10,numberOfLinksPerSpan:7,numberOfMessageEventsPerSpan:5});cov_ntbzssueq().s[8]++;describe('Sampler',()=>{cov_ntbzssueq().f[0]++;const name=(cov_ntbzssueq().s[9]++,'MySpanName');const kind=(cov_ntbzssueq().s[10]++,src_1.SpanKind.SERVER);const traceId=(cov_ntbzssueq().s[11]++,'d4cda95b652f4a1592b449d5929fda1b');const parentSpanId=(cov_ntbzssueq().s[12]++,'');/**
     * Should return true
     */cov_ntbzssueq().s[13]++;describe('shouldSample() always',()=>{cov_ntbzssueq().f[1]++;cov_ntbzssueq().s[14]++;it('should return a always sampler for 1',()=>{cov_ntbzssueq().f[2]++;const root=(cov_ntbzssueq().s[15]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));const sampler=(cov_ntbzssueq().s[16]++,sampler_1.SamplerBuilder.getSampler(1));const samplerShouldSample=(cov_ntbzssueq().s[17]++,sampler.shouldSample(root.traceId));cov_ntbzssueq().s[18]++;assert.strictEqual(sampler.description,'always');cov_ntbzssueq().s[19]++;assert.ok(samplerShouldSample);});cov_ntbzssueq().s[20]++;it('should return a always sampler for >1',()=>{cov_ntbzssueq().f[3]++;const root=(cov_ntbzssueq().s[21]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));const sampler=(cov_ntbzssueq().s[22]++,sampler_1.SamplerBuilder.getSampler(100));const samplerShouldSample=(cov_ntbzssueq().s[23]++,sampler.shouldSample(root.traceId));cov_ntbzssueq().s[24]++;assert.strictEqual(sampler.description,'always');cov_ntbzssueq().s[25]++;assert.ok(samplerShouldSample);});});/**
     * Should return false
     */cov_ntbzssueq().s[26]++;describe('shouldSample() never',()=>{cov_ntbzssueq().f[4]++;cov_ntbzssueq().s[27]++;it('should return a never sampler for 0',()=>{cov_ntbzssueq().f[5]++;const root=(cov_ntbzssueq().s[28]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));const sampler=(cov_ntbzssueq().s[29]++,sampler_1.SamplerBuilder.getSampler(0));const samplerShouldSample=(cov_ntbzssueq().s[30]++,sampler.shouldSample(root.traceId));cov_ntbzssueq().s[31]++;assert.strictEqual(sampler.description,'never');cov_ntbzssueq().s[32]++;assert.ok(!samplerShouldSample);});cov_ntbzssueq().s[33]++;it('should return a never sampler for negative value',()=>{cov_ntbzssueq().f[6]++;const root=(cov_ntbzssueq().s[34]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));const sampler=(cov_ntbzssueq().s[35]++,sampler_1.SamplerBuilder.getSampler(-1));const samplerShouldSample=(cov_ntbzssueq().s[36]++,sampler.shouldSample(root.traceId));cov_ntbzssueq().s[37]++;assert.strictEqual(sampler.description,'never');cov_ntbzssueq().s[38]++;assert.ok(!samplerShouldSample);});});cov_ntbzssueq().s[39]++;describe('shouldSample() probability',()=>{cov_ntbzssueq().f[7]++;cov_ntbzssueq().s[40]++;it('should return a probability sampler',()=>{cov_ntbzssueq().f[8]++;const sampler=(cov_ntbzssueq().s[41]++,sampler_1.SamplerBuilder.getSampler(0.7));cov_ntbzssueq().s[42]++;assert.ok(sampler.description.indexOf('probability')>=0);});cov_ntbzssueq().s[43]++;it('should accept and reject traces based on last 26 bytes of traceId',()=>{cov_ntbzssueq().f[9]++;const sampler=(cov_ntbzssueq().s[44]++,sampler_1.SamplerBuilder.getSampler(0.5));const shouldSample=(cov_ntbzssueq().s[45]++,['11111111111111111110000000000000','1111111111111111111000ffffffffff','11111111111111111117ffffffffffff']);cov_ntbzssueq().s[46]++;shouldSample.forEach(traceId=>{cov_ntbzssueq().f[10]++;const samplerShouldSample=(cov_ntbzssueq().s[47]++,sampler.shouldSample(traceId));cov_ntbzssueq().s[48]++;assert.ok(samplerShouldSample,`should have sampled but didn't: ${traceId}`);});const shouldNotSample=(cov_ntbzssueq().s[49]++,['11111111111111111118000000000000','11111111111111111118000fffffffff','1111111111111111111fffffffffffff']);cov_ntbzssueq().s[50]++;shouldNotSample.forEach(traceId=>{cov_ntbzssueq().f[11]++;const samplerShouldSample=(cov_ntbzssueq().s[51]++,sampler.shouldSample(traceId));cov_ntbzssueq().s[52]++;assert.ok(!samplerShouldSample,`should not have sampled but did: ${traceId}`);});});});cov_ntbzssueq().s[53]++;describe('getNumberOfAnnotationEventsPerSpan',()=>{cov_ntbzssueq().f[12]++;cov_ntbzssueq().s[54]++;it('should return  12',()=>{cov_ntbzssueq().f[13]++;cov_ntbzssueq().s[55]++;assert.strictEqual(sampler_1.TraceParamsBuilder.getNumberOfAnnotationEventsPerSpan(traceParameters),12);});});cov_ntbzssueq().s[56]++;describe('getNumberOfMessageEventsPerSpan',()=>{cov_ntbzssueq().f[14]++;cov_ntbzssueq().s[57]++;it('should return 5',()=>{cov_ntbzssueq().f[15]++;cov_ntbzssueq().s[58]++;assert.strictEqual(sampler_1.TraceParamsBuilder.getNumberOfMessageEventsPerSpan(traceParameters),5);});});cov_ntbzssueq().s[59]++;describe('getNumberOfAttributesPerSpan',()=>{cov_ntbzssueq().f[16]++;cov_ntbzssueq().s[60]++;it('should return 10',()=>{cov_ntbzssueq().f[17]++;cov_ntbzssueq().s[61]++;assert.strictEqual(sampler_1.TraceParamsBuilder.getNumberOfAttributesPerSpan(traceParameters),10);});});cov_ntbzssueq().s[62]++;describe('getNumberOfLinksPerSpan',()=>{cov_ntbzssueq().f[18]++;cov_ntbzssueq().s[63]++;it('should return 7',()=>{cov_ntbzssueq().f[19]++;cov_ntbzssueq().s[64]++;assert.strictEqual(sampler_1.TraceParamsBuilder.getNumberOfLinksPerSpan(traceParameters),7);});});});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3VzZXJtYWl0aGEvdHJhZGVtYXN0ZXIvbGlicy9saWItZXh0ZXJuYWwtb3BlbmNlbnN1cy1ub2RlL3Rlc3QvdGVzdC1zYW1wbGVyLnRzIiwic291cmNlcyI6WyIvVXNlcnMvdXNlcm1haXRoYS90cmFkZW1hc3Rlci9saWJzL2xpYi1leHRlcm5hbC1vcGVuY2Vuc3VzLW5vZGUvdGVzdC90ZXN0LXNhbXBsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7Ozs7Ozs7Ozs7OztHQWNHOztBQUVILGlDQUFpQztBQUNqQyxnQ0FBa0M7QUFFbEMsNERBQXdEO0FBQ3hELHNEQUF1RDtBQUN2RCwwREFHc0M7QUFFdEMsTUFBTSxNQUFNLEdBQUcsSUFBSSxtQkFBVSxFQUFFLENBQUM7QUFFaEMsTUFBTSxlQUFlLEdBQWdCO0lBQ25DLGdDQUFnQyxFQUFFLEVBQUU7SUFDcEMseUJBQXlCLEVBQUUsRUFBRTtJQUM3QixvQkFBb0IsRUFBRSxDQUFDO0lBQ3ZCLDRCQUE0QixFQUFFLENBQUM7Q0FDaEMsQ0FBQztBQUVGLFFBQVEsQ0FBQyxTQUFTLEVBQUUsR0FBRyxFQUFFO0lBQ3ZCLE1BQU0sSUFBSSxHQUFHLFlBQVksQ0FBQztJQUMxQixNQUFNLElBQUksR0FBRyxjQUFRLENBQUMsTUFBTSxDQUFDO0lBQzdCLE1BQU0sT0FBTyxHQUFHLGtDQUFrQyxDQUFDO0lBQ25ELE1BQU0sWUFBWSxHQUFHLEVBQUUsQ0FBQztJQUV4Qjs7T0FFRztJQUNILFFBQVEsQ0FBQyx1QkFBdUIsRUFBRSxHQUFHLEVBQUU7UUFDckMsRUFBRSxDQUFDLHNDQUFzQyxFQUFFLEdBQUcsRUFBRTtZQUM5QyxNQUFNLElBQUksR0FBRyxJQUFJLG9CQUFRLENBQUMsTUFBTSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLFlBQVksQ0FBQyxDQUFDO1lBQ3JFLE1BQU0sT0FBTyxHQUFHLHdCQUFjLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzdDLE1BQU0sbUJBQW1CLEdBQUcsT0FBTyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7WUFDL0QsTUFBTSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsV0FBVyxFQUFFLFFBQVEsQ0FBQyxDQUFDO1lBQ2xELE1BQU0sQ0FBQyxFQUFFLENBQUMsbUJBQW1CLENBQUMsQ0FBQztRQUNqQyxDQUFDLENBQUMsQ0FBQztRQUNILEVBQUUsQ0FBQyx1Q0FBdUMsRUFBRSxHQUFHLEVBQUU7WUFDL0MsTUFBTSxJQUFJLEdBQUcsSUFBSSxvQkFBUSxDQUFDLE1BQU0sRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxZQUFZLENBQUMsQ0FBQztZQUNyRSxNQUFNLE9BQU8sR0FBRyx3QkFBYyxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUMvQyxNQUFNLG1CQUFtQixHQUFHLE9BQU8sQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBQy9ELE1BQU0sQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRSxRQUFRLENBQUMsQ0FBQztZQUNsRCxNQUFNLENBQUMsRUFBRSxDQUFDLG1CQUFtQixDQUFDLENBQUM7UUFDakMsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDLENBQUMsQ0FBQztJQUNIOztPQUVHO0lBQ0gsUUFBUSxDQUFDLHNCQUFzQixFQUFFLEdBQUcsRUFBRTtRQUNwQyxFQUFFLENBQUMscUNBQXFDLEVBQUUsR0FBRyxFQUFFO1lBQzdDLE1BQU0sSUFBSSxHQUFHLElBQUksb0JBQVEsQ0FBQyxNQUFNLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsWUFBWSxDQUFDLENBQUM7WUFDckUsTUFBTSxPQUFPLEdBQUcsd0JBQWMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDN0MsTUFBTSxtQkFBbUIsR0FBRyxPQUFPLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztZQUMvRCxNQUFNLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsT0FBTyxDQUFDLENBQUM7WUFDakQsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDLG1CQUFtQixDQUFDLENBQUM7UUFDbEMsQ0FBQyxDQUFDLENBQUM7UUFDSCxFQUFFLENBQUMsa0RBQWtELEVBQUUsR0FBRyxFQUFFO1lBQzFELE1BQU0sSUFBSSxHQUFHLElBQUksb0JBQVEsQ0FBQyxNQUFNLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsWUFBWSxDQUFDLENBQUM7WUFDckUsTUFBTSxPQUFPLEdBQUcsd0JBQWMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUM5QyxNQUFNLG1CQUFtQixHQUFHLE9BQU8sQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBQy9ELE1BQU0sQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRSxPQUFPLENBQUMsQ0FBQztZQUNqRCxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUMsbUJBQW1CLENBQUMsQ0FBQztRQUNsQyxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUMsQ0FBQyxDQUFDO0lBRUgsUUFBUSxDQUFDLDRCQUE0QixFQUFFLEdBQUcsRUFBRTtRQUMxQyxFQUFFLENBQUMscUNBQXFDLEVBQUUsR0FBRyxFQUFFO1lBQzdDLE1BQU0sT0FBTyxHQUFHLHdCQUFjLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQy9DLE1BQU0sQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7UUFDN0QsQ0FBQyxDQUFDLENBQUM7UUFDSCxFQUFFLENBQUMsbUVBQW1FLEVBQUUsR0FBRyxFQUFFO1lBQzNFLE1BQU0sT0FBTyxHQUFHLHdCQUFjLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBRS9DLE1BQU0sWUFBWSxHQUFHO2dCQUNuQixrQ0FBa0M7Z0JBQ2xDLGtDQUFrQztnQkFDbEMsa0NBQWtDO2FBQ25DLENBQUM7WUFDRixZQUFZLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFO2dCQUM3QixNQUFNLG1CQUFtQixHQUFHLE9BQU8sQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLENBQUM7Z0JBQzFELE1BQU0sQ0FBQyxFQUFFLENBQ1AsbUJBQW1CLEVBQ25CLG1DQUFtQyxPQUFPLEVBQUUsQ0FDN0MsQ0FBQztZQUNKLENBQUMsQ0FBQyxDQUFDO1lBRUgsTUFBTSxlQUFlLEdBQUc7Z0JBQ3RCLGtDQUFrQztnQkFDbEMsa0NBQWtDO2dCQUNsQyxrQ0FBa0M7YUFDbkMsQ0FBQztZQUNGLGVBQWUsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQUU7Z0JBQ2hDLE1BQU0sbUJBQW1CLEdBQUcsT0FBTyxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsQ0FBQztnQkFDMUQsTUFBTSxDQUFDLEVBQUUsQ0FDUCxDQUFDLG1CQUFtQixFQUNwQixvQ0FBb0MsT0FBTyxFQUFFLENBQzlDLENBQUM7WUFDSixDQUFDLENBQUMsQ0FBQztRQUNMLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQyxDQUFDLENBQUM7SUFDSCxRQUFRLENBQUMsb0NBQW9DLEVBQUUsR0FBRyxFQUFFO1FBQ2xELEVBQUUsQ0FBQyxtQkFBbUIsRUFBRSxHQUFHLEVBQUU7WUFDM0IsTUFBTSxDQUFDLFdBQVcsQ0FDaEIsNEJBQWtCLENBQUMsa0NBQWtDLENBQUMsZUFBZSxDQUFDLEVBQ3RFLEVBQUUsQ0FDSCxDQUFDO1FBQ0osQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDLENBQUMsQ0FBQztJQUNILFFBQVEsQ0FBQyxpQ0FBaUMsRUFBRSxHQUFHLEVBQUU7UUFDL0MsRUFBRSxDQUFDLGlCQUFpQixFQUFFLEdBQUcsRUFBRTtZQUN6QixNQUFNLENBQUMsV0FBVyxDQUNoQiw0QkFBa0IsQ0FBQywrQkFBK0IsQ0FBQyxlQUFlLENBQUMsRUFDbkUsQ0FBQyxDQUNGLENBQUM7UUFDSixDQUFDLENBQUMsQ0FBQztJQUNMLENBQUMsQ0FBQyxDQUFDO0lBQ0gsUUFBUSxDQUFDLDhCQUE4QixFQUFFLEdBQUcsRUFBRTtRQUM1QyxFQUFFLENBQUMsa0JBQWtCLEVBQUUsR0FBRyxFQUFFO1lBQzFCLE1BQU0sQ0FBQyxXQUFXLENBQ2hCLDRCQUFrQixDQUFDLDRCQUE0QixDQUFDLGVBQWUsQ0FBQyxFQUNoRSxFQUFFLENBQ0gsQ0FBQztRQUNKLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQyxDQUFDLENBQUM7SUFDSCxRQUFRLENBQUMseUJBQXlCLEVBQUUsR0FBRyxFQUFFO1FBQ3ZDLEVBQUUsQ0FBQyxpQkFBaUIsRUFBRSxHQUFHLEVBQUU7WUFDekIsTUFBTSxDQUFDLFdBQVcsQ0FDaEIsNEJBQWtCLENBQUMsdUJBQXVCLENBQUMsZUFBZSxDQUFDLEVBQzNELENBQUMsQ0FDRixDQUFDO1FBQ0osQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDLENBQUMsQ0FBQztBQUNMLENBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgMjAxOCwgT3BlbkNlbnN1cyBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgKiBhcyBhc3NlcnQgZnJvbSAnYXNzZXJ0JztcbmltcG9ydCB7IFNwYW5LaW5kIH0gZnJvbSAnLi4vc3JjJztcbmltcG9ydCB7IFRyYWNlUGFyYW1zIH0gZnJvbSAnLi4vc3JjL3RyYWNlL2NvbmZpZy90eXBlcyc7XG5pbXBvcnQgeyBSb290U3BhbiB9IGZyb20gJy4uL3NyYy90cmFjZS9tb2RlbC9yb290LXNwYW4nO1xuaW1wb3J0IHsgQ29yZVRyYWNlciB9IGZyb20gJy4uL3NyYy90cmFjZS9tb2RlbC90cmFjZXInO1xuaW1wb3J0IHtcbiAgU2FtcGxlckJ1aWxkZXIsXG4gIFRyYWNlUGFyYW1zQnVpbGRlcixcbn0gZnJvbSAnLi4vc3JjL3RyYWNlL3NhbXBsZXIvc2FtcGxlcic7XG5cbmNvbnN0IHRyYWNlciA9IG5ldyBDb3JlVHJhY2VyKCk7XG5cbmNvbnN0IHRyYWNlUGFyYW1ldGVyczogVHJhY2VQYXJhbXMgPSB7XG4gIG51bWJlck9mQW5ub250YXRpb25FdmVudHNQZXJTcGFuOiAxMixcbiAgbnVtYmVyT2ZBdHRyaWJ1dGVzUGVyU3BhbjogMTAsXG4gIG51bWJlck9mTGlua3NQZXJTcGFuOiA3LFxuICBudW1iZXJPZk1lc3NhZ2VFdmVudHNQZXJTcGFuOiA1LFxufTtcblxuZGVzY3JpYmUoJ1NhbXBsZXInLCAoKSA9PiB7XG4gIGNvbnN0IG5hbWUgPSAnTXlTcGFuTmFtZSc7XG4gIGNvbnN0IGtpbmQgPSBTcGFuS2luZC5TRVJWRVI7XG4gIGNvbnN0IHRyYWNlSWQgPSAnZDRjZGE5NWI2NTJmNGExNTkyYjQ0OWQ1OTI5ZmRhMWInO1xuICBjb25zdCBwYXJlbnRTcGFuSWQgPSAnJztcblxuICAvKipcbiAgICogU2hvdWxkIHJldHVybiB0cnVlXG4gICAqL1xuICBkZXNjcmliZSgnc2hvdWxkU2FtcGxlKCkgYWx3YXlzJywgKCkgPT4ge1xuICAgIGl0KCdzaG91bGQgcmV0dXJuIGEgYWx3YXlzIHNhbXBsZXIgZm9yIDEnLCAoKSA9PiB7XG4gICAgICBjb25zdCByb290ID0gbmV3IFJvb3RTcGFuKHRyYWNlciwgbmFtZSwga2luZCwgdHJhY2VJZCwgcGFyZW50U3BhbklkKTtcbiAgICAgIGNvbnN0IHNhbXBsZXIgPSBTYW1wbGVyQnVpbGRlci5nZXRTYW1wbGVyKDEpO1xuICAgICAgY29uc3Qgc2FtcGxlclNob3VsZFNhbXBsZSA9IHNhbXBsZXIuc2hvdWxkU2FtcGxlKHJvb3QudHJhY2VJZCk7XG4gICAgICBhc3NlcnQuc3RyaWN0RXF1YWwoc2FtcGxlci5kZXNjcmlwdGlvbiwgJ2Fsd2F5cycpO1xuICAgICAgYXNzZXJ0Lm9rKHNhbXBsZXJTaG91bGRTYW1wbGUpO1xuICAgIH0pO1xuICAgIGl0KCdzaG91bGQgcmV0dXJuIGEgYWx3YXlzIHNhbXBsZXIgZm9yID4xJywgKCkgPT4ge1xuICAgICAgY29uc3Qgcm9vdCA9IG5ldyBSb290U3Bhbih0cmFjZXIsIG5hbWUsIGtpbmQsIHRyYWNlSWQsIHBhcmVudFNwYW5JZCk7XG4gICAgICBjb25zdCBzYW1wbGVyID0gU2FtcGxlckJ1aWxkZXIuZ2V0U2FtcGxlcigxMDApO1xuICAgICAgY29uc3Qgc2FtcGxlclNob3VsZFNhbXBsZSA9IHNhbXBsZXIuc2hvdWxkU2FtcGxlKHJvb3QudHJhY2VJZCk7XG4gICAgICBhc3NlcnQuc3RyaWN0RXF1YWwoc2FtcGxlci5kZXNjcmlwdGlvbiwgJ2Fsd2F5cycpO1xuICAgICAgYXNzZXJ0Lm9rKHNhbXBsZXJTaG91bGRTYW1wbGUpO1xuICAgIH0pO1xuICB9KTtcbiAgLyoqXG4gICAqIFNob3VsZCByZXR1cm4gZmFsc2VcbiAgICovXG4gIGRlc2NyaWJlKCdzaG91bGRTYW1wbGUoKSBuZXZlcicsICgpID0+IHtcbiAgICBpdCgnc2hvdWxkIHJldHVybiBhIG5ldmVyIHNhbXBsZXIgZm9yIDAnLCAoKSA9PiB7XG4gICAgICBjb25zdCByb290ID0gbmV3IFJvb3RTcGFuKHRyYWNlciwgbmFtZSwga2luZCwgdHJhY2VJZCwgcGFyZW50U3BhbklkKTtcbiAgICAgIGNvbnN0IHNhbXBsZXIgPSBTYW1wbGVyQnVpbGRlci5nZXRTYW1wbGVyKDApO1xuICAgICAgY29uc3Qgc2FtcGxlclNob3VsZFNhbXBsZSA9IHNhbXBsZXIuc2hvdWxkU2FtcGxlKHJvb3QudHJhY2VJZCk7XG4gICAgICBhc3NlcnQuc3RyaWN0RXF1YWwoc2FtcGxlci5kZXNjcmlwdGlvbiwgJ25ldmVyJyk7XG4gICAgICBhc3NlcnQub2soIXNhbXBsZXJTaG91bGRTYW1wbGUpO1xuICAgIH0pO1xuICAgIGl0KCdzaG91bGQgcmV0dXJuIGEgbmV2ZXIgc2FtcGxlciBmb3IgbmVnYXRpdmUgdmFsdWUnLCAoKSA9PiB7XG4gICAgICBjb25zdCByb290ID0gbmV3IFJvb3RTcGFuKHRyYWNlciwgbmFtZSwga2luZCwgdHJhY2VJZCwgcGFyZW50U3BhbklkKTtcbiAgICAgIGNvbnN0IHNhbXBsZXIgPSBTYW1wbGVyQnVpbGRlci5nZXRTYW1wbGVyKC0xKTtcbiAgICAgIGNvbnN0IHNhbXBsZXJTaG91bGRTYW1wbGUgPSBzYW1wbGVyLnNob3VsZFNhbXBsZShyb290LnRyYWNlSWQpO1xuICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKHNhbXBsZXIuZGVzY3JpcHRpb24sICduZXZlcicpO1xuICAgICAgYXNzZXJ0Lm9rKCFzYW1wbGVyU2hvdWxkU2FtcGxlKTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgZGVzY3JpYmUoJ3Nob3VsZFNhbXBsZSgpIHByb2JhYmlsaXR5JywgKCkgPT4ge1xuICAgIGl0KCdzaG91bGQgcmV0dXJuIGEgcHJvYmFiaWxpdHkgc2FtcGxlcicsICgpID0+IHtcbiAgICAgIGNvbnN0IHNhbXBsZXIgPSBTYW1wbGVyQnVpbGRlci5nZXRTYW1wbGVyKDAuNyk7XG4gICAgICBhc3NlcnQub2soc2FtcGxlci5kZXNjcmlwdGlvbi5pbmRleE9mKCdwcm9iYWJpbGl0eScpID49IDApO1xuICAgIH0pO1xuICAgIGl0KCdzaG91bGQgYWNjZXB0IGFuZCByZWplY3QgdHJhY2VzIGJhc2VkIG9uIGxhc3QgMjYgYnl0ZXMgb2YgdHJhY2VJZCcsICgpID0+IHtcbiAgICAgIGNvbnN0IHNhbXBsZXIgPSBTYW1wbGVyQnVpbGRlci5nZXRTYW1wbGVyKDAuNSk7XG5cbiAgICAgIGNvbnN0IHNob3VsZFNhbXBsZSA9IFtcbiAgICAgICAgJzExMTExMTExMTExMTExMTExMTEwMDAwMDAwMDAwMDAwJyxcbiAgICAgICAgJzExMTExMTExMTExMTExMTExMTEwMDBmZmZmZmZmZmZmJyxcbiAgICAgICAgJzExMTExMTExMTExMTExMTExMTE3ZmZmZmZmZmZmZmZmJyxcbiAgICAgIF07XG4gICAgICBzaG91bGRTYW1wbGUuZm9yRWFjaCh0cmFjZUlkID0+IHtcbiAgICAgICAgY29uc3Qgc2FtcGxlclNob3VsZFNhbXBsZSA9IHNhbXBsZXIuc2hvdWxkU2FtcGxlKHRyYWNlSWQpO1xuICAgICAgICBhc3NlcnQub2soXG4gICAgICAgICAgc2FtcGxlclNob3VsZFNhbXBsZSxcbiAgICAgICAgICBgc2hvdWxkIGhhdmUgc2FtcGxlZCBidXQgZGlkbid0OiAke3RyYWNlSWR9YFxuICAgICAgICApO1xuICAgICAgfSk7XG5cbiAgICAgIGNvbnN0IHNob3VsZE5vdFNhbXBsZSA9IFtcbiAgICAgICAgJzExMTExMTExMTExMTExMTExMTE4MDAwMDAwMDAwMDAwJyxcbiAgICAgICAgJzExMTExMTExMTExMTExMTExMTE4MDAwZmZmZmZmZmZmJyxcbiAgICAgICAgJzExMTExMTExMTExMTExMTExMTFmZmZmZmZmZmZmZmZmJyxcbiAgICAgIF07XG4gICAgICBzaG91bGROb3RTYW1wbGUuZm9yRWFjaCh0cmFjZUlkID0+IHtcbiAgICAgICAgY29uc3Qgc2FtcGxlclNob3VsZFNhbXBsZSA9IHNhbXBsZXIuc2hvdWxkU2FtcGxlKHRyYWNlSWQpO1xuICAgICAgICBhc3NlcnQub2soXG4gICAgICAgICAgIXNhbXBsZXJTaG91bGRTYW1wbGUsXG4gICAgICAgICAgYHNob3VsZCBub3QgaGF2ZSBzYW1wbGVkIGJ1dCBkaWQ6ICR7dHJhY2VJZH1gXG4gICAgICAgICk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfSk7XG4gIGRlc2NyaWJlKCdnZXROdW1iZXJPZkFubm90YXRpb25FdmVudHNQZXJTcGFuJywgKCkgPT4ge1xuICAgIGl0KCdzaG91bGQgcmV0dXJuICAxMicsICgpID0+IHtcbiAgICAgIGFzc2VydC5zdHJpY3RFcXVhbChcbiAgICAgICAgVHJhY2VQYXJhbXNCdWlsZGVyLmdldE51bWJlck9mQW5ub3RhdGlvbkV2ZW50c1BlclNwYW4odHJhY2VQYXJhbWV0ZXJzKSxcbiAgICAgICAgMTJcbiAgICAgICk7XG4gICAgfSk7XG4gIH0pO1xuICBkZXNjcmliZSgnZ2V0TnVtYmVyT2ZNZXNzYWdlRXZlbnRzUGVyU3BhbicsICgpID0+IHtcbiAgICBpdCgnc2hvdWxkIHJldHVybiA1JywgKCkgPT4ge1xuICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKFxuICAgICAgICBUcmFjZVBhcmFtc0J1aWxkZXIuZ2V0TnVtYmVyT2ZNZXNzYWdlRXZlbnRzUGVyU3Bhbih0cmFjZVBhcmFtZXRlcnMpLFxuICAgICAgICA1XG4gICAgICApO1xuICAgIH0pO1xuICB9KTtcbiAgZGVzY3JpYmUoJ2dldE51bWJlck9mQXR0cmlidXRlc1BlclNwYW4nLCAoKSA9PiB7XG4gICAgaXQoJ3Nob3VsZCByZXR1cm4gMTAnLCAoKSA9PiB7XG4gICAgICBhc3NlcnQuc3RyaWN0RXF1YWwoXG4gICAgICAgIFRyYWNlUGFyYW1zQnVpbGRlci5nZXROdW1iZXJPZkF0dHJpYnV0ZXNQZXJTcGFuKHRyYWNlUGFyYW1ldGVycyksXG4gICAgICAgIDEwXG4gICAgICApO1xuICAgIH0pO1xuICB9KTtcbiAgZGVzY3JpYmUoJ2dldE51bWJlck9mTGlua3NQZXJTcGFuJywgKCkgPT4ge1xuICAgIGl0KCdzaG91bGQgcmV0dXJuIDcnLCAoKSA9PiB7XG4gICAgICBhc3NlcnQuc3RyaWN0RXF1YWwoXG4gICAgICAgIFRyYWNlUGFyYW1zQnVpbGRlci5nZXROdW1iZXJPZkxpbmtzUGVyU3Bhbih0cmFjZVBhcmFtZXRlcnMpLFxuICAgICAgICA3XG4gICAgICApO1xuICAgIH0pO1xuICB9KTtcbn0pO1xuIl19
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
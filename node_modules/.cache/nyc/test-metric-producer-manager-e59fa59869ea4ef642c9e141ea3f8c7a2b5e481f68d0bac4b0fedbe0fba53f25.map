{"version":3,"file":"/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/test/test-metric-producer-manager.ts","sources":["/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/test/test-metric-producer-manager.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;AAEH,iCAAiC;AACjC,2FAA8F;AAC9F,oEAAgE;AAEhE,QAAQ,CAAC,yBAAyB,EAAE,GAAG,EAAE;IACvC,MAAM,QAAQ,GAAmB,IAAI,gCAAc,EAAE,CAAC;IACtD,MAAM,cAAc,GAAG,QAAQ,CAAC,iBAAiB,EAAE,CAAC;IACpD,MAAM,aAAa,GAAmB,IAAI,gCAAc,EAAE,CAAC;IAC3D,MAAM,mBAAmB,GAAG,aAAa,CAAC,iBAAiB,EAAE,CAAC;IAE9D,UAAU,CAAC,GAAG,EAAE;QACd,uDAA6B,CAAC,SAAS,EAAE,CAAC;IAC5C,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,OAAO,EAAE,GAAG,EAAE;QACrB,EAAE,CAAC,oBAAoB,EAAE,GAAG,EAAE;YAC5B,uDAA6B,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;YAClD,MAAM,kBAAkB,GAAG,uDAA6B,CAAC,oBAAoB,EAAE,CAAC;YAEhF,MAAM,CAAC,cAAc,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;YAChD,MAAM,CAAC,WAAW,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,kEAAkE,EAAE,GAAG,EAAE;YAC1E,uDAA6B,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;YAClD,uDAA6B,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;YAClD,uDAA6B,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;YAClD,MAAM,kBAAkB,GAAG,uDAA6B,CAAC,oBAAoB,EAAE,CAAC;YAEhF,MAAM,CAAC,WAAW,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC,EAAE,CAAC,kBAAkB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,mEAAmE,EAAE,GAAG,EAAE;YAC3E,uDAA6B,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;YAClD,uDAA6B,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;YACvD,MAAM,kBAAkB,GAAG,uDAA6B,CAAC,oBAAoB,EAAE,CAAC;YAEhF,MAAM,CAAC,WAAW,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC,EAAE,CAAC,kBAAkB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC;YAClD,MAAM,CAAC,EAAE,CAAC,kBAAkB,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,CAAC;QACzD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,UAAU,EAAE,GAAG,EAAE;QACxB,EAAE,CAAC,uBAAuB,EAAE,GAAG,EAAE;YAC/B,uDAA6B,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;YAElD,MAAM,kBAAkB,GAAG,uDAA6B,CAAC,oBAAoB,EAAE,CAAC;YAChF,MAAM,CAAC,WAAW,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC,EAAE,CAAC,kBAAkB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC;YAElD,uDAA6B,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;YACrD,MAAM,CAAC,WAAW,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/**\n * Copyright 2019, OpenCensus Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assert from 'assert';\nimport { metricProducerManagerInstance } from '../src/metrics/export/metric-producer-manager';\nimport { MetricRegistry } from '../src/metrics/metric-registry';\n\ndescribe('MetricProducerManager()', () => {\n  const registry: MetricRegistry = new MetricRegistry();\n  const metricProducer = registry.getMetricProducer();\n  const registryOther: MetricRegistry = new MetricRegistry();\n  const metricProducerOther = registryOther.getMetricProducer();\n\n  beforeEach(() => {\n    metricProducerManagerInstance.removeAll();\n  });\n\n  describe('add()', () => {\n    it('add metricproducer', () => {\n      metricProducerManagerInstance.add(metricProducer);\n      const metricProducerList = metricProducerManagerInstance.getAllMetricProducer();\n\n      assert.notStrictEqual(metricProducerList, null);\n      assert.strictEqual(metricProducerList.size, 1);\n    });\n\n    it('should not add same metricproducer metricProducerManagerInstance', () => {\n      metricProducerManagerInstance.add(metricProducer);\n      metricProducerManagerInstance.add(metricProducer);\n      metricProducerManagerInstance.add(metricProducer);\n      const metricProducerList = metricProducerManagerInstance.getAllMetricProducer();\n\n      assert.strictEqual(metricProducerList.size, 1);\n      assert.ok(metricProducerList.has(metricProducer));\n    });\n\n    it('should add different metricproducer metricProducerManagerInstance', () => {\n      metricProducerManagerInstance.add(metricProducer);\n      metricProducerManagerInstance.add(metricProducerOther);\n      const metricProducerList = metricProducerManagerInstance.getAllMetricProducer();\n\n      assert.strictEqual(metricProducerList.size, 2);\n      assert.ok(metricProducerList.has(metricProducer));\n      assert.ok(metricProducerList.has(metricProducerOther));\n    });\n  });\n\n  describe('remove()', () => {\n    it('remove metricproducer', () => {\n      metricProducerManagerInstance.add(metricProducer);\n\n      const metricProducerList = metricProducerManagerInstance.getAllMetricProducer();\n      assert.strictEqual(metricProducerList.size, 1);\n      assert.ok(metricProducerList.has(metricProducer));\n\n      metricProducerManagerInstance.remove(metricProducer);\n      assert.strictEqual(metricProducerList.size, 0);\n    });\n  });\n});\n"]}
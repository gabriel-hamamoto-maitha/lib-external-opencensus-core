{"version":3,"file":"/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/src/internal/string-utils.ts","sources":["/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/src/internal/string-utils.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;AAEH;;;GAGG;AACH,MAAa,WAAW;IACtB;;;;;OAKG;IACH,MAAM,CAAC,iBAAiB,CAAC,GAAW;QAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnC,MAAM,EAAE,GAAW,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,EAAE,CAAC,EAAE;gBACpC,OAAO,KAAK,CAAC;aACd;SACF;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;;;;OAKG;IACH,MAAM,CAAC,eAAe,CAAC,EAAU;QAC/B,OAAO,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,CAAC;IAChC,CAAC;CACF;AA1BD,kCA0BC","sourcesContent":["/**\n * Copyright 2018, OpenCensus Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Internal utility methods for working with tag keys, tag values, and metric\n * names.\n */\nexport class StringUtils {\n  /**\n   * Determines whether the String contains only printable characters.\n   *\n   * @param str The String to be validated.\n   * @returns Whether the String contains only printable characters.\n   */\n  static isPrintableString(str: string): boolean {\n    for (let i = 0; i < str.length; i++) {\n      const ch: string = str.charAt(i);\n      if (!StringUtils.isPrintableChar(ch)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Determines whether the Character is printable.\n   *\n   * @param ch The Character to be validated.\n   * @returns Whether the Character is printable.\n   */\n  static isPrintableChar(ch: string): boolean {\n    return ch >= ' ' && ch <= '~';\n  }\n}\n"]}
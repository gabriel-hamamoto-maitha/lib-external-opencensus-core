{"version":3,"file":"/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/test/test-metric-component.ts","sources":["/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/test/test-metric-component.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;AAEH,iCAAiC;AACjC,2FAA8F;AAC9F,sEAAmE;AACnE,oEAAgE;AAEhE,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;IAClC,IAAI,gBAAkC,CAAC;IAEvC,UAAU,CAAC,GAAG,EAAE;QACd,uDAA6B,CAAC,SAAS,EAAE,CAAC;QAC1C,gBAAgB,GAAG,IAAI,mCAAgB,EAAE,CAAC;IAC5C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yCAAyC,EAAE,GAAG,EAAE;QACjD,MAAM,CAAC,EAAE,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,YAAY,gCAAc,CAAC,CAAC;IAC5E,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wDAAwD,EAAE,GAAG,EAAE;QAChE,MAAM,CAAC,WAAW,CAChB,uDAA6B,CAAC,oBAAoB,EAAE,CAAC,IAAI,EACzD,CAAC,CACF,CAAC;QACF,MAAM,CAAC,EAAE,CACP,uDAA6B;aAC1B,oBAAoB,EAAE;aACtB,GAAG,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,CAAC,iBAAiB,EAAE,CAAC,CACjE,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/**\n * Copyright 2019, OpenCensus Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assert from 'assert';\nimport { metricProducerManagerInstance } from '../src/metrics/export/metric-producer-manager';\nimport { MetricsComponent } from '../src/metrics/metric-component';\nimport { MetricRegistry } from '../src/metrics/metric-registry';\n\ndescribe('MetricsComponent()', () => {\n  let metricsComponent: MetricsComponent;\n\n  beforeEach(() => {\n    metricProducerManagerInstance.removeAll();\n    metricsComponent = new MetricsComponent();\n  });\n\n  it('should return a MetricRegistry instance', () => {\n    assert.ok(metricsComponent.getMetricRegistry() instanceof MetricRegistry);\n  });\n\n  it('should register metricRegistry to MetricProducerManger', () => {\n    assert.strictEqual(\n      metricProducerManagerInstance.getAllMetricProducer().size,\n      1\n    );\n    assert.ok(\n      metricProducerManagerInstance\n        .getAllMetricProducer()\n        .has(metricsComponent.getMetricRegistry().getMetricProducer())\n    );\n  });\n});\n"]}
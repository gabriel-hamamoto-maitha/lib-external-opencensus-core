{"version":3,"file":"/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/test/test-exporter-buffer.ts","sources":["/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/test/test-exporter-buffer.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright 2018, OpenCensus Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assert from 'assert';\nimport { SpanKind } from '../src';\nimport * as logger from '../src/common/console-logger';\nimport { NoopExporter } from '../src/exporters/console-exporter';\nimport { ExporterBuffer } from '../src/exporters/exporter-buffer';\nimport { RootSpan } from '../src/trace/model/root-span';\nimport { CoreTracer } from '../src/trace/model/tracer';\n\nconst exporter = new NoopExporter();\nconst DEFAULT_BUFFER_SIZE = 3;\nconst DEFAULT_BUFFER_TIMEOUT = 2000; // time in milliseconds\nconst tracer = new CoreTracer().start({});\n\nconst defaultBufferConfig = {\n  bufferSize: DEFAULT_BUFFER_SIZE,\n  bufferTimeout: DEFAULT_BUFFER_TIMEOUT,\n  logger: logger.logger(),\n};\n\nconst name = 'MySpanName';\nconst kind = SpanKind.SERVER;\nconst traceId = 'd4cda95b652f4a1592b449d5929fda1b';\nconst parentSpanId = '';\n\nconst createRootSpans = (num: number): RootSpan[] => {\n  const rootSpans = [];\n  for (let i = 0; i < num; i++) {\n    const rootSpan = new RootSpan(\n      tracer,\n      `rootSpan.${i}`,\n      kind,\n      traceId,\n      parentSpanId\n    );\n    rootSpan.start();\n    for (let j = 0; j < 10; j++) {\n      rootSpan.startChildSpan({\n        name: `childSpan.${i}.${j}`,\n        kind: SpanKind.CLIENT,\n      });\n    }\n    rootSpans.push(rootSpan);\n  }\n  return rootSpans;\n};\n\ndescribe('ExporterBuffer', () => {\n  /**\n   * Should create a Buffer with exporter, DEFAULT_BUFFER_SIZE and\n   * DEFAULT_BUFFER_TIMEOUT\n   */\n  describe('new ExporterBuffer()', () => {\n    it('should create a Buffer instance', () => {\n      const buffer = new ExporterBuffer(exporter, defaultBufferConfig);\n      assert.ok(buffer instanceof ExporterBuffer);\n    });\n  });\n\n  /**\n   * Should return the Buffer\n   */\n  describe('setBufferSize', () => {\n    it('should set BufferSize', () => {\n      const buffer = new ExporterBuffer(exporter, defaultBufferConfig);\n      const newBufferSize = DEFAULT_BUFFER_SIZE + 10;\n      const bufferResize = buffer.setBufferSize(newBufferSize);\n      assert.ok(bufferResize instanceof ExporterBuffer);\n      assert.strictEqual(bufferResize.getBufferSize(), newBufferSize);\n    });\n  });\n\n  /**\n   * Should add one item to the Buffer\n   */\n  describe('addToBuffer', () => {\n    it('should add one item to the Buffer', () => {\n      const buffer = new ExporterBuffer(exporter, defaultBufferConfig);\n      buffer.addToBuffer(\n        new RootSpan(tracer, name, kind, traceId, parentSpanId)\n      );\n      assert.strictEqual(buffer.getQueue().length, 1);\n    });\n  });\n\n  /**\n   * Should force flush\n   */\n  describe('addToBuffer force flush ', () => {\n    it('should force flush', () => {\n      const buffer = new ExporterBuffer(exporter, defaultBufferConfig);\n      const rootSpans = createRootSpans(DEFAULT_BUFFER_SIZE);\n      for (const rootSpan of rootSpans) {\n        buffer.addToBuffer(rootSpan);\n      }\n      assert.strictEqual(buffer.getQueue().length, buffer.getBufferSize());\n      buffer.addToBuffer(\n        new RootSpan(tracer, name, kind, traceId, parentSpanId)\n      );\n      assert.strictEqual(buffer.getQueue().length, 0);\n    });\n  });\n\n  /**\n   * Should flush by timeout\n   */\n  describe('addToBuffer force flush by timeout ', () => {\n    it('should flush by timeout', done => {\n      const buffer = new ExporterBuffer(exporter, defaultBufferConfig);\n      buffer.addToBuffer(\n        new RootSpan(tracer, name, kind, traceId, parentSpanId)\n      );\n      assert.strictEqual(buffer.getQueue().length, 1);\n      setTimeout(() => {\n        assert.strictEqual(buffer.getQueue().length, 0);\n        done();\n      }, DEFAULT_BUFFER_TIMEOUT + 100);\n    }).timeout(5000);\n  });\n});\n"]}
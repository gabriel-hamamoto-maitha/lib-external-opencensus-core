"use strict";/**
 * Copyright 2019, OpenCensus Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function cov_26dwqovgad(){var path="/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/test/test-text-format.ts";var hash="09858263a7ca56680d152a5cd60c0d59a0feee65";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/test/test-text-format.ts",statementMap:{"0":{start:{line:17,column:0},end:{line:17,column:62}},"1":{start:{line:18,column:15},end:{line:18,column:32}},"2":{start:{line:19,column:14},end:{line:19,column:31}},"3":{start:{line:20,column:22},end:{line:20,column:68}},"4":{start:{line:21,column:11},end:{line:23,column:1}},"5":{start:{line:24,column:11},end:{line:26,column:1}},"6":{start:{line:27,column:11},end:{line:29,column:1}},"7":{start:{line:30,column:11},end:{line:32,column:1}},"8":{start:{line:33,column:0},end:{line:99,column:3}},"9":{start:{line:34,column:24},end:{line:34,column:42}},"10":{start:{line:35,column:25},end:{line:35,column:43}},"11":{start:{line:36,column:4},end:{line:36,column:29}},"12":{start:{line:37,column:27},end:{line:37,column:45}},"13":{start:{line:38,column:4},end:{line:38,column:31}},"14":{start:{line:39,column:4},end:{line:39,column:31}},"15":{start:{line:40,column:30},end:{line:40,column:69}},"16":{start:{line:41,column:33},end:{line:41,column:51}},"17":{start:{line:42,column:4},end:{line:42,column:56}},"18":{start:{line:43,column:4},end:{line:69,column:7}},"19":{start:{line:44,column:8},end:{line:47,column:11}},"20":{start:{line:45,column:31},end:{line:45,column:77}},"21":{start:{line:46,column:12},end:{line:46,column:47}},"22":{start:{line:48,column:8},end:{line:51,column:11}},"23":{start:{line:49,column:31},end:{line:49,column:78}},"24":{start:{line:50,column:12},end:{line:50,column:56}},"25":{start:{line:52,column:8},end:{line:55,column:11}},"26":{start:{line:53,column:31},end:{line:53,column:80}},"27":{start:{line:54,column:12},end:{line:54,column:62}},"28":{start:{line:56,column:8},end:{line:59,column:11}},"29":{start:{line:57,column:31},end:{line:57,column:86}},"30":{start:{line:58,column:12},end:{line:58,column:51}},"31":{start:{line:60,column:8},end:{line:68,column:11}},"32":{start:{line:61,column:25},end:{line:61,column:43}},"33":{start:{line:62,column:12},end:{line:64,column:13}},"34":{start:{line:62,column:25},end:{line:62,column:26}},"35":{start:{line:63,column:16},end:{line:63,column:73}},"36":{start:{line:65,column:12},end:{line:67,column:73}},"37":{start:{line:66,column:16},end:{line:66,column:56}},"38":{start:{line:70,column:4},end:{line:98,column:7}},"39":{start:{line:71,column:8},end:{line:74,column:11}},"40":{start:{line:72,column:39},end:{line:72,column:78}},"41":{start:{line:73,column:12},end:{line:73,column:68}},"42":{start:{line:75,column:8},end:{line:79,column:11}},"43":{start:{line:76,column:39},end:{line:76,column:83}},"44":{start:{line:77,column:12},end:{line:77,column:68}},"45":{start:{line:78,column:12},end:{line:78,column:69}},"46":{start:{line:80,column:8},end:{line:84,column:11}},"47":{start:{line:81,column:39},end:{line:81,column:89}},"48":{start:{line:82,column:12},end:{line:82,column:68}},"49":{start:{line:83,column:12},end:{line:83,column:71}},"50":{start:{line:85,column:8},end:{line:92,column:11}},"51":{start:{line:86,column:35},end:{line:86,column:53}},"52":{start:{line:87,column:12},end:{line:87,column:53}},"53":{start:{line:88,column:12},end:{line:88,column:66}},"54":{start:{line:89,column:39},end:{line:89,column:92}},"55":{start:{line:90,column:12},end:{line:90,column:68}},"56":{start:{line:91,column:12},end:{line:91,column:71}},"57":{start:{line:93,column:8},end:{line:97,column:11}},"58":{start:{line:94,column:12},end:{line:96,column:43}},"59":{start:{line:95,column:16},end:{line:95,column:67}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:33,column:35},end:{line:33,column:36}},loc:{start:{line:33,column:41},end:{line:99,column:1}},line:33},"1":{name:"(anonymous_1)",decl:{start:{line:43,column:36},end:{line:43,column:37}},loc:{start:{line:43,column:42},end:{line:69,column:5}},line:43},"2":{name:"(anonymous_2)",decl:{start:{line:44,column:45},end:{line:44,column:46}},loc:{start:{line:44,column:51},end:{line:47,column:9}},line:44},"3":{name:"(anonymous_3)",decl:{start:{line:48,column:48},end:{line:48,column:49}},loc:{start:{line:48,column:54},end:{line:51,column:9}},line:48},"4":{name:"(anonymous_4)",decl:{start:{line:52,column:49},end:{line:52,column:50}},loc:{start:{line:52,column:55},end:{line:55,column:9}},line:52},"5":{name:"(anonymous_5)",decl:{start:{line:56,column:46},end:{line:56,column:47}},loc:{start:{line:56,column:52},end:{line:59,column:9}},line:56},"6":{name:"(anonymous_6)",decl:{start:{line:60,column:72},end:{line:60,column:73}},loc:{start:{line:60,column:78},end:{line:68,column:9}},line:60},"7":{name:"(anonymous_7)",decl:{start:{line:65,column:26},end:{line:65,column:27}},loc:{start:{line:65,column:32},end:{line:67,column:13}},line:65},"8":{name:"(anonymous_8)",decl:{start:{line:70,column:38},end:{line:70,column:39}},loc:{start:{line:70,column:44},end:{line:98,column:5}},line:70},"9":{name:"(anonymous_9)",decl:{start:{line:71,column:46},end:{line:71,column:47}},loc:{start:{line:71,column:52},end:{line:74,column:9}},line:71},"10":{name:"(anonymous_10)",decl:{start:{line:75,column:57},end:{line:75,column:58}},loc:{start:{line:75,column:63},end:{line:79,column:9}},line:75},"11":{name:"(anonymous_11)",decl:{start:{line:80,column:53},end:{line:80,column:54}},loc:{start:{line:80,column:59},end:{line:84,column:9}},line:80},"12":{name:"(anonymous_12)",decl:{start:{line:85,column:55},end:{line:85,column:56}},loc:{start:{line:85,column:61},end:{line:92,column:9}},line:85},"13":{name:"(anonymous_13)",decl:{start:{line:93,column:60},end:{line:93,column:61}},loc:{start:{line:93,column:66},end:{line:97,column:9}},line:93},"14":{name:"(anonymous_14)",decl:{start:{line:94,column:26},end:{line:94,column:27}},loc:{start:{line:94,column:32},end:{line:96,column:13}},line:94}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},b:{},inputSourceMap:{version:3,file:"/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/test/test-text-format.ts",sources:["/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/test/test-text-format.ts"],names:[],mappings:"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",sourcesContent:["/**\n * Copyright 2019, OpenCensus Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assert from 'assert';\nimport { TagMap, TagTtl } from '../src';\nimport {\n  deserializeTextFormat,\n  MAX_NUMBER_OF_TAGS,\n  serializeTextFormat,\n} from '../src/tags/propagation/text-format';\n\nconst K1 = {\n  name: 'k1',\n};\nconst K2 = {\n  name: 'k2',\n};\n\nconst V1 = {\n  value: 'v1',\n};\nconst V2 = {\n  value: 'v2',\n};\n\ndescribe('Text Format Serializer', () => {\n  const emptyTagMap = new TagMap();\n\n  const singleTagMap = new TagMap();\n  singleTagMap.set(K1, V1);\n\n  const multipleTagMap = new TagMap();\n  multipleTagMap.set(K1, V1);\n  multipleTagMap.set(K2, V2);\n\n  const NO_PROPAGATION_MD = { tagTtl: TagTtl.NO_PROPAGATION };\n  const nonPropagatingTagMap = new TagMap();\n  nonPropagatingTagMap.set(K1, V1, NO_PROPAGATION_MD);\n\n  describe('serializeTextFormat', () => {\n    it('should serialize empty tag map', () => {\n      const textFormat = serializeTextFormat(emptyTagMap);\n      assert.strictEqual(textFormat, '');\n    });\n\n    it('should serialize with one tag map', () => {\n      const textFormat = serializeTextFormat(singleTagMap);\n      assert.deepStrictEqual(textFormat, 'k1=v1');\n    });\n\n    it('should serialize with multiple tag', () => {\n      const textFormat = serializeTextFormat(multipleTagMap);\n      assert.deepStrictEqual(textFormat, 'k1=v1,k2=v2');\n    });\n\n    it('should skip non propagating tag', () => {\n      const textFormat = serializeTextFormat(nonPropagatingTagMap);\n      assert.deepStrictEqual(textFormat, '');\n    });\n\n    it('should throw an error when exceeds the max number of tags', () => {\n      const tags = new TagMap();\n      for (let i = 0; i < MAX_NUMBER_OF_TAGS + 1; i++) {\n        tags.set({ name: `name-${i}` }, { value: `value-${i}` });\n      }\n\n      assert.throws(() => {\n        serializeTextFormat(tags);\n      }, /^Error: Number of tags in the TagMap exceeds limit 180/);\n    });\n  });\n\n  describe('deserializeTextFormat', () => {\n    it('should deserialize empty string', () => {\n      const deserializedTagMap = deserializeTextFormat('');\n      assert.deepStrictEqual(deserializedTagMap.tags.size, 0);\n    });\n\n    it('should deserialize with one key value pair', () => {\n      const deserializedTagMap = deserializeTextFormat('k1=v1');\n      assert.deepStrictEqual(deserializedTagMap.tags.size, 1);\n      assert.deepStrictEqual(deserializedTagMap, singleTagMap);\n    });\n\n    it('should deserialize with multiple pairs', () => {\n      const deserializedTagMap = deserializeTextFormat('k1=v1,k2=v2');\n      assert.deepStrictEqual(deserializedTagMap.tags.size, 2);\n      assert.deepStrictEqual(deserializedTagMap, multipleTagMap);\n    });\n\n    it('should deserialize with white spaces tag', () => {\n      const expectedTagMap = new TagMap();\n      expectedTagMap.set(K1, { value: ' v1' });\n      expectedTagMap.set({ name: ' k2' }, { value: 'v 2' });\n\n      const deserializedTagMap = deserializeTextFormat('k1= v1, k2=v 2');\n      assert.deepStrictEqual(deserializedTagMap.tags.size, 2);\n      assert.deepStrictEqual(deserializedTagMap, expectedTagMap);\n    });\n\n    it('should throw an error when tags are malformed', () => {\n      assert.throws(() => {\n        deserializeTextFormat('k1,v1,k2=v2');\n      }, /^Error: Malformed tag k1/);\n    });\n  });\n});\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"09858263a7ca56680d152a5cd60c0d59a0feee65"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_26dwqovgad=function(){return actualCoverage;};}return actualCoverage;}cov_26dwqovgad();cov_26dwqovgad().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const assert=(cov_26dwqovgad().s[1]++,require("assert"));const src_1=(cov_26dwqovgad().s[2]++,require("../src"));const text_format_1=(cov_26dwqovgad().s[3]++,require("../src/tags/propagation/text-format"));const K1=(cov_26dwqovgad().s[4]++,{name:'k1'});const K2=(cov_26dwqovgad().s[5]++,{name:'k2'});const V1=(cov_26dwqovgad().s[6]++,{value:'v1'});const V2=(cov_26dwqovgad().s[7]++,{value:'v2'});cov_26dwqovgad().s[8]++;describe('Text Format Serializer',()=>{cov_26dwqovgad().f[0]++;const emptyTagMap=(cov_26dwqovgad().s[9]++,new src_1.TagMap());const singleTagMap=(cov_26dwqovgad().s[10]++,new src_1.TagMap());cov_26dwqovgad().s[11]++;singleTagMap.set(K1,V1);const multipleTagMap=(cov_26dwqovgad().s[12]++,new src_1.TagMap());cov_26dwqovgad().s[13]++;multipleTagMap.set(K1,V1);cov_26dwqovgad().s[14]++;multipleTagMap.set(K2,V2);const NO_PROPAGATION_MD=(cov_26dwqovgad().s[15]++,{tagTtl:src_1.TagTtl.NO_PROPAGATION});const nonPropagatingTagMap=(cov_26dwqovgad().s[16]++,new src_1.TagMap());cov_26dwqovgad().s[17]++;nonPropagatingTagMap.set(K1,V1,NO_PROPAGATION_MD);cov_26dwqovgad().s[18]++;describe('serializeTextFormat',()=>{cov_26dwqovgad().f[1]++;cov_26dwqovgad().s[19]++;it('should serialize empty tag map',()=>{cov_26dwqovgad().f[2]++;const textFormat=(cov_26dwqovgad().s[20]++,text_format_1.serializeTextFormat(emptyTagMap));cov_26dwqovgad().s[21]++;assert.strictEqual(textFormat,'');});cov_26dwqovgad().s[22]++;it('should serialize with one tag map',()=>{cov_26dwqovgad().f[3]++;const textFormat=(cov_26dwqovgad().s[23]++,text_format_1.serializeTextFormat(singleTagMap));cov_26dwqovgad().s[24]++;assert.deepStrictEqual(textFormat,'k1=v1');});cov_26dwqovgad().s[25]++;it('should serialize with multiple tag',()=>{cov_26dwqovgad().f[4]++;const textFormat=(cov_26dwqovgad().s[26]++,text_format_1.serializeTextFormat(multipleTagMap));cov_26dwqovgad().s[27]++;assert.deepStrictEqual(textFormat,'k1=v1,k2=v2');});cov_26dwqovgad().s[28]++;it('should skip non propagating tag',()=>{cov_26dwqovgad().f[5]++;const textFormat=(cov_26dwqovgad().s[29]++,text_format_1.serializeTextFormat(nonPropagatingTagMap));cov_26dwqovgad().s[30]++;assert.deepStrictEqual(textFormat,'');});cov_26dwqovgad().s[31]++;it('should throw an error when exceeds the max number of tags',()=>{cov_26dwqovgad().f[6]++;const tags=(cov_26dwqovgad().s[32]++,new src_1.TagMap());cov_26dwqovgad().s[33]++;for(let i=(cov_26dwqovgad().s[34]++,0);i<text_format_1.MAX_NUMBER_OF_TAGS+1;i++){cov_26dwqovgad().s[35]++;tags.set({name:`name-${i}`},{value:`value-${i}`});}cov_26dwqovgad().s[36]++;assert.throws(()=>{cov_26dwqovgad().f[7]++;cov_26dwqovgad().s[37]++;text_format_1.serializeTextFormat(tags);},/^Error: Number of tags in the TagMap exceeds limit 180/);});});cov_26dwqovgad().s[38]++;describe('deserializeTextFormat',()=>{cov_26dwqovgad().f[8]++;cov_26dwqovgad().s[39]++;it('should deserialize empty string',()=>{cov_26dwqovgad().f[9]++;const deserializedTagMap=(cov_26dwqovgad().s[40]++,text_format_1.deserializeTextFormat(''));cov_26dwqovgad().s[41]++;assert.deepStrictEqual(deserializedTagMap.tags.size,0);});cov_26dwqovgad().s[42]++;it('should deserialize with one key value pair',()=>{cov_26dwqovgad().f[10]++;const deserializedTagMap=(cov_26dwqovgad().s[43]++,text_format_1.deserializeTextFormat('k1=v1'));cov_26dwqovgad().s[44]++;assert.deepStrictEqual(deserializedTagMap.tags.size,1);cov_26dwqovgad().s[45]++;assert.deepStrictEqual(deserializedTagMap,singleTagMap);});cov_26dwqovgad().s[46]++;it('should deserialize with multiple pairs',()=>{cov_26dwqovgad().f[11]++;const deserializedTagMap=(cov_26dwqovgad().s[47]++,text_format_1.deserializeTextFormat('k1=v1,k2=v2'));cov_26dwqovgad().s[48]++;assert.deepStrictEqual(deserializedTagMap.tags.size,2);cov_26dwqovgad().s[49]++;assert.deepStrictEqual(deserializedTagMap,multipleTagMap);});cov_26dwqovgad().s[50]++;it('should deserialize with white spaces tag',()=>{cov_26dwqovgad().f[12]++;const expectedTagMap=(cov_26dwqovgad().s[51]++,new src_1.TagMap());cov_26dwqovgad().s[52]++;expectedTagMap.set(K1,{value:' v1'});cov_26dwqovgad().s[53]++;expectedTagMap.set({name:' k2'},{value:'v 2'});const deserializedTagMap=(cov_26dwqovgad().s[54]++,text_format_1.deserializeTextFormat('k1= v1, k2=v 2'));cov_26dwqovgad().s[55]++;assert.deepStrictEqual(deserializedTagMap.tags.size,2);cov_26dwqovgad().s[56]++;assert.deepStrictEqual(deserializedTagMap,expectedTagMap);});cov_26dwqovgad().s[57]++;it('should throw an error when tags are malformed',()=>{cov_26dwqovgad().f[13]++;cov_26dwqovgad().s[58]++;assert.throws(()=>{cov_26dwqovgad().f[14]++;cov_26dwqovgad().s[59]++;text_format_1.deserializeTextFormat('k1,v1,k2=v2');},/^Error: Malformed tag k1/);});});});//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
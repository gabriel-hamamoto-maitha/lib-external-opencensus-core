{"version":3,"file":"/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/test/test-no-record-root-span.ts","sources":["/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/test/test-no-record-root-span.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;AAEH,iCAAiC;AACjC,gCAMgB;AAChB,0FAAoF;AAEpF,MAAM,MAAM,GAAG,IAAI,gBAAU,EAAE,CAAC;AAEhC,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;IAClC,EAAE,CAAC,cAAc,EAAE,GAAG,EAAE;QACtB,MAAM,gBAAgB,GAAG,IAAI,sCAAgB,CAC3C,MAAM,EACN,MAAM,EACN,cAAQ,CAAC,MAAM,EACf,SAAS,EACT,EAAE,CACH,CAAC;QACF,gBAAgB,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;QAC/C,gBAAgB,CAAC,aAAa,CAAC,cAAc,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;QACpE,gBAAgB,CAAC,aAAa,CAAC,cAAc,EAAE;YAC7C,QAAQ,EAAE,KAAK;YACf,QAAQ,EAAE,GAAG;YACb,SAAS,EAAE,IAAI;SAChB,CAAC,CAAC;QACH,gBAAgB,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,cAAQ,CAAC,iBAAiB,CAAC,CAAC;QACrE,gBAAgB,CAAC,eAAe,CAAC,sBAAgB,CAAC,QAAQ,EAAE,CAAC,EAAE,SAAS,CAAC,CAAC;QAC1E,gBAAgB,CAAC,YAAY,CAAC,oBAAoB,EAAE,KAAK,CAAC,CAAC;QAC3D,gBAAgB,CAAC,SAAS,CAAC,mBAAa,CAAC,EAAE,CAAC,CAAC;QAC7C,gBAAgB,CAAC,cAAc,EAAE,CAAC;QAClC,MAAM,CAAC,WAAW,CAAC,gBAAgB,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;IAC7D,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/**\n * Copyright 2019, OpenCensus Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assert from 'assert';\nimport {\n  CanonicalCode,\n  CoreTracer,\n  LinkType,\n  MessageEventType,\n  SpanKind,\n} from '../src';\nimport { NoRecordRootSpan } from '../src/trace/model/no-record/no-record-root-span';\n\nconst tracer = new CoreTracer();\n\ndescribe('NoRecordRootSpan()', () => {\n  it('do not crash', () => {\n    const noRecordRootSpan = new NoRecordRootSpan(\n      tracer,\n      'name',\n      SpanKind.SERVER,\n      'traceid',\n      ''\n    );\n    noRecordRootSpan.addAnnotation('MyAnnotation');\n    noRecordRootSpan.addAnnotation('MyAnnotation', { myString: 'bar' });\n    noRecordRootSpan.addAnnotation('MyAnnotation', {\n      myString: 'bar',\n      myNumber: 123,\n      myBoolean: true,\n    });\n    noRecordRootSpan.addLink('aaaaa', 'aaa', LinkType.CHILD_LINKED_SPAN);\n    noRecordRootSpan.addMessageEvent(MessageEventType.RECEIVED, 1, 123456789);\n    noRecordRootSpan.addAttribute('my_first_attribute', 'foo');\n    noRecordRootSpan.setStatus(CanonicalCode.OK);\n    noRecordRootSpan.startChildSpan();\n    assert.strictEqual(noRecordRootSpan.traceState, undefined);\n  });\n});\n"]}
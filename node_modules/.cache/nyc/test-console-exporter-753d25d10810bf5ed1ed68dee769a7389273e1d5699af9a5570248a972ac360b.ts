"use strict";/**
 * Copyright 2018, OpenCensus Authors
 *
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function cov_2ewfd32fjy(){var path="/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/test/test-console-exporter.ts";var hash="ecd37dbad187ac2c926422976941dbf94b86dbce";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/test/test-console-exporter.ts",statementMap:{"0":{start:{line:17,column:0},end:{line:17,column:62}},"1":{start:{line:18,column:15},end:{line:18,column:32}},"2":{start:{line:19,column:14},end:{line:19,column:31}},"3":{start:{line:20,column:27},end:{line:20,column:71}},"4":{start:{line:21,column:20},end:{line:21,column:59}},"5":{start:{line:22,column:17},end:{line:22,column:53}},"6":{start:{line:23,column:15},end:{line:23,column:69}},"7":{start:{line:24,column:28},end:{line:27,column:1}},"8":{start:{line:28,column:13},end:{line:28,column:25}},"9":{start:{line:29,column:13},end:{line:29,column:34}},"10":{start:{line:30,column:16},end:{line:30,column:50}},"11":{start:{line:31,column:21},end:{line:31,column:23}},"12":{start:{line:32,column:0},end:{line:51,column:3}},"13":{start:{line:34,column:4},end:{line:41,column:7}},"14":{start:{line:35,column:8},end:{line:40,column:11}},"15":{start:{line:36,column:29},end:{line:36,column:66}},"16":{start:{line:37,column:29},end:{line:37,column:96}},"17":{start:{line:38,column:12},end:{line:38,column:41}},"18":{start:{line:39,column:12},end:{line:39,column:28}},"19":{start:{line:43,column:4},end:{line:50,column:7}},"20":{start:{line:44,column:8},end:{line:49,column:11}},"21":{start:{line:45,column:29},end:{line:45,column:66}},"22":{start:{line:46,column:29},end:{line:46,column:96}},"23":{start:{line:47,column:26},end:{line:47,column:36}},"24":{start:{line:48,column:12},end:{line:48,column:43}},"25":{start:{line:52,column:0},end:{line:96,column:3}},"26":{start:{line:54,column:4},end:{line:73,column:7}},"27":{start:{line:55,column:8},end:{line:72,column:11}},"28":{start:{line:56,column:30},end:{line:56,column:57}},"29":{start:{line:57,column:31},end:{line:57,column:33}},"30":{start:{line:58,column:12},end:{line:60,column:15}},"31":{start:{line:59,column:16},end:{line:59,column:36}},"32":{start:{line:61,column:29},end:{line:61,column:88}},"33":{start:{line:62,column:30},end:{line:62,column:97}},"34":{start:{line:63,column:12},end:{line:63,column:42}},"35":{start:{line:64,column:12},end:{line:64,column:49}},"36":{start:{line:65,column:30},end:{line:65,column:97}},"37":{start:{line:66,column:12},end:{line:66,column:42}},"38":{start:{line:67,column:12},end:{line:71,column:15}},"39":{start:{line:68,column:16},end:{line:68,column:71}},"40":{start:{line:69,column:16},end:{line:69,column:66}},"41":{start:{line:70,column:16},end:{line:70,column:68}},"42":{start:{line:75,column:4},end:{line:95,column:7}},"43":{start:{line:76,column:8},end:{line:94,column:11}},"44":{start:{line:77,column:30},end:{line:77,column:57}},"45":{start:{line:78,column:31},end:{line:78,column:33}},"46":{start:{line:79,column:12},end:{line:81,column:15}},"47":{start:{line:80,column:16},end:{line:80,column:36}},"48":{start:{line:82,column:29},end:{line:82,column:88}},"49":{start:{line:83,column:29},end:{line:83,column:96}},"50":{start:{line:84,column:12},end:{line:84,column:29}},"51":{start:{line:85,column:12},end:{line:85,column:88}},"52":{start:{line:86,column:26},end:{line:86,column:36}},"53":{start:{line:87,column:12},end:{line:93,column:15}},"54":{start:{line:88,column:16},end:{line:88,column:71}},"55":{start:{line:89,column:16},end:{line:89,column:66}},"56":{start:{line:90,column:16},end:{line:90,column:68}},"57":{start:{line:91,column:16},end:{line:91,column:77}},"58":{start:{line:92,column:16},end:{line:92,column:75}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:32,column:25},end:{line:32,column:26}},loc:{start:{line:32,column:31},end:{line:51,column:1}},line:32},"1":{name:"(anonymous_1)",decl:{start:{line:34,column:28},end:{line:34,column:29}},loc:{start:{line:34,column:34},end:{line:41,column:5}},line:34},"2":{name:"(anonymous_2)",decl:{start:{line:35,column:32},end:{line:35,column:33}},loc:{start:{line:35,column:38},end:{line:40,column:9}},line:35},"3":{name:"(anonymous_3)",decl:{start:{line:43,column:26},end:{line:43,column:27}},loc:{start:{line:43,column:32},end:{line:50,column:5}},line:43},"4":{name:"(anonymous_4)",decl:{start:{line:44,column:32},end:{line:44,column:33}},loc:{start:{line:44,column:38},end:{line:49,column:9}},line:44},"5":{name:"(anonymous_5)",decl:{start:{line:52,column:31},end:{line:52,column:32}},loc:{start:{line:52,column:37},end:{line:96,column:1}},line:52},"6":{name:"(anonymous_6)",decl:{start:{line:54,column:28},end:{line:54,column:29}},loc:{start:{line:54,column:34},end:{line:73,column:5}},line:54},"7":{name:"(anonymous_7)",decl:{start:{line:55,column:32},end:{line:55,column:33}},loc:{start:{line:55,column:38},end:{line:72,column:9}},line:55},"8":{name:"(anonymous_8)",decl:{start:{line:58,column:22},end:{line:58,column:23}},loc:{start:{line:58,column:31},end:{line:60,column:13}},line:58},"9":{name:"(anonymous_9)",decl:{start:{line:67,column:39},end:{line:67,column:40}},loc:{start:{line:67,column:51},end:{line:71,column:13}},line:67},"10":{name:"(anonymous_10)",decl:{start:{line:75,column:26},end:{line:75,column:27}},loc:{start:{line:75,column:32},end:{line:95,column:5}},line:75},"11":{name:"(anonymous_11)",decl:{start:{line:76,column:52},end:{line:76,column:53}},loc:{start:{line:76,column:58},end:{line:94,column:9}},line:76},"12":{name:"(anonymous_12)",decl:{start:{line:79,column:22},end:{line:79,column:23}},loc:{start:{line:79,column:31},end:{line:81,column:13}},line:79},"13":{name:"(anonymous_13)",decl:{start:{line:87,column:48},end:{line:87,column:49}},loc:{start:{line:87,column:54},end:{line:93,column:13}},line:87}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},b:{},inputSourceMap:{version:3,file:"/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/test/test-console-exporter.ts",sources:["/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/test/test-console-exporter.ts"],names:[],mappings:"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",sourcesContent:["/**\n * Copyright 2018, OpenCensus Authors\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assert from 'assert';\nimport { SpanKind } from '../src';\nimport {\n  ConsoleExporter,\n  NoopExporter,\n} from '../src/exporters/console-exporter';\nimport { RootSpan } from '../src/trace/model/root-span';\nimport { CoreTracer } from '../src/trace/model/tracer';\n\nconst tracer = new CoreTracer().start({ samplingRate: 1.0 });\nconst defaultBufferConfig = {\n  bufferSize: 1,\n  bufferTimeout: 20000, // time in milliseconds\n};\nconst name = 'MySpanName';\nconst kind = SpanKind.SERVER;\nconst traceId = 'd4cda95b652f4a1592b449d5929fda1b';\nconst parentSpanId = '';\n\ndescribe('NoopExporter', () => {\n  /** Should do nothing when calling onEndSpan() */\n  describe('onEndSpan()', () => {\n    it('should do nothing', () => {\n      const exporter = new NoopExporter();\n      const rootSpan = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      exporter.onEndSpan(rootSpan);\n      assert.ok(true);\n    });\n  });\n\n  /** Should do anything when calling publish() */\n  describe('publish()', () => {\n    it('should do nothing', () => {\n      const exporter = new NoopExporter();\n      const rootSpan = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      const queue: RootSpan[] = [rootSpan];\n\n      return exporter.publish(queue);\n    });\n  });\n});\n\ndescribe('ConsoleLogExporter', () => {\n  /** Should end a span */\n  describe('onEndSpan()', () => {\n    it('should end a span', () => {\n      const intercept = require('intercept-stdout');\n      let capturedText = '';\n      intercept((txt: string) => {\n        capturedText += txt;\n      });\n\n      const exporter = new ConsoleExporter(defaultBufferConfig);\n\n      const rootSpan1 = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      exporter.onEndSpan(rootSpan1);\n      assert.strictEqual(capturedText, '');\n\n      const rootSpan2 = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      exporter.onEndSpan(rootSpan2);\n      [rootSpan1, rootSpan2].map(rootSpan => {\n        assert.ok(capturedText.indexOf(rootSpan.traceId) >= 0);\n        assert.ok(capturedText.indexOf(rootSpan.id) >= 0);\n        assert.ok(capturedText.indexOf(rootSpan.name) >= 0);\n      });\n    });\n  });\n\n  /** Should publish the rootspan in queue */\n  describe('publish()', () => {\n    it('should publish the rootspans in queue', () => {\n      const intercept = require('intercept-stdout');\n      let capturedText = '';\n      intercept((txt: string) => {\n        capturedText += txt;\n      });\n\n      const exporter = new ConsoleExporter(defaultBufferConfig);\n      const rootSpan = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      rootSpan.start();\n      rootSpan.startChildSpan({ name: 'name', kind: SpanKind.UNSPECIFIED });\n      const queue: RootSpan[] = [rootSpan];\n\n      return exporter.publish(queue).then(() => {\n        assert.ok(capturedText.indexOf(rootSpan.traceId) >= 0);\n        assert.ok(capturedText.indexOf(rootSpan.id) >= 0);\n        assert.ok(capturedText.indexOf(rootSpan.name) >= 0);\n        assert.ok(capturedText.indexOf(rootSpan.spans[0].name) >= 0);\n        assert.ok(capturedText.indexOf(rootSpan.spans[0].id) >= 0);\n      });\n    });\n  });\n});\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"ecd37dbad187ac2c926422976941dbf94b86dbce"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2ewfd32fjy=function(){return actualCoverage;};}return actualCoverage;}cov_2ewfd32fjy();cov_2ewfd32fjy().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const assert=(cov_2ewfd32fjy().s[1]++,require("assert"));const src_1=(cov_2ewfd32fjy().s[2]++,require("../src"));const console_exporter_1=(cov_2ewfd32fjy().s[3]++,require("../src/exporters/console-exporter"));const root_span_1=(cov_2ewfd32fjy().s[4]++,require("../src/trace/model/root-span"));const tracer_1=(cov_2ewfd32fjy().s[5]++,require("../src/trace/model/tracer"));const tracer=(cov_2ewfd32fjy().s[6]++,new tracer_1.CoreTracer().start({samplingRate:1.0}));const defaultBufferConfig=(cov_2ewfd32fjy().s[7]++,{bufferSize:1,bufferTimeout:20000});const name=(cov_2ewfd32fjy().s[8]++,'MySpanName');const kind=(cov_2ewfd32fjy().s[9]++,src_1.SpanKind.SERVER);const traceId=(cov_2ewfd32fjy().s[10]++,'d4cda95b652f4a1592b449d5929fda1b');const parentSpanId=(cov_2ewfd32fjy().s[11]++,'');cov_2ewfd32fjy().s[12]++;describe('NoopExporter',()=>{cov_2ewfd32fjy().f[0]++;cov_2ewfd32fjy().s[13]++;/** Should do nothing when calling onEndSpan() */describe('onEndSpan()',()=>{cov_2ewfd32fjy().f[1]++;cov_2ewfd32fjy().s[14]++;it('should do nothing',()=>{cov_2ewfd32fjy().f[2]++;const exporter=(cov_2ewfd32fjy().s[15]++,new console_exporter_1.NoopExporter());const rootSpan=(cov_2ewfd32fjy().s[16]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));cov_2ewfd32fjy().s[17]++;exporter.onEndSpan(rootSpan);cov_2ewfd32fjy().s[18]++;assert.ok(true);});});/** Should do anything when calling publish() */cov_2ewfd32fjy().s[19]++;describe('publish()',()=>{cov_2ewfd32fjy().f[3]++;cov_2ewfd32fjy().s[20]++;it('should do nothing',()=>{cov_2ewfd32fjy().f[4]++;const exporter=(cov_2ewfd32fjy().s[21]++,new console_exporter_1.NoopExporter());const rootSpan=(cov_2ewfd32fjy().s[22]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));const queue=(cov_2ewfd32fjy().s[23]++,[rootSpan]);cov_2ewfd32fjy().s[24]++;return exporter.publish(queue);});});});cov_2ewfd32fjy().s[25]++;describe('ConsoleLogExporter',()=>{cov_2ewfd32fjy().f[5]++;cov_2ewfd32fjy().s[26]++;/** Should end a span */describe('onEndSpan()',()=>{cov_2ewfd32fjy().f[6]++;cov_2ewfd32fjy().s[27]++;it('should end a span',()=>{cov_2ewfd32fjy().f[7]++;const intercept=(cov_2ewfd32fjy().s[28]++,require('intercept-stdout'));let capturedText=(cov_2ewfd32fjy().s[29]++,'');cov_2ewfd32fjy().s[30]++;intercept(txt=>{cov_2ewfd32fjy().f[8]++;cov_2ewfd32fjy().s[31]++;capturedText+=txt;});const exporter=(cov_2ewfd32fjy().s[32]++,new console_exporter_1.ConsoleExporter(defaultBufferConfig));const rootSpan1=(cov_2ewfd32fjy().s[33]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));cov_2ewfd32fjy().s[34]++;exporter.onEndSpan(rootSpan1);cov_2ewfd32fjy().s[35]++;assert.strictEqual(capturedText,'');const rootSpan2=(cov_2ewfd32fjy().s[36]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));cov_2ewfd32fjy().s[37]++;exporter.onEndSpan(rootSpan2);cov_2ewfd32fjy().s[38]++;[rootSpan1,rootSpan2].map(rootSpan=>{cov_2ewfd32fjy().f[9]++;cov_2ewfd32fjy().s[39]++;assert.ok(capturedText.indexOf(rootSpan.traceId)>=0);cov_2ewfd32fjy().s[40]++;assert.ok(capturedText.indexOf(rootSpan.id)>=0);cov_2ewfd32fjy().s[41]++;assert.ok(capturedText.indexOf(rootSpan.name)>=0);});});});/** Should publish the rootspan in queue */cov_2ewfd32fjy().s[42]++;describe('publish()',()=>{cov_2ewfd32fjy().f[10]++;cov_2ewfd32fjy().s[43]++;it('should publish the rootspans in queue',()=>{cov_2ewfd32fjy().f[11]++;const intercept=(cov_2ewfd32fjy().s[44]++,require('intercept-stdout'));let capturedText=(cov_2ewfd32fjy().s[45]++,'');cov_2ewfd32fjy().s[46]++;intercept(txt=>{cov_2ewfd32fjy().f[12]++;cov_2ewfd32fjy().s[47]++;capturedText+=txt;});const exporter=(cov_2ewfd32fjy().s[48]++,new console_exporter_1.ConsoleExporter(defaultBufferConfig));const rootSpan=(cov_2ewfd32fjy().s[49]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));cov_2ewfd32fjy().s[50]++;rootSpan.start();cov_2ewfd32fjy().s[51]++;rootSpan.startChildSpan({name:'name',kind:src_1.SpanKind.UNSPECIFIED});const queue=(cov_2ewfd32fjy().s[52]++,[rootSpan]);cov_2ewfd32fjy().s[53]++;return exporter.publish(queue).then(()=>{cov_2ewfd32fjy().f[13]++;cov_2ewfd32fjy().s[54]++;assert.ok(capturedText.indexOf(rootSpan.traceId)>=0);cov_2ewfd32fjy().s[55]++;assert.ok(capturedText.indexOf(rootSpan.id)>=0);cov_2ewfd32fjy().s[56]++;assert.ok(capturedText.indexOf(rootSpan.name)>=0);cov_2ewfd32fjy().s[57]++;assert.ok(capturedText.indexOf(rootSpan.spans[0].name)>=0);cov_2ewfd32fjy().s[58]++;assert.ok(capturedText.indexOf(rootSpan.spans[0].id)>=0);});});});});//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
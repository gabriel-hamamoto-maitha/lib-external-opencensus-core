"use strict";/**
 * Copyright 2018, OpenCensus Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function cov_18g0k7beiw(){var path="/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/test/test-tracer.ts";var hash="34d08f931ed7fae0cc1582cac5e0dcd82d3d29ef";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/test/test-tracer.ts",statementMap:{"0":{start:{line:17,column:0},end:{line:17,column:62}},"1":{start:{line:18,column:15},end:{line:18,column:32}},"2":{start:{line:19,column:25},end:{line:19,column:79}},"3":{start:{line:20,column:15},end:{line:20,column:49}},"4":{start:{line:21,column:17},end:{line:21,column:53}},"5":{start:{line:22,column:14},end:{line:22,column:49}},"6":{start:{line:23,column:22},end:{line:25,column:1}},"7":{start:{line:26,column:0},end:{line:118,column:3}},"8":{start:{line:27,column:20},end:{line:27,column:36}},"9":{start:{line:29,column:4},end:{line:34,column:7}},"10":{start:{line:30,column:8},end:{line:33,column:11}},"11":{start:{line:31,column:27},end:{line:31,column:52}},"12":{start:{line:32,column:12},end:{line:32,column:61}},"13":{start:{line:36,column:4},end:{line:45,column:7}},"14":{start:{line:37,column:23},end:{line:37,column:69}},"15":{start:{line:38,column:8},end:{line:44,column:11}},"16":{start:{line:39,column:12},end:{line:43,column:15}},"17":{start:{line:40,column:16},end:{line:40,column:32}},"18":{start:{line:41,column:16},end:{line:41,column:73}},"19":{start:{line:42,column:16},end:{line:42,column:65}},"20":{start:{line:47,column:4},end:{line:66,column:7}},"21":{start:{line:50,column:8},end:{line:56,column:11}},"22":{start:{line:51,column:12},end:{line:51,column:47}},"23":{start:{line:52,column:12},end:{line:52,column:40}},"24":{start:{line:53,column:12},end:{line:55,column:15}},"25":{start:{line:54,column:16},end:{line:54,column:41}},"26":{start:{line:57,column:8},end:{line:59,column:11}},"27":{start:{line:58,column:12},end:{line:58,column:60}},"28":{start:{line:60,column:8},end:{line:65,column:11}},"29":{start:{line:61,column:12},end:{line:64,column:15}},"30":{start:{line:62,column:16},end:{line:62,column:73}},"31":{start:{line:63,column:16},end:{line:63,column:69}},"32":{start:{line:68,column:4},end:{line:79,column:7}},"33":{start:{line:69,column:8},end:{line:78,column:11}},"34":{start:{line:70,column:27},end:{line:70,column:52}},"35":{start:{line:71,column:12},end:{line:71,column:40}},"36":{start:{line:72,column:12},end:{line:77,column:15}},"37":{start:{line:73,column:16},end:{line:73,column:73}},"38":{start:{line:74,column:16},end:{line:74,column:69}},"39":{start:{line:75,column:16},end:{line:75,column:43}},"40":{start:{line:76,column:16},end:{line:76,column:65}},"41":{start:{line:81,column:4},end:{line:105,column:7}},"42":{start:{line:85,column:8},end:{line:95,column:11}},"43":{start:{line:86,column:12},end:{line:86,column:47}},"44":{start:{line:87,column:12},end:{line:87,column:40}},"45":{start:{line:88,column:12},end:{line:94,column:15}},"46":{start:{line:89,column:16},end:{line:89,column:41}},"47":{start:{line:90,column:16},end:{line:93,column:19}},"48":{start:{line:96,column:8},end:{line:98,column:11}},"49":{start:{line:97,column:12},end:{line:97,column:51}},"50":{start:{line:99,column:8},end:{line:104,column:11}},"51":{start:{line:100,column:12},end:{line:100,column:66}},"52":{start:{line:101,column:12},end:{line:101,column:31}},"53":{start:{line:103,column:12},end:{line:103,column:67}},"54":{start:{line:107,column:4},end:{line:117,column:7}},"55":{start:{line:108,column:8},end:{line:116,column:11}},"56":{start:{line:109,column:27},end:{line:109,column:52}},"57":{start:{line:110,column:12},end:{line:110,column:40}},"58":{start:{line:111,column:25},end:{line:114,column:14}},"59":{start:{line:115,column:12},end:{line:115,column:69}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:26,column:19},end:{line:26,column:20}},loc:{start:{line:26,column:25},end:{line:118,column:1}},line:26},"1":{name:"(anonymous_1)",decl:{start:{line:29,column:29},end:{line:29,column:30}},loc:{start:{line:29,column:35},end:{line:34,column:5}},line:29},"2":{name:"(anonymous_2)",decl:{start:{line:30,column:46},end:{line:30,column:47}},loc:{start:{line:30,column:52},end:{line:33,column:9}},line:30},"3":{name:"(anonymous_3)",decl:{start:{line:36,column:42},end:{line:36,column:43}},loc:{start:{line:36,column:48},end:{line:45,column:5}},line:36},"4":{name:"(anonymous_4)",decl:{start:{line:38,column:67},end:{line:38,column:68}},loc:{start:{line:38,column:73},end:{line:44,column:9}},line:38},"5":{name:"(anonymous_5)",decl:{start:{line:39,column:42},end:{line:39,column:43}},loc:{start:{line:39,column:50},end:{line:43,column:13}},line:39},"6":{name:"(anonymous_6)",decl:{start:{line:47,column:45},end:{line:47,column:46}},loc:{start:{line:47,column:51},end:{line:66,column:5}},line:47},"7":{name:"(anonymous_7)",decl:{start:{line:50,column:15},end:{line:50,column:16}},loc:{start:{line:50,column:21},end:{line:56,column:9}},line:50},"8":{name:"(anonymous_8)",decl:{start:{line:53,column:42},end:{line:53,column:43}},loc:{start:{line:53,column:54},end:{line:55,column:13}},line:53},"9":{name:"(anonymous_9)",decl:{start:{line:57,column:52},end:{line:57,column:53}},loc:{start:{line:57,column:58},end:{line:59,column:9}},line:57},"10":{name:"(anonymous_10)",decl:{start:{line:60,column:43},end:{line:60,column:44}},loc:{start:{line:60,column:49},end:{line:65,column:9}},line:60},"11":{name:"(anonymous_11)",decl:{start:{line:61,column:42},end:{line:61,column:43}},loc:{start:{line:61,column:54},end:{line:64,column:13}},line:61},"12":{name:"(anonymous_12)",decl:{start:{line:68,column:39},end:{line:68,column:40}},loc:{start:{line:68,column:45},end:{line:79,column:5}},line:68},"13":{name:"(anonymous_13)",decl:{start:{line:69,column:55},end:{line:69,column:56}},loc:{start:{line:69,column:61},end:{line:78,column:9}},line:69},"14":{name:"(anonymous_14)",decl:{start:{line:72,column:42},end:{line:72,column:43}},loc:{start:{line:72,column:54},end:{line:77,column:13}},line:72},"15":{name:"(anonymous_15)",decl:{start:{line:81,column:33},end:{line:81,column:34}},loc:{start:{line:81,column:39},end:{line:105,column:5}},line:81},"16":{name:"(anonymous_16)",decl:{start:{line:85,column:15},end:{line:85,column:16}},loc:{start:{line:85,column:21},end:{line:95,column:9}},line:85},"17":{name:"(anonymous_17)",decl:{start:{line:88,column:42},end:{line:88,column:43}},loc:{start:{line:88,column:54},end:{line:94,column:13}},line:88},"18":{name:"(anonymous_18)",decl:{start:{line:96,column:44},end:{line:96,column:45}},loc:{start:{line:96,column:50},end:{line:98,column:9}},line:96},"19":{name:"(anonymous_19)",decl:{start:{line:99,column:61},end:{line:99,column:62}},loc:{start:{line:99,column:67},end:{line:104,column:9}},line:99},"20":{name:"(anonymous_20)",decl:{start:{line:107,column:56},end:{line:107,column:57}},loc:{start:{line:107,column:62},end:{line:117,column:5}},line:107},"21":{name:"(anonymous_21)",decl:{start:{line:108,column:72},end:{line:108,column:73}},loc:{start:{line:108,column:78},end:{line:116,column:9}},line:108}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},b:{},inputSourceMap:{version:3,file:"/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/test/test-tracer.ts",sources:["/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/test/test-tracer.ts"],names:[],mappings:"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",sourcesContent:["/**\n * Copyright 2018, OpenCensus Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assert from 'assert';\n\nimport { TracerConfig } from '../src/trace/config/types';\nimport { NoRecordSpan } from '../src/trace/model/no-record/no-record-span';\nimport { Span } from '../src/trace/model/span';\nimport { CoreTracer } from '../src/trace/model/tracer';\nimport * as types from '../src/trace/model/types';\n\nconst defaultConfig: TracerConfig = {\n  samplingRate: 1.0, // always sampler\n};\n\ndescribe('Tracer', () => {\n  const options = { name: 'test' };\n\n  /** Should create a Tracer instance */\n  describe('new Tracer()', () => {\n    it('should create a Tracer instance', () => {\n      const tracer = new CoreTracer();\n      assert.ok(tracer instanceof CoreTracer);\n    });\n  });\n\n  /** Should get/set the current RootSpan from tracer instance */\n  describe('get/set currentRootSpan()', () => {\n    const tracer = new CoreTracer().start(defaultConfig);\n    it('should get the current RootSpan from tracer instance', () => {\n      tracer.startRootSpan(options, root => {\n        assert.ok(root);\n        assert.ok(tracer.currentRootSpan instanceof Span);\n        assert.strictEqual(tracer.currentRootSpan, root);\n      });\n    });\n  });\n\n  /** Should create and start a new RootSpan instance with options */\n  describe('startRootSpan() with options', () => {\n    let rootSpanLocal: types.Span;\n    let tracer: types.Tracer;\n    before(() => {\n      tracer = new CoreTracer();\n      tracer.start(defaultConfig);\n      tracer.startRootSpan(options, rootSpan => {\n        rootSpanLocal = rootSpan;\n      });\n    });\n    it('should create a new RootSpan instance', () => {\n      assert.ok(rootSpanLocal instanceof Span);\n    });\n    it('should set current root span', () => {\n      tracer.startRootSpan(options, rootSpan => {\n        assert.ok(tracer.currentRootSpan instanceof Span);\n        assert.strictEqual(tracer.currentRootSpan, rootSpan);\n      });\n    });\n  });\n\n  /** Should set the current root span to null */\n  describe('clearCurrentRootSpan()', () => {\n    it('should set the current root span to null', () => {\n      const tracer = new CoreTracer();\n      tracer.start(defaultConfig);\n      tracer.startRootSpan(options, rootSpan => {\n        assert.ok(tracer.currentRootSpan instanceof Span);\n        assert.strictEqual(tracer.currentRootSpan, rootSpan);\n        tracer.clearCurrentTrace();\n        assert.strictEqual(tracer.currentRootSpan, null);\n      });\n    });\n  });\n\n  /** Should create and start a Span instance into a rootSpan */\n  describe('startChildSpan()', () => {\n    let span: types.Span;\n    let rootSpanLocal: types.Span;\n    let tracer: types.TracerBase;\n    before(() => {\n      tracer = new CoreTracer();\n      tracer.start(defaultConfig);\n      tracer.startRootSpan(options, rootSpan => {\n        rootSpanLocal = rootSpan;\n        span = tracer.startChildSpan({\n          name: 'spanName',\n          kind: types.SpanKind.CLIENT,\n        });\n      });\n    });\n    it('should create a Span instance', () => {\n      assert.ok(span instanceof Span);\n    });\n    it('should set child of to root span automatically', () => {\n      assert.strictEqual(rootSpanLocal.numberOfChildren, 1);\n      assert.ok(span.id);\n      // instance equal is not possible due circular dependencies\n      assert.strictEqual(rootSpanLocal.spans[0].id, span.id);\n    });\n  });\n\n  /** Should not create a Span instance */\n  describe('startChildSpan() before startRootSpan()', () => {\n    it('should create a NoRecordSpan instance, without a rootspan', () => {\n      const tracer = new CoreTracer();\n      tracer.start(defaultConfig);\n      const span = tracer.startChildSpan({\n        name: 'spanName',\n        kind: types.SpanKind.UNSPECIFIED,\n      });\n      assert.ok(span instanceof NoRecordSpan);\n    });\n  });\n});\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"34d08f931ed7fae0cc1582cac5e0dcd82d3d29ef"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_18g0k7beiw=function(){return actualCoverage;};}return actualCoverage;}cov_18g0k7beiw();cov_18g0k7beiw().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const assert=(cov_18g0k7beiw().s[1]++,require("assert"));const no_record_span_1=(cov_18g0k7beiw().s[2]++,require("../src/trace/model/no-record/no-record-span"));const span_1=(cov_18g0k7beiw().s[3]++,require("../src/trace/model/span"));const tracer_1=(cov_18g0k7beiw().s[4]++,require("../src/trace/model/tracer"));const types=(cov_18g0k7beiw().s[5]++,require("../src/trace/model/types"));const defaultConfig=(cov_18g0k7beiw().s[6]++,{samplingRate:1.0});cov_18g0k7beiw().s[7]++;describe('Tracer',()=>{cov_18g0k7beiw().f[0]++;const options=(cov_18g0k7beiw().s[8]++,{name:'test'});/** Should create a Tracer instance */cov_18g0k7beiw().s[9]++;describe('new Tracer()',()=>{cov_18g0k7beiw().f[1]++;cov_18g0k7beiw().s[10]++;it('should create a Tracer instance',()=>{cov_18g0k7beiw().f[2]++;const tracer=(cov_18g0k7beiw().s[11]++,new tracer_1.CoreTracer());cov_18g0k7beiw().s[12]++;assert.ok(tracer instanceof tracer_1.CoreTracer);});});/** Should get/set the current RootSpan from tracer instance */cov_18g0k7beiw().s[13]++;describe('get/set currentRootSpan()',()=>{cov_18g0k7beiw().f[3]++;const tracer=(cov_18g0k7beiw().s[14]++,new tracer_1.CoreTracer().start(defaultConfig));cov_18g0k7beiw().s[15]++;it('should get the current RootSpan from tracer instance',()=>{cov_18g0k7beiw().f[4]++;cov_18g0k7beiw().s[16]++;tracer.startRootSpan(options,root=>{cov_18g0k7beiw().f[5]++;cov_18g0k7beiw().s[17]++;assert.ok(root);cov_18g0k7beiw().s[18]++;assert.ok(tracer.currentRootSpan instanceof span_1.Span);cov_18g0k7beiw().s[19]++;assert.strictEqual(tracer.currentRootSpan,root);});});});/** Should create and start a new RootSpan instance with options */cov_18g0k7beiw().s[20]++;describe('startRootSpan() with options',()=>{cov_18g0k7beiw().f[6]++;let rootSpanLocal;let tracer;cov_18g0k7beiw().s[21]++;before(()=>{cov_18g0k7beiw().f[7]++;cov_18g0k7beiw().s[22]++;tracer=new tracer_1.CoreTracer();cov_18g0k7beiw().s[23]++;tracer.start(defaultConfig);cov_18g0k7beiw().s[24]++;tracer.startRootSpan(options,rootSpan=>{cov_18g0k7beiw().f[8]++;cov_18g0k7beiw().s[25]++;rootSpanLocal=rootSpan;});});cov_18g0k7beiw().s[26]++;it('should create a new RootSpan instance',()=>{cov_18g0k7beiw().f[9]++;cov_18g0k7beiw().s[27]++;assert.ok(rootSpanLocal instanceof span_1.Span);});cov_18g0k7beiw().s[28]++;it('should set current root span',()=>{cov_18g0k7beiw().f[10]++;cov_18g0k7beiw().s[29]++;tracer.startRootSpan(options,rootSpan=>{cov_18g0k7beiw().f[11]++;cov_18g0k7beiw().s[30]++;assert.ok(tracer.currentRootSpan instanceof span_1.Span);cov_18g0k7beiw().s[31]++;assert.strictEqual(tracer.currentRootSpan,rootSpan);});});});/** Should set the current root span to null */cov_18g0k7beiw().s[32]++;describe('clearCurrentRootSpan()',()=>{cov_18g0k7beiw().f[12]++;cov_18g0k7beiw().s[33]++;it('should set the current root span to null',()=>{cov_18g0k7beiw().f[13]++;const tracer=(cov_18g0k7beiw().s[34]++,new tracer_1.CoreTracer());cov_18g0k7beiw().s[35]++;tracer.start(defaultConfig);cov_18g0k7beiw().s[36]++;tracer.startRootSpan(options,rootSpan=>{cov_18g0k7beiw().f[14]++;cov_18g0k7beiw().s[37]++;assert.ok(tracer.currentRootSpan instanceof span_1.Span);cov_18g0k7beiw().s[38]++;assert.strictEqual(tracer.currentRootSpan,rootSpan);cov_18g0k7beiw().s[39]++;tracer.clearCurrentTrace();cov_18g0k7beiw().s[40]++;assert.strictEqual(tracer.currentRootSpan,null);});});});/** Should create and start a Span instance into a rootSpan */cov_18g0k7beiw().s[41]++;describe('startChildSpan()',()=>{cov_18g0k7beiw().f[15]++;let span;let rootSpanLocal;let tracer;cov_18g0k7beiw().s[42]++;before(()=>{cov_18g0k7beiw().f[16]++;cov_18g0k7beiw().s[43]++;tracer=new tracer_1.CoreTracer();cov_18g0k7beiw().s[44]++;tracer.start(defaultConfig);cov_18g0k7beiw().s[45]++;tracer.startRootSpan(options,rootSpan=>{cov_18g0k7beiw().f[17]++;cov_18g0k7beiw().s[46]++;rootSpanLocal=rootSpan;cov_18g0k7beiw().s[47]++;span=tracer.startChildSpan({name:'spanName',kind:types.SpanKind.CLIENT});});});cov_18g0k7beiw().s[48]++;it('should create a Span instance',()=>{cov_18g0k7beiw().f[18]++;cov_18g0k7beiw().s[49]++;assert.ok(span instanceof span_1.Span);});cov_18g0k7beiw().s[50]++;it('should set child of to root span automatically',()=>{cov_18g0k7beiw().f[19]++;cov_18g0k7beiw().s[51]++;assert.strictEqual(rootSpanLocal.numberOfChildren,1);cov_18g0k7beiw().s[52]++;assert.ok(span.id);// instance equal is not possible due circular dependencies
cov_18g0k7beiw().s[53]++;assert.strictEqual(rootSpanLocal.spans[0].id,span.id);});});/** Should not create a Span instance */cov_18g0k7beiw().s[54]++;describe('startChildSpan() before startRootSpan()',()=>{cov_18g0k7beiw().f[20]++;cov_18g0k7beiw().s[55]++;it('should create a NoRecordSpan instance, without a rootspan',()=>{cov_18g0k7beiw().f[21]++;const tracer=(cov_18g0k7beiw().s[56]++,new tracer_1.CoreTracer());cov_18g0k7beiw().s[57]++;tracer.start(defaultConfig);const span=(cov_18g0k7beiw().s[58]++,tracer.startChildSpan({name:'spanName',kind:types.SpanKind.UNSPECIFIED}));cov_18g0k7beiw().s[59]++;assert.ok(span instanceof no_record_span_1.NoRecordSpan);});});});//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
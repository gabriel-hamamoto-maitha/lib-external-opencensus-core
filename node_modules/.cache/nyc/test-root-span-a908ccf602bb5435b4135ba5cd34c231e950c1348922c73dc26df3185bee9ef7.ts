"use strict";/**
 * Copyright 2018, OpenCensus Authors
 *
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function cov_zlsphk0qb(){var path="/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/test/test-root-span.ts";var hash="9610d3d080fd1245eae0f202e4c8c1a88238a022";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/test/test-root-span.ts",statementMap:{"0":{start:{line:17,column:0},end:{line:17,column:62}},"1":{start:{line:18,column:15},end:{line:18,column:32}},"2":{start:{line:19,column:25},end:{line:19,column:79}},"3":{start:{line:20,column:20},end:{line:20,column:59}},"4":{start:{line:21,column:15},end:{line:21,column:49}},"5":{start:{line:22,column:17},end:{line:22,column:53}},"6":{start:{line:23,column:14},end:{line:23,column:49}},"7":{start:{line:24,column:15},end:{line:24,column:40}},"8":{start:{line:25,column:0},end:{line:317,column:3}},"9":{start:{line:26,column:17},end:{line:26,column:29}},"10":{start:{line:27,column:17},end:{line:27,column:38}},"11":{start:{line:28,column:20},end:{line:28,column:54}},"12":{start:{line:29,column:25},end:{line:29,column:27}},"13":{start:{line:33,column:4},end:{line:38,column:7}},"14":{start:{line:34,column:8},end:{line:37,column:11}},"15":{start:{line:35,column:25},end:{line:35,column:92}},"16":{start:{line:36,column:12},end:{line:36,column:60}},"17":{start:{line:42,column:4},end:{line:58,column:7}},"18":{start:{line:43,column:8},end:{line:57,column:11}},"19":{start:{line:44,column:25},end:{line:44,column:82}},"20":{start:{line:45,column:12},end:{line:45,column:25}},"21":{start:{line:46,column:25},end:{line:49,column:14}},"22":{start:{line:50,column:12},end:{line:50,column:53}},"23":{start:{line:51,column:12},end:{line:51,column:52}},"24":{start:{line:52,column:12},end:{line:52,column:65}},"25":{start:{line:53,column:12},end:{line:53,column:64}},"26":{start:{line:54,column:12},end:{line:56,column:13}},"27":{start:{line:55,column:16},end:{line:55,column:55}},"28":{start:{line:59,column:4},end:{line:77,column:7}},"29":{start:{line:60,column:8},end:{line:76,column:11}},"30":{start:{line:61,column:25},end:{line:61,column:92}},"31":{start:{line:62,column:12},end:{line:62,column:25}},"32":{start:{line:63,column:12},end:{line:63,column:57}},"33":{start:{line:64,column:12},end:{line:67,column:15}},"34":{start:{line:68,column:12},end:{line:68,column:57}},"35":{start:{line:69,column:12},end:{line:74,column:13}},"36":{start:{line:69,column:25},end:{line:69,column:26}},"37":{start:{line:70,column:16},end:{line:73,column:19}},"38":{start:{line:75,column:12},end:{line:75,column:58}},"39":{start:{line:78,column:4},end:{line:112,column:7}},"40":{start:{line:79,column:8},end:{line:111,column:11}},"41":{start:{line:80,column:25},end:{line:80,column:92}},"42":{start:{line:81,column:12},end:{line:81,column:25}},"43":{start:{line:82,column:12},end:{line:82,column:57}},"44":{start:{line:83,column:27},end:{line:86,column:14}},"45":{start:{line:87,column:12},end:{line:87,column:57}},"46":{start:{line:88,column:12},end:{line:88,column:59}},"47":{start:{line:89,column:27},end:{line:92,column:14}},"48":{start:{line:93,column:12},end:{line:93,column:57}},"49":{start:{line:94,column:32},end:{line:97,column:14}},"50":{start:{line:98,column:12},end:{line:98,column:57}},"51":{start:{line:99,column:12},end:{line:99,column:59}},"52":{start:{line:100,column:12},end:{line:100,column:59}},"53":{start:{line:101,column:12},end:{line:101,column:64}},"54":{start:{line:102,column:12},end:{line:102,column:53}},"55":{start:{line:103,column:12},end:{line:103,column:54}},"56":{start:{line:104,column:12},end:{line:104,column:54}},"57":{start:{line:105,column:12},end:{line:105,column:68}},"58":{start:{line:106,column:12},end:{line:106,column:55}},"59":{start:{line:107,column:12},end:{line:107,column:61}},"60":{start:{line:108,column:12},end:{line:108,column:55}},"61":{start:{line:109,column:12},end:{line:109,column:60}},"62":{start:{line:110,column:12},end:{line:110,column:64}},"63":{start:{line:116,column:4},end:{line:127,column:7}},"64":{start:{line:117,column:8},end:{line:126,column:11}},"65":{start:{line:118,column:25},end:{line:118,column:92}},"66":{start:{line:119,column:12},end:{line:119,column:25}},"67":{start:{line:120,column:12},end:{line:120,column:71}},"68":{start:{line:121,column:26},end:{line:124,column:14}},"69":{start:{line:125,column:12},end:{line:125,column:60}},"70":{start:{line:131,column:4},end:{line:137,column:7}},"71":{start:{line:132,column:8},end:{line:136,column:11}},"72":{start:{line:133,column:25},end:{line:133,column:92}},"73":{start:{line:134,column:12},end:{line:134,column:25}},"74":{start:{line:135,column:12},end:{line:135,column:36}},"75":{start:{line:141,column:4},end:{line:157,column:7}},"76":{start:{line:143,column:8},end:{line:150,column:11}},"77":{start:{line:144,column:12},end:{line:144,column:87}},"78":{start:{line:145,column:12},end:{line:145,column:25}},"79":{start:{line:146,column:12},end:{line:149,column:15}},"80":{start:{line:151,column:8},end:{line:153,column:11}},"81":{start:{line:152,column:12},end:{line:152,column:51}},"82":{start:{line:154,column:8},end:{line:156,column:11}},"83":{start:{line:155,column:12},end:{line:155,column:36}},"84":{start:{line:161,column:4},end:{line:170,column:7}},"85":{start:{line:162,column:8},end:{line:169,column:11}},"86":{start:{line:163,column:25},end:{line:163,column:92}},"87":{start:{line:164,column:25},end:{line:167,column:14}},"88":{start:{line:168,column:12},end:{line:168,column:69}},"89":{start:{line:174,column:4},end:{line:185,column:7}},"90":{start:{line:175,column:8},end:{line:184,column:11}},"91":{start:{line:176,column:25},end:{line:176,column:92}},"92":{start:{line:177,column:12},end:{line:177,column:25}},"93":{start:{line:178,column:12},end:{line:178,column:23}},"94":{start:{line:179,column:25},end:{line:182,column:14}},"95":{start:{line:183,column:12},end:{line:183,column:69}},"96":{start:{line:189,column:4},end:{line:196,column:7}},"97":{start:{line:190,column:8},end:{line:195,column:11}},"98":{start:{line:191,column:25},end:{line:191,column:92}},"99":{start:{line:192,column:12},end:{line:192,column:25}},"100":{start:{line:193,column:12},end:{line:193,column:23}},"101":{start:{line:194,column:12},end:{line:194,column:34}},"102":{start:{line:200,column:4},end:{line:206,column:7}},"103":{start:{line:201,column:8},end:{line:205,column:11}},"104":{start:{line:202,column:25},end:{line:202,column:92}},"105":{start:{line:203,column:12},end:{line:203,column:23}},"106":{start:{line:204,column:12},end:{line:204,column:35}},"107":{start:{line:210,column:4},end:{line:227,column:7}},"108":{start:{line:211,column:8},end:{line:226,column:11}},"109":{start:{line:212,column:25},end:{line:212,column:92}},"110":{start:{line:213,column:12},end:{line:213,column:25}},"111":{start:{line:214,column:26},end:{line:217,column:14}},"112":{start:{line:218,column:12},end:{line:221,column:15}},"113":{start:{line:222,column:12},end:{line:222,column:23}},"114":{start:{line:223,column:12},end:{line:225,column:13}},"115":{start:{line:224,column:16},end:{line:224,column:38}},"116":{start:{line:231,column:4},end:{line:240,column:7}},"117":{start:{line:232,column:8},end:{line:239,column:11}},"118":{start:{line:233,column:29},end:{line:233,column:96}},"119":{start:{line:234,column:12},end:{line:234,column:29}},"120":{start:{line:235,column:12},end:{line:238,column:15}},"121":{start:{line:236,column:16},end:{line:236,column:82}},"122":{start:{line:237,column:16},end:{line:237,column:100}},"123":{start:{line:244,column:4},end:{line:268,column:7}},"124":{start:{line:245,column:8},end:{line:257,column:11}},"125":{start:{line:248,column:16},end:{line:250,column:44}},"126":{start:{line:252,column:29},end:{line:252,column:96}},"127":{start:{line:253,column:12},end:{line:253,column:29}},"128":{start:{line:254,column:12},end:{line:254,column:71}},"129":{start:{line:255,column:12},end:{line:255,column:55}},"130":{start:{line:256,column:12},end:{line:256,column:69}},"131":{start:{line:258,column:8},end:{line:267,column:11}},"132":{start:{line:259,column:29},end:{line:259,column:96}},"133":{start:{line:260,column:12},end:{line:260,column:29}},"134":{start:{line:261,column:12},end:{line:261,column:55}},"135":{start:{line:262,column:12},end:{line:262,column:55}},"136":{start:{line:263,column:12},end:{line:263,column:68}},"137":{start:{line:264,column:12},end:{line:264,column:88}},"138":{start:{line:265,column:12},end:{line:265,column:75}},"139":{start:{line:266,column:12},end:{line:266,column:61}},"140":{start:{line:272,column:4},end:{line:287,column:7}},"141":{start:{line:273,column:8},end:{line:286,column:11}},"142":{start:{line:276,column:16},end:{line:276,column:85}},"143":{start:{line:278,column:29},end:{line:278,column:96}},"144":{start:{line:279,column:12},end:{line:279,column:29}},"145":{start:{line:280,column:25},end:{line:280,column:58}},"146":{start:{line:281,column:12},end:{line:281,column:25}},"147":{start:{line:282,column:12},end:{line:282,column:90}},"148":{start:{line:283,column:12},end:{line:283,column:49}},"149":{start:{line:284,column:12},end:{line:284,column:62}},"150":{start:{line:285,column:12},end:{line:285,column:57}},"151":{start:{line:291,column:4},end:{line:304,column:7}},"152":{start:{line:292,column:8},end:{line:303,column:11}},"153":{start:{line:295,column:16},end:{line:295,column:58}},"154":{start:{line:297,column:29},end:{line:297,column:96}},"155":{start:{line:298,column:12},end:{line:298,column:29}},"156":{start:{line:299,column:12},end:{line:299,column:76}},"157":{start:{line:300,column:12},end:{line:300,column:57}},"158":{start:{line:301,column:12},end:{line:301,column:70}},"159":{start:{line:302,column:12},end:{line:302,column:65}},"160":{start:{line:305,column:4},end:{line:316,column:7}},"161":{start:{line:306,column:8},end:{line:310,column:11}},"162":{start:{line:307,column:25},end:{line:307,column:92}},"163":{start:{line:308,column:12},end:{line:308,column:60}},"164":{start:{line:309,column:12},end:{line:309,column:59}},"165":{start:{line:311,column:8},end:{line:315,column:11}},"166":{start:{line:312,column:25},end:{line:312,column:106}},"167":{start:{line:313,column:12},end:{line:313,column:60}},"168":{start:{line:314,column:12},end:{line:314,column:62}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:25,column:21},end:{line:25,column:22}},loc:{start:{line:25,column:27},end:{line:317,column:1}},line:25},"1":{name:"(anonymous_1)",decl:{start:{line:33,column:31},end:{line:33,column:32}},loc:{start:{line:33,column:37},end:{line:38,column:5}},line:33},"2":{name:"(anonymous_2)",decl:{start:{line:34,column:48},end:{line:34,column:49}},loc:{start:{line:34,column:54},end:{line:37,column:9}},line:34},"3":{name:"(anonymous_3)",decl:{start:{line:42,column:28},end:{line:42,column:29}},loc:{start:{line:42,column:34},end:{line:58,column:5}},line:42},"4":{name:"(anonymous_4)",decl:{start:{line:43,column:58},end:{line:43,column:59}},loc:{start:{line:43,column:64},end:{line:57,column:9}},line:43},"5":{name:"(anonymous_5)",decl:{start:{line:59,column:39},end:{line:59,column:40}},loc:{start:{line:59,column:45},end:{line:77,column:5}},line:59},"6":{name:"(anonymous_6)",decl:{start:{line:60,column:65},end:{line:60,column:66}},loc:{start:{line:60,column:71},end:{line:76,column:9}},line:60},"7":{name:"(anonymous_7)",decl:{start:{line:78,column:29},end:{line:78,column:30}},loc:{start:{line:78,column:35},end:{line:112,column:5}},line:78},"8":{name:"(anonymous_8)",decl:{start:{line:79,column:61},end:{line:79,column:62}},loc:{start:{line:79,column:67},end:{line:111,column:9}},line:79},"9":{name:"(anonymous_9)",decl:{start:{line:116,column:30},end:{line:116,column:31}},loc:{start:{line:116,column:36},end:{line:127,column:5}},line:116},"10":{name:"(anonymous_10)",decl:{start:{line:117,column:57},end:{line:117,column:58}},loc:{start:{line:117,column:63},end:{line:126,column:9}},line:117},"11":{name:"(anonymous_11)",decl:{start:{line:131,column:24},end:{line:131,column:25}},loc:{start:{line:131,column:30},end:{line:137,column:5}},line:131},"12":{name:"(anonymous_12)",decl:{start:{line:132,column:47},end:{line:132,column:48}},loc:{start:{line:132,column:53},end:{line:136,column:9}},line:132},"13":{name:"(anonymous_13)",decl:{start:{line:141,column:28},end:{line:141,column:29}},loc:{start:{line:141,column:34},end:{line:157,column:5}},line:141},"14":{name:"(anonymous_14)",decl:{start:{line:143,column:15},end:{line:143,column:16}},loc:{start:{line:143,column:21},end:{line:150,column:9}},line:143},"15":{name:"(anonymous_15)",decl:{start:{line:151,column:42},end:{line:151,column:43}},loc:{start:{line:151,column:48},end:{line:153,column:9}},line:151},"16":{name:"(anonymous_16)",decl:{start:{line:154,column:43},end:{line:154,column:44}},loc:{start:{line:154,column:49},end:{line:156,column:9}},line:154},"17":{name:"(anonymous_17)",decl:{start:{line:161,column:50},end:{line:161,column:51}},loc:{start:{line:161,column:56},end:{line:170,column:5}},line:161},"18":{name:"(anonymous_18)",decl:{start:{line:162,column:41},end:{line:162,column:42}},loc:{start:{line:162,column:47},end:{line:169,column:9}},line:162},"19":{name:"(anonymous_19)",decl:{start:{line:174,column:49},end:{line:174,column:50}},loc:{start:{line:174,column:55},end:{line:185,column:5}},line:174},"20":{name:"(anonymous_20)",decl:{start:{line:175,column:41},end:{line:175,column:42}},loc:{start:{line:175,column:47},end:{line:184,column:9}},line:175},"21":{name:"(anonymous_21)",decl:{start:{line:189,column:22},end:{line:189,column:23}},loc:{start:{line:189,column:28},end:{line:196,column:5}},line:189},"22":{name:"(anonymous_22)",decl:{start:{line:190,column:47},end:{line:190,column:48}},loc:{start:{line:190,column:53},end:{line:195,column:9}},line:190},"23":{name:"(anonymous_23)",decl:{start:{line:200,column:44},end:{line:200,column:45}},loc:{start:{line:200,column:50},end:{line:206,column:5}},line:200},"24":{name:"(anonymous_24)",decl:{start:{line:201,column:38},end:{line:201,column:39}},loc:{start:{line:201,column:44},end:{line:205,column:9}},line:201},"25":{name:"(anonymous_25)",decl:{start:{line:210,column:43},end:{line:210,column:44}},loc:{start:{line:210,column:49},end:{line:227,column:5}},line:210},"26":{name:"(anonymous_26)",decl:{start:{line:211,column:51},end:{line:211,column:52}},loc:{start:{line:211,column:57},end:{line:226,column:9}},line:211},"27":{name:"(anonymous_27)",decl:{start:{line:231,column:30},end:{line:231,column:31}},loc:{start:{line:231,column:36},end:{line:240,column:5}},line:231},"28":{name:"(anonymous_28)",decl:{start:{line:232,column:38},end:{line:232,column:39}},loc:{start:{line:232,column:44},end:{line:239,column:9}},line:232},"29":{name:"(anonymous_29)",decl:{start:{line:235,column:48},end:{line:235,column:49}},loc:{start:{line:235,column:59},end:{line:238,column:13}},line:235},"30":{name:"(anonymous_30)",decl:{start:{line:244,column:32},end:{line:244,column:33}},loc:{start:{line:244,column:38},end:{line:268,column:5}},line:244},"31":{name:"(anonymous_31)",decl:{start:{line:245,column:39},end:{line:245,column:40}},loc:{start:{line:245,column:45},end:{line:257,column:9}},line:245},"32":{name:"instanceOfAnnotation",decl:{start:{line:247,column:21},end:{line:247,column:41}},loc:{start:{line:247,column:50},end:{line:251,column:13}},line:247},"33":{name:"(anonymous_33)",decl:{start:{line:258,column:72},end:{line:258,column:73}},loc:{start:{line:258,column:78},end:{line:267,column:9}},line:258},"34":{name:"(anonymous_34)",decl:{start:{line:272,column:26},end:{line:272,column:27}},loc:{start:{line:272,column:32},end:{line:287,column:5}},line:272},"35":{name:"(anonymous_35)",decl:{start:{line:273,column:32},end:{line:273,column:33}},loc:{start:{line:273,column:38},end:{line:286,column:9}},line:273},"36":{name:"instanceOfLink",decl:{start:{line:275,column:21},end:{line:275,column:35}},loc:{start:{line:275,column:44},end:{line:277,column:13}},line:275},"37":{name:"(anonymous_37)",decl:{start:{line:291,column:34},end:{line:291,column:35}},loc:{start:{line:291,column:40},end:{line:304,column:5}},line:291},"38":{name:"(anonymous_38)",decl:{start:{line:292,column:41},end:{line:292,column:42}},loc:{start:{line:292,column:47},end:{line:303,column:9}},line:292},"39":{name:"instanceOfLink",decl:{start:{line:294,column:21},end:{line:294,column:35}},loc:{start:{line:294,column:44},end:{line:296,column:13}},line:294},"40":{name:"(anonymous_40)",decl:{start:{line:305,column:33},end:{line:305,column:34}},loc:{start:{line:305,column:39},end:{line:316,column:5}},line:305},"41":{name:"(anonymous_41)",decl:{start:{line:306,column:60},end:{line:306,column:61}},loc:{start:{line:306,column:66},end:{line:310,column:9}},line:306},"42":{name:"(anonymous_42)",decl:{start:{line:311,column:64},end:{line:311,column:65}},loc:{start:{line:311,column:70},end:{line:315,column:9}},line:311}},branchMap:{"0":{loc:{start:{line:248,column:24},end:{line:250,column:42}},type:"binary-expr",locations:[{start:{line:248,column:24},end:{line:248,column:47}},{start:{line:249,column:20},end:{line:249,column:41}},{start:{line:250,column:20},end:{line:250,column:42}}],line:248},"1":{loc:{start:{line:276,column:23},end:{line:276,column:84}},type:"binary-expr",locations:[{start:{line:276,column:23},end:{line:276,column:42}},{start:{line:276,column:46},end:{line:276,column:64}},{start:{line:276,column:68},end:{line:276,column:84}}],line:276},"2":{loc:{start:{line:295,column:23},end:{line:295,column:57}},type:"binary-expr",locations:[{start:{line:295,column:23},end:{line:295,column:39}},{start:{line:295,column:43},end:{line:295,column:57}}],line:295}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0},b:{"0":[0,0,0],"1":[0,0,0],"2":[0,0]},inputSourceMap:{version:3,file:"/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/test/test-root-span.ts",sources:["/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/test/test-root-span.ts"],names:[],mappings:"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",sourcesContent:["/**\n * Copyright 2018, OpenCensus Authors\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assert from 'assert';\nimport { NoRecordSpan } from '../src/trace/model/no-record/no-record-span';\nimport { RootSpan } from '../src/trace/model/root-span';\nimport { Span } from '../src/trace/model/span';\nimport { CoreTracer } from '../src/trace/model/tracer';\nimport * as types from '../src/trace/model/types';\nimport { Annotation, Link } from '../src/trace/model/types';\n\nconst tracer = new CoreTracer();\n\ndescribe('RootSpan', () => {\n  const name = 'MySpanName';\n  const kind = types.SpanKind.SERVER;\n  const traceId = 'd4cda95b652f4a1592b449d5929fda1b';\n  const parentSpanId = '';\n\n  /**\n   * Should create a RootSpan instance\n   */\n  describe('new RootSpan()', () => {\n    it('should create a RootSpan instance', () => {\n      const root = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      assert.ok(root instanceof RootSpan);\n    });\n  });\n\n  /**\n   * Should get span list from rootspan instance\n   */\n  describe('get spans()', () => {\n    it('should get span list from rootspan instance', () => {\n      const root = new RootSpan(tracer, name, kind, traceId, '');\n      root.start();\n      const span = root.startChildSpan({\n        name: 'spanName',\n        kind: types.SpanKind.CLIENT,\n      });\n\n      assert.strictEqual(root.spans.length, 1);\n      assert.strictEqual(span, root.spans[0]);\n      assert.strictEqual(span.kind, types.SpanKind.CLIENT);\n      assert.strictEqual(root.parentSpanId, parentSpanId);\n\n      for (const span of root.spans) {\n        assert.ok(span instanceof Span);\n      }\n    });\n  });\n\n  describe('get numberOfChildren()', () => {\n    it('should get numberOfChildren from rootspan instance', () => {\n      const root = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      root.start();\n      assert.strictEqual(root.numberOfChildren, 0);\n      root.startChildSpan({\n        name: 'spanName',\n        kind: types.SpanKind.UNSPECIFIED,\n      });\n      assert.strictEqual(root.numberOfChildren, 1);\n\n      for (let i = 0; i < 10; i++) {\n        root.startChildSpan({\n          name: 'spanName' + i,\n          kind: types.SpanKind.UNSPECIFIED,\n        });\n      }\n      assert.strictEqual(root.numberOfChildren, 11);\n    });\n  });\n\n  describe('nested spans', () => {\n    it('should get nested spans from rootspan instance', () => {\n      const root = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      root.start();\n      assert.strictEqual(root.numberOfChildren, 0);\n      const child1 = root.startChildSpan({\n        name: 'child1',\n        kind: types.SpanKind.UNSPECIFIED,\n      });\n      assert.strictEqual(root.numberOfChildren, 1);\n      assert.strictEqual(child1.numberOfChildren, 0);\n      const child2 = root.startChildSpan({\n        name: 'child2',\n        kind: types.SpanKind.UNSPECIFIED,\n      });\n      assert.strictEqual(root.numberOfChildren, 2);\n      const grandchild1 = child1.startChildSpan({\n        name: 'grandchild1',\n        kind: types.SpanKind.UNSPECIFIED,\n      });\n      assert.strictEqual(root.numberOfChildren, 2);\n      assert.strictEqual(child1.numberOfChildren, 1);\n      assert.strictEqual(child2.numberOfChildren, 0);\n      assert.strictEqual(grandchild1.numberOfChildren, 0);\n\n      assert.strictEqual(root.spans.length, 2);\n      assert.strictEqual(child1, root.spans[0]);\n      assert.strictEqual(child2, root.spans[1]);\n      assert.strictEqual(grandchild1.parentSpanId, child1.id);\n\n      assert.strictEqual(child1.spans.length, 1);\n      assert.strictEqual(grandchild1, child1.spans[0]);\n\n      assert.strictEqual(child2.spans.length, 0);\n      assert.strictEqual(grandchild1.spans.length, 0);\n\n      assert.strictEqual(root.allDescendants().length, 3);\n    });\n  });\n\n  /**\n   * Should get trace id from rootspan instance\n   */\n  describe('new traceId()', () => {\n    it('should get trace id from rootspan instance', () => {\n      const root = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      root.start();\n      assert.strictEqual(root.traceId, root.spanContext.traceId);\n\n      const child = root.startChildSpan({\n        name: 'child',\n        kind: types.SpanKind.UNSPECIFIED,\n      });\n      assert.strictEqual(root.traceId, child.traceId);\n    });\n  });\n\n  /**\n   * Should create and start a RootSpan instance\n   */\n  describe('start()', () => {\n    it('should start a RootSpan instance', () => {\n      const root = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      root.start();\n      assert.ok(root.started);\n    });\n  });\n\n  /**\n   * Should create and start a new span instance\n   */\n  describe('startSpan()', () => {\n    let root: RootSpan, span: types.Span;\n\n    before(() => {\n      root = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      root.start();\n      span = root.startChildSpan({\n        name: 'spanName',\n        kind: types.SpanKind.UNSPECIFIED,\n      });\n    });\n\n    it('should create span instance', () => {\n      assert.ok(span instanceof Span);\n    });\n\n    it('should start a span instance', () => {\n      assert.ok(span.started);\n    });\n  });\n\n  /**\n   * Should not start a span from a not started rootspan\n   */\n  describe('startSpan() before start rootspan', () => {\n    it('should create NoRecordSpan', () => {\n      const root = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      const span = root.startChildSpan({\n        name: 'spanName',\n        kind: types.SpanKind.UNSPECIFIED,\n      });\n      assert.ok(span instanceof NoRecordSpan);\n    });\n  });\n\n  /**\n   * Should not create a span from a ended rootspan\n   */\n  describe('startSpan() after rootspan ended', () => {\n    it('should create NoRecordSpan', () => {\n      const root = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      root.start();\n      root.end();\n      const span = root.startChildSpan({\n        name: 'spanName',\n        kind: types.SpanKind.UNSPECIFIED,\n      });\n      assert.ok(span instanceof NoRecordSpan);\n    });\n  });\n\n  /**\n   * Should end a rootspan instance\n   */\n  describe('end()', () => {\n    it('should end the rootspan instance', () => {\n      const root = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      root.start();\n      root.end();\n      assert.ok(root.ended);\n    });\n  });\n\n  /**\n   * Should not end a rootspan which was not started\n   */\n  describe('end() before start rootspan', () => {\n    it('should not end rootspan', () => {\n      const root = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      root.end();\n      assert.ok(!root.ended);\n    });\n  });\n\n  /**\n   * Should end all spans inside rootspan\n   */\n  describe('end() before end all spans', () => {\n    it('should end all spans inside rootspan', () => {\n      const root = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      root.start();\n      const child = root.startChildSpan({\n        name: 'child',\n        kind: types.SpanKind.UNSPECIFIED,\n      });\n      child.startChildSpan({\n        name: 'grandchild',\n        kind: types.SpanKind.UNSPECIFIED,\n      });\n      root.end();\n\n      for (const span of root.allDescendants()) {\n        assert.ok(span.ended);\n      }\n    });\n  });\n\n  /**\n   * Should add an attrinbutes\n   */\n  describe('addAtribute()', () => {\n    it('should add an attribute', () => {\n      const rootSpan = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      rootSpan.start();\n\n      ['String', 'Number', 'Boolean'].map(attType => {\n        rootSpan.addAttribute('testKey' + attType, 'testValue' + attType);\n        assert.strictEqual(\n          rootSpan.attributes['testKey' + attType],\n          'testValue' + attType\n        );\n      });\n    });\n  });\n\n  /**\n   * Should add an annotation\n   */\n  describe('addAnnotation()', () => {\n    it('should add an annotation', () => {\n      // tslint:disable:no-any\n      function instanceOfAnnotation(object: any): object is Annotation {\n        return (\n          'description' in object &&\n          'timestamp' in object &&\n          'attributes' in object\n        );\n      }\n\n      const rootSpan = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      rootSpan.start();\n\n      rootSpan.addAnnotation('description test', {}, Date.now());\n\n      assert.ok(rootSpan.annotations.length > 0);\n      assert.ok(instanceOfAnnotation(rootSpan.annotations[0]));\n    });\n\n    it('should add an annotation without attributes and timestamp', () => {\n      const rootSpan = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      rootSpan.start();\n\n      rootSpan.addAnnotation('description test');\n\n      assert.ok(rootSpan.annotations.length > 0);\n      assert.strictEqual(rootSpan.droppedAnnotationsCount, 0);\n      assert.strictEqual(\n        rootSpan.annotations[0].description,\n        'description test'\n      );\n      assert.deepStrictEqual(rootSpan.annotations[0].attributes, {});\n      assert.ok(rootSpan.annotations[0].timestamp > 0);\n    });\n  });\n\n  /**\n   * Should add a Link.\n   */\n  describe('addLink()', () => {\n    it('should add a Link', () => {\n      // tslint:disable:no-any\n      function instanceOfLink(object: any): object is Link {\n        return 'traceId' in object && 'spanId' in object && 'type' in object;\n      }\n\n      const rootSpan = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      rootSpan.start();\n\n      const span = new Span(tracer, rootSpan);\n      span.start();\n\n      rootSpan.addLink(\n        rootSpan.traceId,\n        span.id,\n        types.LinkType.CHILD_LINKED_SPAN\n      );\n\n      assert.ok(rootSpan.links.length > 0);\n      assert.strictEqual(rootSpan.droppedLinksCount, 0);\n      assert.ok(instanceOfLink(rootSpan.links[0]));\n    });\n  });\n\n  /**\n   * Should add a Message Event.\n   */\n  describe('addMessageEvent()', () => {\n    it('should add a Message Event', () => {\n      // tslint:disable:no-any\n      function instanceOfLink(object: any): object is Link {\n        return 'type' in object && 'id' in object;\n      }\n\n      const rootSpan = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      rootSpan.start();\n      rootSpan.addMessageEvent(types.MessageEventType.UNSPECIFIED, 1);\n\n      assert.ok(rootSpan.messageEvents.length > 0);\n      assert.strictEqual(rootSpan.droppedMessageEventsCount, 0);\n      assert.ok(instanceOfLink(rootSpan.messageEvents[0]));\n    });\n  });\n\n  describe('get traceState()', () => {\n    it('should handle optional / undefined traceState', () => {\n      const root = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      assert.ok(root instanceof RootSpan);\n      assert.strictEqual(root.traceState, undefined);\n    });\n\n    it('should create a RootSpan instance with traceState', () => {\n      const root = new RootSpan(\n        tracer,\n        name,\n        kind,\n        traceId,\n        parentSpanId,\n        'traceState'\n      );\n      assert.ok(root instanceof RootSpan);\n      assert.strictEqual(root.traceState, 'traceState');\n    });\n  });\n});\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"9610d3d080fd1245eae0f202e4c8c1a88238a022"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_zlsphk0qb=function(){return actualCoverage;};}return actualCoverage;}cov_zlsphk0qb();cov_zlsphk0qb().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const assert=(cov_zlsphk0qb().s[1]++,require("assert"));const no_record_span_1=(cov_zlsphk0qb().s[2]++,require("../src/trace/model/no-record/no-record-span"));const root_span_1=(cov_zlsphk0qb().s[3]++,require("../src/trace/model/root-span"));const span_1=(cov_zlsphk0qb().s[4]++,require("../src/trace/model/span"));const tracer_1=(cov_zlsphk0qb().s[5]++,require("../src/trace/model/tracer"));const types=(cov_zlsphk0qb().s[6]++,require("../src/trace/model/types"));const tracer=(cov_zlsphk0qb().s[7]++,new tracer_1.CoreTracer());cov_zlsphk0qb().s[8]++;describe('RootSpan',()=>{cov_zlsphk0qb().f[0]++;const name=(cov_zlsphk0qb().s[9]++,'MySpanName');const kind=(cov_zlsphk0qb().s[10]++,types.SpanKind.SERVER);const traceId=(cov_zlsphk0qb().s[11]++,'d4cda95b652f4a1592b449d5929fda1b');const parentSpanId=(cov_zlsphk0qb().s[12]++,'');/**
     * Should create a RootSpan instance
     */cov_zlsphk0qb().s[13]++;describe('new RootSpan()',()=>{cov_zlsphk0qb().f[1]++;cov_zlsphk0qb().s[14]++;it('should create a RootSpan instance',()=>{cov_zlsphk0qb().f[2]++;const root=(cov_zlsphk0qb().s[15]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));cov_zlsphk0qb().s[16]++;assert.ok(root instanceof root_span_1.RootSpan);});});/**
     * Should get span list from rootspan instance
     */cov_zlsphk0qb().s[17]++;describe('get spans()',()=>{cov_zlsphk0qb().f[3]++;cov_zlsphk0qb().s[18]++;it('should get span list from rootspan instance',()=>{cov_zlsphk0qb().f[4]++;const root=(cov_zlsphk0qb().s[19]++,new root_span_1.RootSpan(tracer,name,kind,traceId,''));cov_zlsphk0qb().s[20]++;root.start();const span=(cov_zlsphk0qb().s[21]++,root.startChildSpan({name:'spanName',kind:types.SpanKind.CLIENT}));cov_zlsphk0qb().s[22]++;assert.strictEqual(root.spans.length,1);cov_zlsphk0qb().s[23]++;assert.strictEqual(span,root.spans[0]);cov_zlsphk0qb().s[24]++;assert.strictEqual(span.kind,types.SpanKind.CLIENT);cov_zlsphk0qb().s[25]++;assert.strictEqual(root.parentSpanId,parentSpanId);cov_zlsphk0qb().s[26]++;for(const span of root.spans){cov_zlsphk0qb().s[27]++;assert.ok(span instanceof span_1.Span);}});});cov_zlsphk0qb().s[28]++;describe('get numberOfChildren()',()=>{cov_zlsphk0qb().f[5]++;cov_zlsphk0qb().s[29]++;it('should get numberOfChildren from rootspan instance',()=>{cov_zlsphk0qb().f[6]++;const root=(cov_zlsphk0qb().s[30]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));cov_zlsphk0qb().s[31]++;root.start();cov_zlsphk0qb().s[32]++;assert.strictEqual(root.numberOfChildren,0);cov_zlsphk0qb().s[33]++;root.startChildSpan({name:'spanName',kind:types.SpanKind.UNSPECIFIED});cov_zlsphk0qb().s[34]++;assert.strictEqual(root.numberOfChildren,1);cov_zlsphk0qb().s[35]++;for(let i=(cov_zlsphk0qb().s[36]++,0);i<10;i++){cov_zlsphk0qb().s[37]++;root.startChildSpan({name:'spanName'+i,kind:types.SpanKind.UNSPECIFIED});}cov_zlsphk0qb().s[38]++;assert.strictEqual(root.numberOfChildren,11);});});cov_zlsphk0qb().s[39]++;describe('nested spans',()=>{cov_zlsphk0qb().f[7]++;cov_zlsphk0qb().s[40]++;it('should get nested spans from rootspan instance',()=>{cov_zlsphk0qb().f[8]++;const root=(cov_zlsphk0qb().s[41]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));cov_zlsphk0qb().s[42]++;root.start();cov_zlsphk0qb().s[43]++;assert.strictEqual(root.numberOfChildren,0);const child1=(cov_zlsphk0qb().s[44]++,root.startChildSpan({name:'child1',kind:types.SpanKind.UNSPECIFIED}));cov_zlsphk0qb().s[45]++;assert.strictEqual(root.numberOfChildren,1);cov_zlsphk0qb().s[46]++;assert.strictEqual(child1.numberOfChildren,0);const child2=(cov_zlsphk0qb().s[47]++,root.startChildSpan({name:'child2',kind:types.SpanKind.UNSPECIFIED}));cov_zlsphk0qb().s[48]++;assert.strictEqual(root.numberOfChildren,2);const grandchild1=(cov_zlsphk0qb().s[49]++,child1.startChildSpan({name:'grandchild1',kind:types.SpanKind.UNSPECIFIED}));cov_zlsphk0qb().s[50]++;assert.strictEqual(root.numberOfChildren,2);cov_zlsphk0qb().s[51]++;assert.strictEqual(child1.numberOfChildren,1);cov_zlsphk0qb().s[52]++;assert.strictEqual(child2.numberOfChildren,0);cov_zlsphk0qb().s[53]++;assert.strictEqual(grandchild1.numberOfChildren,0);cov_zlsphk0qb().s[54]++;assert.strictEqual(root.spans.length,2);cov_zlsphk0qb().s[55]++;assert.strictEqual(child1,root.spans[0]);cov_zlsphk0qb().s[56]++;assert.strictEqual(child2,root.spans[1]);cov_zlsphk0qb().s[57]++;assert.strictEqual(grandchild1.parentSpanId,child1.id);cov_zlsphk0qb().s[58]++;assert.strictEqual(child1.spans.length,1);cov_zlsphk0qb().s[59]++;assert.strictEqual(grandchild1,child1.spans[0]);cov_zlsphk0qb().s[60]++;assert.strictEqual(child2.spans.length,0);cov_zlsphk0qb().s[61]++;assert.strictEqual(grandchild1.spans.length,0);cov_zlsphk0qb().s[62]++;assert.strictEqual(root.allDescendants().length,3);});});/**
     * Should get trace id from rootspan instance
     */cov_zlsphk0qb().s[63]++;describe('new traceId()',()=>{cov_zlsphk0qb().f[9]++;cov_zlsphk0qb().s[64]++;it('should get trace id from rootspan instance',()=>{cov_zlsphk0qb().f[10]++;const root=(cov_zlsphk0qb().s[65]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));cov_zlsphk0qb().s[66]++;root.start();cov_zlsphk0qb().s[67]++;assert.strictEqual(root.traceId,root.spanContext.traceId);const child=(cov_zlsphk0qb().s[68]++,root.startChildSpan({name:'child',kind:types.SpanKind.UNSPECIFIED}));cov_zlsphk0qb().s[69]++;assert.strictEqual(root.traceId,child.traceId);});});/**
     * Should create and start a RootSpan instance
     */cov_zlsphk0qb().s[70]++;describe('start()',()=>{cov_zlsphk0qb().f[11]++;cov_zlsphk0qb().s[71]++;it('should start a RootSpan instance',()=>{cov_zlsphk0qb().f[12]++;const root=(cov_zlsphk0qb().s[72]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));cov_zlsphk0qb().s[73]++;root.start();cov_zlsphk0qb().s[74]++;assert.ok(root.started);});});/**
     * Should create and start a new span instance
     */cov_zlsphk0qb().s[75]++;describe('startSpan()',()=>{cov_zlsphk0qb().f[13]++;let root,span;cov_zlsphk0qb().s[76]++;before(()=>{cov_zlsphk0qb().f[14]++;cov_zlsphk0qb().s[77]++;root=new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId);cov_zlsphk0qb().s[78]++;root.start();cov_zlsphk0qb().s[79]++;span=root.startChildSpan({name:'spanName',kind:types.SpanKind.UNSPECIFIED});});cov_zlsphk0qb().s[80]++;it('should create span instance',()=>{cov_zlsphk0qb().f[15]++;cov_zlsphk0qb().s[81]++;assert.ok(span instanceof span_1.Span);});cov_zlsphk0qb().s[82]++;it('should start a span instance',()=>{cov_zlsphk0qb().f[16]++;cov_zlsphk0qb().s[83]++;assert.ok(span.started);});});/**
     * Should not start a span from a not started rootspan
     */cov_zlsphk0qb().s[84]++;describe('startSpan() before start rootspan',()=>{cov_zlsphk0qb().f[17]++;cov_zlsphk0qb().s[85]++;it('should create NoRecordSpan',()=>{cov_zlsphk0qb().f[18]++;const root=(cov_zlsphk0qb().s[86]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));const span=(cov_zlsphk0qb().s[87]++,root.startChildSpan({name:'spanName',kind:types.SpanKind.UNSPECIFIED}));cov_zlsphk0qb().s[88]++;assert.ok(span instanceof no_record_span_1.NoRecordSpan);});});/**
     * Should not create a span from a ended rootspan
     */cov_zlsphk0qb().s[89]++;describe('startSpan() after rootspan ended',()=>{cov_zlsphk0qb().f[19]++;cov_zlsphk0qb().s[90]++;it('should create NoRecordSpan',()=>{cov_zlsphk0qb().f[20]++;const root=(cov_zlsphk0qb().s[91]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));cov_zlsphk0qb().s[92]++;root.start();cov_zlsphk0qb().s[93]++;root.end();const span=(cov_zlsphk0qb().s[94]++,root.startChildSpan({name:'spanName',kind:types.SpanKind.UNSPECIFIED}));cov_zlsphk0qb().s[95]++;assert.ok(span instanceof no_record_span_1.NoRecordSpan);});});/**
     * Should end a rootspan instance
     */cov_zlsphk0qb().s[96]++;describe('end()',()=>{cov_zlsphk0qb().f[21]++;cov_zlsphk0qb().s[97]++;it('should end the rootspan instance',()=>{cov_zlsphk0qb().f[22]++;const root=(cov_zlsphk0qb().s[98]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));cov_zlsphk0qb().s[99]++;root.start();cov_zlsphk0qb().s[100]++;root.end();cov_zlsphk0qb().s[101]++;assert.ok(root.ended);});});/**
     * Should not end a rootspan which was not started
     */cov_zlsphk0qb().s[102]++;describe('end() before start rootspan',()=>{cov_zlsphk0qb().f[23]++;cov_zlsphk0qb().s[103]++;it('should not end rootspan',()=>{cov_zlsphk0qb().f[24]++;const root=(cov_zlsphk0qb().s[104]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));cov_zlsphk0qb().s[105]++;root.end();cov_zlsphk0qb().s[106]++;assert.ok(!root.ended);});});/**
     * Should end all spans inside rootspan
     */cov_zlsphk0qb().s[107]++;describe('end() before end all spans',()=>{cov_zlsphk0qb().f[25]++;cov_zlsphk0qb().s[108]++;it('should end all spans inside rootspan',()=>{cov_zlsphk0qb().f[26]++;const root=(cov_zlsphk0qb().s[109]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));cov_zlsphk0qb().s[110]++;root.start();const child=(cov_zlsphk0qb().s[111]++,root.startChildSpan({name:'child',kind:types.SpanKind.UNSPECIFIED}));cov_zlsphk0qb().s[112]++;child.startChildSpan({name:'grandchild',kind:types.SpanKind.UNSPECIFIED});cov_zlsphk0qb().s[113]++;root.end();cov_zlsphk0qb().s[114]++;for(const span of root.allDescendants()){cov_zlsphk0qb().s[115]++;assert.ok(span.ended);}});});/**
     * Should add an attrinbutes
     */cov_zlsphk0qb().s[116]++;describe('addAtribute()',()=>{cov_zlsphk0qb().f[27]++;cov_zlsphk0qb().s[117]++;it('should add an attribute',()=>{cov_zlsphk0qb().f[28]++;const rootSpan=(cov_zlsphk0qb().s[118]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));cov_zlsphk0qb().s[119]++;rootSpan.start();cov_zlsphk0qb().s[120]++;['String','Number','Boolean'].map(attType=>{cov_zlsphk0qb().f[29]++;cov_zlsphk0qb().s[121]++;rootSpan.addAttribute('testKey'+attType,'testValue'+attType);cov_zlsphk0qb().s[122]++;assert.strictEqual(rootSpan.attributes['testKey'+attType],'testValue'+attType);});});});/**
     * Should add an annotation
     */cov_zlsphk0qb().s[123]++;describe('addAnnotation()',()=>{cov_zlsphk0qb().f[30]++;cov_zlsphk0qb().s[124]++;it('should add an annotation',()=>{cov_zlsphk0qb().f[31]++;// tslint:disable:no-any
function instanceOfAnnotation(object){cov_zlsphk0qb().f[32]++;cov_zlsphk0qb().s[125]++;return(cov_zlsphk0qb().b[0][0]++,'description'in object)&&(cov_zlsphk0qb().b[0][1]++,'timestamp'in object)&&(cov_zlsphk0qb().b[0][2]++,'attributes'in object);}const rootSpan=(cov_zlsphk0qb().s[126]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));cov_zlsphk0qb().s[127]++;rootSpan.start();cov_zlsphk0qb().s[128]++;rootSpan.addAnnotation('description test',{},Date.now());cov_zlsphk0qb().s[129]++;assert.ok(rootSpan.annotations.length>0);cov_zlsphk0qb().s[130]++;assert.ok(instanceOfAnnotation(rootSpan.annotations[0]));});cov_zlsphk0qb().s[131]++;it('should add an annotation without attributes and timestamp',()=>{cov_zlsphk0qb().f[33]++;const rootSpan=(cov_zlsphk0qb().s[132]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));cov_zlsphk0qb().s[133]++;rootSpan.start();cov_zlsphk0qb().s[134]++;rootSpan.addAnnotation('description test');cov_zlsphk0qb().s[135]++;assert.ok(rootSpan.annotations.length>0);cov_zlsphk0qb().s[136]++;assert.strictEqual(rootSpan.droppedAnnotationsCount,0);cov_zlsphk0qb().s[137]++;assert.strictEqual(rootSpan.annotations[0].description,'description test');cov_zlsphk0qb().s[138]++;assert.deepStrictEqual(rootSpan.annotations[0].attributes,{});cov_zlsphk0qb().s[139]++;assert.ok(rootSpan.annotations[0].timestamp>0);});});/**
     * Should add a Link.
     */cov_zlsphk0qb().s[140]++;describe('addLink()',()=>{cov_zlsphk0qb().f[34]++;cov_zlsphk0qb().s[141]++;it('should add a Link',()=>{cov_zlsphk0qb().f[35]++;// tslint:disable:no-any
function instanceOfLink(object){cov_zlsphk0qb().f[36]++;cov_zlsphk0qb().s[142]++;return(cov_zlsphk0qb().b[1][0]++,'traceId'in object)&&(cov_zlsphk0qb().b[1][1]++,'spanId'in object)&&(cov_zlsphk0qb().b[1][2]++,'type'in object);}const rootSpan=(cov_zlsphk0qb().s[143]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));cov_zlsphk0qb().s[144]++;rootSpan.start();const span=(cov_zlsphk0qb().s[145]++,new span_1.Span(tracer,rootSpan));cov_zlsphk0qb().s[146]++;span.start();cov_zlsphk0qb().s[147]++;rootSpan.addLink(rootSpan.traceId,span.id,types.LinkType.CHILD_LINKED_SPAN);cov_zlsphk0qb().s[148]++;assert.ok(rootSpan.links.length>0);cov_zlsphk0qb().s[149]++;assert.strictEqual(rootSpan.droppedLinksCount,0);cov_zlsphk0qb().s[150]++;assert.ok(instanceOfLink(rootSpan.links[0]));});});/**
     * Should add a Message Event.
     */cov_zlsphk0qb().s[151]++;describe('addMessageEvent()',()=>{cov_zlsphk0qb().f[37]++;cov_zlsphk0qb().s[152]++;it('should add a Message Event',()=>{cov_zlsphk0qb().f[38]++;// tslint:disable:no-any
function instanceOfLink(object){cov_zlsphk0qb().f[39]++;cov_zlsphk0qb().s[153]++;return(cov_zlsphk0qb().b[2][0]++,'type'in object)&&(cov_zlsphk0qb().b[2][1]++,'id'in object);}const rootSpan=(cov_zlsphk0qb().s[154]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));cov_zlsphk0qb().s[155]++;rootSpan.start();cov_zlsphk0qb().s[156]++;rootSpan.addMessageEvent(types.MessageEventType.UNSPECIFIED,1);cov_zlsphk0qb().s[157]++;assert.ok(rootSpan.messageEvents.length>0);cov_zlsphk0qb().s[158]++;assert.strictEqual(rootSpan.droppedMessageEventsCount,0);cov_zlsphk0qb().s[159]++;assert.ok(instanceOfLink(rootSpan.messageEvents[0]));});});cov_zlsphk0qb().s[160]++;describe('get traceState()',()=>{cov_zlsphk0qb().f[40]++;cov_zlsphk0qb().s[161]++;it('should handle optional / undefined traceState',()=>{cov_zlsphk0qb().f[41]++;const root=(cov_zlsphk0qb().s[162]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));cov_zlsphk0qb().s[163]++;assert.ok(root instanceof root_span_1.RootSpan);cov_zlsphk0qb().s[164]++;assert.strictEqual(root.traceState,undefined);});cov_zlsphk0qb().s[165]++;it('should create a RootSpan instance with traceState',()=>{cov_zlsphk0qb().f[42]++;const root=(cov_zlsphk0qb().s[166]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId,'traceState'));cov_zlsphk0qb().s[167]++;assert.ok(root instanceof root_span_1.RootSpan);cov_zlsphk0qb().s[168]++;assert.strictEqual(root.traceState,'traceState');});});});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3VzZXJtYWl0aGEvdHJhZGVtYXN0ZXIvbGlicy9saWItZXh0ZXJuYWwtb3BlbmNlbnN1cy1ub2RlL3Rlc3QvdGVzdC1yb290LXNwYW4udHMiLCJzb3VyY2VzIjpbIi9Vc2Vycy91c2VybWFpdGhhL3RyYWRlbWFzdGVyL2xpYnMvbGliLWV4dGVybmFsLW9wZW5jZW5zdXMtbm9kZS90ZXN0L3Rlc3Qtcm9vdC1zcGFuLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7Ozs7Ozs7Ozs7R0FjRzs7QUFFSCxpQ0FBaUM7QUFDakMsZ0ZBQTJFO0FBQzNFLDREQUF3RDtBQUN4RCxrREFBK0M7QUFDL0Msc0RBQXVEO0FBQ3ZELGtEQUFrRDtBQUdsRCxNQUFNLE1BQU0sR0FBRyxJQUFJLG1CQUFVLEVBQUUsQ0FBQztBQUVoQyxRQUFRLENBQUMsVUFBVSxFQUFFLEdBQUcsRUFBRTtJQUN4QixNQUFNLElBQUksR0FBRyxZQUFZLENBQUM7SUFDMUIsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUM7SUFDbkMsTUFBTSxPQUFPLEdBQUcsa0NBQWtDLENBQUM7SUFDbkQsTUFBTSxZQUFZLEdBQUcsRUFBRSxDQUFDO0lBRXhCOztPQUVHO0lBQ0gsUUFBUSxDQUFDLGdCQUFnQixFQUFFLEdBQUcsRUFBRTtRQUM5QixFQUFFLENBQUMsbUNBQW1DLEVBQUUsR0FBRyxFQUFFO1lBQzNDLE1BQU0sSUFBSSxHQUFHLElBQUksb0JBQVEsQ0FBQyxNQUFNLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsWUFBWSxDQUFDLENBQUM7WUFDckUsTUFBTSxDQUFDLEVBQUUsQ0FBQyxJQUFJLFlBQVksb0JBQVEsQ0FBQyxDQUFDO1FBQ3RDLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQyxDQUFDLENBQUM7SUFFSDs7T0FFRztJQUNILFFBQVEsQ0FBQyxhQUFhLEVBQUUsR0FBRyxFQUFFO1FBQzNCLEVBQUUsQ0FBQyw2Q0FBNkMs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R0FBRyxFQUFFO1lBQ3ZELE1BQU0sSUFBSSxHQUFHLElBQUksb0JBQVEsQ0FBQyxNQUFNLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsWUFBWSxDQUFDLENBQUM7WUFDckUsTUFBTSxDQUFDLEVBQUUsQ0FBQyxJQUFJLFlBQVksb0JBQVEsQ0FBQyxDQUFDO1lBQ3BDLE1BQU0sQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxTQUFTLENBQUMsQ0FBQztRQUNqRCxDQUFDLENBQUMsQ0FBQztRQUVILEVBQUUsQ0FBQyxtREFBbUQsRUFBRSxHQUFHLEVBQUU7WUFDM0QsTUFBTSxJQUFJLEdBQUcsSUFBSSxvQkFBUSxDQUN2QixNQUFNLEVBQ04sSUFBSSxFQUNKLElBQUksRUFDSixPQUFPLEVBQ1AsWUFBWSxFQUNaLFlBQVksQ0FDYixDQUFDO1lBQ0YsTUFBTSxDQUFDLEVBQUUsQ0FBQyxJQUFJLFlBQVksb0JBQVEsQ0FBQyxDQUFDO1lBQ3BDLE1BQU0sQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxZQUFZLENBQUMsQ0FBQztRQUNwRCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAyMDE4LCBPcGVuQ2Vuc3VzIEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgJ0xpY2Vuc2UnKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gJ0FTIElTJyBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0ICogYXMgYXNzZXJ0IGZyb20gJ2Fzc2VydCc7XG5pbXBvcnQgeyBOb1JlY29yZFNwYW4gfSBmcm9tICcuLi9zcmMvdHJhY2UvbW9kZWwvbm8tcmVjb3JkL25vLXJlY29yZC1zcGFuJztcbmltcG9ydCB7IFJvb3RTcGFuIH0gZnJvbSAnLi4vc3JjL3RyYWNlL21vZGVsL3Jvb3Qtc3Bhbic7XG5pbXBvcnQgeyBTcGFuIH0gZnJvbSAnLi4vc3JjL3RyYWNlL21vZGVsL3NwYW4nO1xuaW1wb3J0IHsgQ29yZVRyYWNlciB9IGZyb20gJy4uL3NyYy90cmFjZS9tb2RlbC90cmFjZXInO1xuaW1wb3J0ICogYXMgdHlwZXMgZnJvbSAnLi4vc3JjL3RyYWNlL21vZGVsL3R5cGVzJztcbmltcG9ydCB7IEFubm90YXRpb24sIExpbmsgfSBmcm9tICcuLi9zcmMvdHJhY2UvbW9kZWwvdHlwZXMnO1xuXG5jb25zdCB0cmFjZXIgPSBuZXcgQ29yZVRyYWNlcigpO1xuXG5kZXNjcmliZSgnUm9vdFNwYW4nLCAoKSA9PiB7XG4gIGNvbnN0IG5hbWUgPSAnTXlTcGFuTmFtZSc7XG4gIGNvbnN0IGtpbmQgPSB0eXBlcy5TcGFuS2luZC5TRVJWRVI7XG4gIGNvbnN0IHRyYWNlSWQgPSAnZDRjZGE5NWI2NTJmNGExNTkyYjQ0OWQ1OTI5ZmRhMWInO1xuICBjb25zdCBwYXJlbnRTcGFuSWQgPSAnJztcblxuICAvKipcbiAgICogU2hvdWxkIGNyZWF0ZSBhIFJvb3RTcGFuIGluc3RhbmNlXG4gICAqL1xuICBkZXNjcmliZSgnbmV3IFJvb3RTcGFuKCknLCAoKSA9PiB7XG4gICAgaXQoJ3Nob3VsZCBjcmVhdGUgYSBSb290U3BhbiBpbnN0YW5jZScsICgpID0+IHtcbiAgICAgIGNvbnN0IHJvb3QgPSBuZXcgUm9vdFNwYW4odHJhY2VyLCBuYW1lLCBraW5kLCB0cmFjZUlkLCBwYXJlbnRTcGFuSWQpO1xuICAgICAgYXNzZXJ0Lm9rKHJvb3QgaW5zdGFuY2VvZiBSb290U3Bhbik7XG4gICAgfSk7XG4gIH0pO1xuXG4gIC8qKlxuICAgKiBTaG91bGQgZ2V0IHNwYW4gbGlzdCBmcm9tIHJvb3RzcGFuIGluc3RhbmNlXG4gICAqL1xuICBkZXNjcmliZSgnZ2V0IHNwYW5zKCknLCAoKSA9PiB7XG4gICAgaXQoJ3Nob3VsZCBnZXQgc3BhbiBsaXN0IGZyb20gcm9vdHNwYW4gaW5zdGFuY2UnLCAoKSA9PiB7XG4gICAgICBjb25zdCByb290ID0gbmV3IFJvb3RTcGFuKHRyYWNlciwgbmFtZSwga2luZCwgdHJhY2VJZCwgJycpO1xuICAgICAgcm9vdC5zdGFydCgpO1xuICAgICAgY29uc3Qgc3BhbiA9IHJvb3Quc3RhcnRDaGlsZFNwYW4oe1xuICAgICAgICBuYW1lOiAnc3Bhbk5hbWUnLFxuICAgICAgICBraW5kOiB0eXBlcy5TcGFuS2luZC5DTElFTlQsXG4gICAgICB9KTtcblxuICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKHJvb3Quc3BhbnMubGVuZ3RoLCAxKTtcbiAgICAgIGFzc2VydC5zdHJpY3RFcXVhbChzcGFuLCByb290LnNwYW5zWzBdKTtcbiAgICAgIGFzc2VydC5zdHJpY3RFcXVhbChzcGFuLmtpbmQsIHR5cGVzLlNwYW5LaW5kLkNMSUVOVCk7XG4gICAgICBhc3NlcnQuc3RyaWN0RXF1YWwocm9vdC5wYXJlbnRTcGFuSWQsIHBhcmVudFNwYW5JZCk7XG5cbiAgICAgIGZvciAoY29uc3Qgc3BhbiBvZiByb290LnNwYW5zKSB7XG4gICAgICAgIGFzc2VydC5vayhzcGFuIGluc3RhbmNlb2YgU3Bhbik7XG4gICAgICB9XG4gICAgfSk7XG4gIH0pO1xuXG4gIGRlc2NyaWJlKCdnZXQgbnVtYmVyT2ZDaGlsZHJlbigpJywgKCkgPT4ge1xuICAgIGl0KCdzaG91bGQgZ2V0IG51bWJlck9mQ2hpbGRyZW4gZnJvbSByb290c3BhbiBpbnN0YW5jZScsICgpID0+IHtcbiAgICAgIGNvbnN0IHJvb3QgPSBuZXcgUm9vdFNwYW4odHJhY2VyLCBuYW1lLCBraW5kLCB0cmFjZUlkLCBwYXJlbnRTcGFuSWQpO1xuICAgICAgcm9vdC5zdGFydCgpO1xuICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKHJvb3QubnVtYmVyT2ZDaGlsZHJlbiwgMCk7XG4gICAgICByb290LnN0YXJ0Q2hpbGRTcGFuKHtcbiAgICAgICAgbmFtZTogJ3NwYW5OYW1lJyxcbiAgICAgICAga2luZDogdHlwZXMuU3BhbktpbmQuVU5TUEVDSUZJRUQsXG4gICAgICB9KTtcbiAgICAgIGFzc2VydC5zdHJpY3RFcXVhbChyb290Lm51bWJlck9mQ2hpbGRyZW4sIDEpO1xuXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDEwOyBpKyspIHtcbiAgICAgICAgcm9vdC5zdGFydENoaWxkU3Bhbih7XG4gICAgICAgICAgbmFtZTogJ3NwYW5OYW1lJyArIGksXG4gICAgICAgICAga2luZDogdHlwZXMuU3BhbktpbmQuVU5TUEVDSUZJRUQsXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKHJvb3QubnVtYmVyT2ZDaGlsZHJlbiwgMTEpO1xuICAgIH0pO1xuICB9KTtcblxuICBkZXNjcmliZSgnbmVzdGVkIHNwYW5zJywgKCkgPT4ge1xuICAgIGl0KCdzaG91bGQgZ2V0IG5lc3RlZCBzcGFucyBmcm9tIHJvb3RzcGFuIGluc3RhbmNlJywgKCkgPT4ge1xuICAgICAgY29uc3Qgcm9vdCA9IG5ldyBSb290U3Bhbih0cmFjZXIsIG5hbWUsIGtpbmQsIHRyYWNlSWQsIHBhcmVudFNwYW5JZCk7XG4gICAgICByb290LnN0YXJ0KCk7XG4gICAgICBhc3NlcnQuc3RyaWN0RXF1YWwocm9vdC5udW1iZXJPZkNoaWxkcmVuLCAwKTtcbiAgICAgIGNvbnN0IGNoaWxkMSA9IHJvb3Quc3RhcnRDaGlsZFNwYW4oe1xuICAgICAgICBuYW1lOiAnY2hpbGQxJyxcbiAgICAgICAga2luZDogdHlwZXMuU3BhbktpbmQuVU5TUEVDSUZJRUQsXG4gICAgICB9KTtcbiAgICAgIGFzc2VydC5zdHJpY3RFcXVhbChyb290Lm51bWJlck9mQ2hpbGRyZW4sIDEpO1xuICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKGNoaWxkMS5udW1iZXJPZkNoaWxkcmVuLCAwKTtcbiAgICAgIGNvbnN0IGNoaWxkMiA9IHJvb3Quc3RhcnRDaGlsZFNwYW4oe1xuICAgICAgICBuYW1lOiAnY2hpbGQyJyxcbiAgICAgICAga2luZDogdHlwZXMuU3BhbktpbmQuVU5TUEVDSUZJRUQsXG4gICAgICB9KTtcbiAgICAgIGFzc2VydC5zdHJpY3RFcXVhbChyb290Lm51bWJlck9mQ2hpbGRyZW4sIDIpO1xuICAgICAgY29uc3QgZ3JhbmRjaGlsZDEgPSBjaGlsZDEuc3RhcnRDaGlsZFNwYW4oe1xuICAgICAgICBuYW1lOiAnZ3JhbmRjaGlsZDEnLFxuICAgICAgICBraW5kOiB0eXBlcy5TcGFuS2luZC5VTlNQRUNJRklFRCxcbiAgICAgIH0pO1xuICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKHJvb3QubnVtYmVyT2ZDaGlsZHJlbiwgMik7XG4gICAgICBhc3NlcnQuc3RyaWN0RXF1YWwoY2hpbGQxLm51bWJlck9mQ2hpbGRyZW4sIDEpO1xuICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKGNoaWxkMi5udW1iZXJPZkNoaWxkcmVuLCAwKTtcbiAgICAgIGFzc2VydC5zdHJpY3RFcXVhbChncmFuZGNoaWxkMS5udW1iZXJPZkNoaWxkcmVuLCAwKTtcblxuICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKHJvb3Quc3BhbnMubGVuZ3RoLCAyKTtcbiAgICAgIGFzc2VydC5zdHJpY3RFcXVhbChjaGlsZDEsIHJvb3Quc3BhbnNbMF0pO1xuICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKGNoaWxkMiwgcm9vdC5zcGFuc1sxXSk7XG4gICAgICBhc3NlcnQuc3RyaWN0RXF1YWwoZ3JhbmRjaGlsZDEucGFyZW50U3BhbklkLCBjaGlsZDEuaWQpO1xuXG4gICAgICBhc3NlcnQuc3RyaWN0RXF1YWwoY2hpbGQxLnNwYW5zLmxlbmd0aCwgMSk7XG4gICAgICBhc3NlcnQuc3RyaWN0RXF1YWwoZ3JhbmRjaGlsZDEsIGNoaWxkMS5zcGFuc1swXSk7XG5cbiAgICAgIGFzc2VydC5zdHJpY3RFcXVhbChjaGlsZDIuc3BhbnMubGVuZ3RoLCAwKTtcbiAgICAgIGFzc2VydC5zdHJpY3RFcXVhbChncmFuZGNoaWxkMS5zcGFucy5sZW5ndGgsIDApO1xuXG4gICAgICBhc3NlcnQuc3RyaWN0RXF1YWwocm9vdC5hbGxEZXNjZW5kYW50cygpLmxlbmd0aCwgMyk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIC8qKlxuICAgKiBTaG91bGQgZ2V0IHRyYWNlIGlkIGZyb20gcm9vdHNwYW4gaW5zdGFuY2VcbiAgICovXG4gIGRlc2NyaWJlKCduZXcgdHJhY2VJZCgpJywgKCkgPT4ge1xuICAgIGl0KCdzaG91bGQgZ2V0IHRyYWNlIGlkIGZyb20gcm9vdHNwYW4gaW5zdGFuY2UnLCAoKSA9PiB7XG4gICAgICBjb25zdCByb290ID0gbmV3IFJvb3RTcGFuKHRyYWNlciwgbmFtZSwga2luZCwgdHJhY2VJZCwgcGFyZW50U3BhbklkKTtcbiAgICAgIHJvb3Quc3RhcnQoKTtcbiAgICAgIGFzc2VydC5zdHJpY3RFcXVhbChyb290LnRyYWNlSWQsIHJvb3Quc3BhbkNvbnRleHQudHJhY2VJZCk7XG5cbiAgICAgIGNvbnN0IGNoaWxkID0gcm9vdC5zdGFydENoaWxkU3Bhbih7XG4gICAgICAgIG5hbWU6ICdjaGlsZCcsXG4gICAgICAgIGtpbmQ6IHR5cGVzLlNwYW5LaW5kLlVOU1BFQ0lGSUVELFxuICAgICAgfSk7XG4gICAgICBhc3NlcnQuc3RyaWN0RXF1YWwocm9vdC50cmFjZUlkLCBjaGlsZC50cmFjZUlkKTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgLyoqXG4gICAqIFNob3VsZCBjcmVhdGUgYW5kIHN0YXJ0IGEgUm9vdFNwYW4gaW5zdGFuY2VcbiAgICovXG4gIGRlc2NyaWJlKCdzdGFydCgpJywgKCkgPT4ge1xuICAgIGl0KCdzaG91bGQgc3RhcnQgYSBSb290U3BhbiBpbnN0YW5jZScsICgpID0+IHtcbiAgICAgIGNvbnN0IHJvb3QgPSBuZXcgUm9vdFNwYW4odHJhY2VyLCBuYW1lLCBraW5kLCB0cmFjZUlkLCBwYXJlbnRTcGFuSWQpO1xuICAgICAgcm9vdC5zdGFydCgpO1xuICAgICAgYXNzZXJ0Lm9rKHJvb3Quc3RhcnRlZCk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIC8qKlxuICAgKiBTaG91bGQgY3JlYXRlIGFuZCBzdGFydCBhIG5ldyBzcGFuIGluc3RhbmNlXG4gICAqL1xuICBkZXNjcmliZSgnc3RhcnRTcGFuKCknLCAoKSA9PiB7XG4gICAgbGV0IHJvb3Q6IFJvb3RTcGFuLCBzcGFuOiB0eXBlcy5TcGFuO1xuXG4gICAgYmVmb3JlKCgpID0+IHtcbiAgICAgIHJvb3QgPSBuZXcgUm9vdFNwYW4odHJhY2VyLCBuYW1lLCBraW5kLCB0cmFjZUlkLCBwYXJlbnRTcGFuSWQpO1xuICAgICAgcm9vdC5zdGFydCgpO1xuICAgICAgc3BhbiA9IHJvb3Quc3RhcnRDaGlsZFNwYW4oe1xuICAgICAgICBuYW1lOiAnc3Bhbk5hbWUnLFxuICAgICAgICBraW5kOiB0eXBlcy5TcGFuS2luZC5VTlNQRUNJRklFRCxcbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgaXQoJ3Nob3VsZCBjcmVhdGUgc3BhbiBpbnN0YW5jZScsICgpID0+IHtcbiAgICAgIGFzc2VydC5vayhzcGFuIGluc3RhbmNlb2YgU3Bhbik7XG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIHN0YXJ0IGEgc3BhbiBpbnN0YW5jZScsICgpID0+IHtcbiAgICAgIGFzc2VydC5vayhzcGFuLnN0YXJ0ZWQpO1xuICAgIH0pO1xuICB9KTtcblxuICAvKipcbiAgICogU2hvdWxkIG5vdCBzdGFydCBhIHNwYW4gZnJvbSBhIG5vdCBzdGFydGVkIHJvb3RzcGFuXG4gICAqL1xuICBkZXNjcmliZSgnc3RhcnRTcGFuKCkgYmVmb3JlIHN0YXJ0IHJvb3RzcGFuJywgKCkgPT4ge1xuICAgIGl0KCdzaG91bGQgY3JlYXRlIE5vUmVjb3JkU3BhbicsICgpID0+IHtcbiAgICAgIGNvbnN0IHJvb3QgPSBuZXcgUm9vdFNwYW4odHJhY2VyLCBuYW1lLCBraW5kLCB0cmFjZUlkLCBwYXJlbnRTcGFuSWQpO1xuICAgICAgY29uc3Qgc3BhbiA9IHJvb3Quc3RhcnRDaGlsZFNwYW4oe1xuICAgICAgICBuYW1lOiAnc3Bhbk5hbWUnLFxuICAgICAgICBraW5kOiB0eXBlcy5TcGFuS2luZC5VTlNQRUNJRklFRCxcbiAgICAgIH0pO1xuICAgICAgYXNzZXJ0Lm9rKHNwYW4gaW5zdGFuY2VvZiBOb1JlY29yZFNwYW4pO1xuICAgIH0pO1xuICB9KTtcblxuICAvKipcbiAgICogU2hvdWxkIG5vdCBjcmVhdGUgYSBzcGFuIGZyb20gYSBlbmRlZCByb290c3BhblxuICAgKi9cbiAgZGVzY3JpYmUoJ3N0YXJ0U3BhbigpIGFmdGVyIHJvb3RzcGFuIGVuZGVkJywgKCkgPT4ge1xuICAgIGl0KCdzaG91bGQgY3JlYXRlIE5vUmVjb3JkU3BhbicsICgpID0+IHtcbiAgICAgIGNvbnN0IHJvb3QgPSBuZXcgUm9vdFNwYW4odHJhY2VyLCBuYW1lLCBraW5kLCB0cmFjZUlkLCBwYXJlbnRTcGFuSWQpO1xuICAgICAgcm9vdC5zdGFydCgpO1xuICAgICAgcm9vdC5lbmQoKTtcbiAgICAgIGNvbnN0IHNwYW4gPSByb290LnN0YXJ0Q2hpbGRTcGFuKHtcbiAgICAgICAgbmFtZTogJ3NwYW5OYW1lJyxcbiAgICAgICAga2luZDogdHlwZXMuU3BhbktpbmQuVU5TUEVDSUZJRUQsXG4gICAgICB9KTtcbiAgICAgIGFzc2VydC5vayhzcGFuIGluc3RhbmNlb2YgTm9SZWNvcmRTcGFuKTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgLyoqXG4gICAqIFNob3VsZCBlbmQgYSByb290c3BhbiBpbnN0YW5jZVxuICAgKi9cbiAgZGVzY3JpYmUoJ2VuZCgpJywgKCkgPT4ge1xuICAgIGl0KCdzaG91bGQgZW5kIHRoZSByb290c3BhbiBpbnN0YW5jZScsICgpID0+IHtcbiAgICAgIGNvbnN0IHJvb3QgPSBuZXcgUm9vdFNwYW4odHJhY2VyLCBuYW1lLCBraW5kLCB0cmFjZUlkLCBwYXJlbnRTcGFuSWQpO1xuICAgICAgcm9vdC5zdGFydCgpO1xuICAgICAgcm9vdC5lbmQoKTtcbiAgICAgIGFzc2VydC5vayhyb290LmVuZGVkKTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgLyoqXG4gICAqIFNob3VsZCBub3QgZW5kIGEgcm9vdHNwYW4gd2hpY2ggd2FzIG5vdCBzdGFydGVkXG4gICAqL1xuICBkZXNjcmliZSgnZW5kKCkgYmVmb3JlIHN0YXJ0IHJvb3RzcGFuJywgKCkgPT4ge1xuICAgIGl0KCdzaG91bGQgbm90IGVuZCByb290c3BhbicsICgpID0+IHtcbiAgICAgIGNvbnN0IHJvb3QgPSBuZXcgUm9vdFNwYW4odHJhY2VyLCBuYW1lLCBraW5kLCB0cmFjZUlkLCBwYXJlbnRTcGFuSWQpO1xuICAgICAgcm9vdC5lbmQoKTtcbiAgICAgIGFzc2VydC5vayghcm9vdC5lbmRlZCk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIC8qKlxuICAgKiBTaG91bGQgZW5kIGFsbCBzcGFucyBpbnNpZGUgcm9vdHNwYW5cbiAgICovXG4gIGRlc2NyaWJlKCdlbmQoKSBiZWZvcmUgZW5kIGFsbCBzcGFucycsICgpID0+IHtcbiAgICBpdCgnc2hvdWxkIGVuZCBhbGwgc3BhbnMgaW5zaWRlIHJvb3RzcGFuJywgKCkgPT4ge1xuICAgICAgY29uc3Qgcm9vdCA9IG5ldyBSb290U3Bhbih0cmFjZXIsIG5hbWUsIGtpbmQsIHRyYWNlSWQsIHBhcmVudFNwYW5JZCk7XG4gICAgICByb290LnN0YXJ0KCk7XG4gICAgICBjb25zdCBjaGlsZCA9IHJvb3Quc3RhcnRDaGlsZFNwYW4oe1xuICAgICAgICBuYW1lOiAnY2hpbGQnLFxuICAgICAgICBraW5kOiB0eXBlcy5TcGFuS2luZC5VTlNQRUNJRklFRCxcbiAgICAgIH0pO1xuICAgICAgY2hpbGQuc3RhcnRDaGlsZFNwYW4oe1xuICAgICAgICBuYW1lOiAnZ3JhbmRjaGlsZCcsXG4gICAgICAgIGtpbmQ6IHR5cGVzLlNwYW5LaW5kLlVOU1BFQ0lGSUVELFxuICAgICAgfSk7XG4gICAgICByb290LmVuZCgpO1xuXG4gICAgICBmb3IgKGNvbnN0IHNwYW4gb2Ygcm9vdC5hbGxEZXNjZW5kYW50cygpKSB7XG4gICAgICAgIGFzc2VydC5vayhzcGFuLmVuZGVkKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSk7XG5cbiAgLyoqXG4gICAqIFNob3VsZCBhZGQgYW4gYXR0cmluYnV0ZXNcbiAgICovXG4gIGRlc2NyaWJlKCdhZGRBdHJpYnV0ZSgpJywgKCkgPT4ge1xuICAgIGl0KCdzaG91bGQgYWRkIGFuIGF0dHJpYnV0ZScsICgpID0+IHtcbiAgICAgIGNvbnN0IHJvb3RTcGFuID0gbmV3IFJvb3RTcGFuKHRyYWNlciwgbmFtZSwga2luZCwgdHJhY2VJZCwgcGFyZW50U3BhbklkKTtcbiAgICAgIHJvb3RTcGFuLnN0YXJ0KCk7XG5cbiAgICAgIFsnU3RyaW5nJywgJ051bWJlcicsICdCb29sZWFuJ10ubWFwKGF0dFR5cGUgPT4ge1xuICAgICAgICByb290U3Bhbi5hZGRBdHRyaWJ1dGUoJ3Rlc3RLZXknICsgYXR0VHlwZSwgJ3Rlc3RWYWx1ZScgKyBhdHRUeXBlKTtcbiAgICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKFxuICAgICAgICAgIHJvb3RTcGFuLmF0dHJpYnV0ZXNbJ3Rlc3RLZXknICsgYXR0VHlwZV0sXG4gICAgICAgICAgJ3Rlc3RWYWx1ZScgKyBhdHRUeXBlXG4gICAgICAgICk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgLyoqXG4gICAqIFNob3VsZCBhZGQgYW4gYW5ub3RhdGlvblxuICAgKi9cbiAgZGVzY3JpYmUoJ2FkZEFubm90YXRpb24oKScsICgpID0+IHtcbiAgICBpdCgnc2hvdWxkIGFkZCBhbiBhbm5vdGF0aW9uJywgKCkgPT4ge1xuICAgICAgLy8gdHNsaW50OmRpc2FibGU6bm8tYW55XG4gICAgICBmdW5jdGlvbiBpbnN0YW5jZU9mQW5ub3RhdGlvbihvYmplY3Q6IGFueSk6IG9iamVjdCBpcyBBbm5vdGF0aW9uIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAnZGVzY3JpcHRpb24nIGluIG9iamVjdCAmJlxuICAgICAgICAgICd0aW1lc3RhbXAnIGluIG9iamVjdCAmJlxuICAgICAgICAgICdhdHRyaWJ1dGVzJyBpbiBvYmplY3RcbiAgICAgICAgKTtcbiAgICAgIH1cblxuICAgICAgY29uc3Qgcm9vdFNwYW4gPSBuZXcgUm9vdFNwYW4odHJhY2VyLCBuYW1lLCBraW5kLCB0cmFjZUlkLCBwYXJlbnRTcGFuSWQpO1xuICAgICAgcm9vdFNwYW4uc3RhcnQoKTtcblxuICAgICAgcm9vdFNwYW4uYWRkQW5ub3RhdGlvbignZGVzY3JpcHRpb24gdGVzdCcsIHt9LCBEYXRlLm5vdygpKTtcblxuICAgICAgYXNzZXJ0Lm9rKHJvb3RTcGFuLmFubm90YXRpb25zLmxlbmd0aCA+IDApO1xuICAgICAgYXNzZXJ0Lm9rKGluc3RhbmNlT2ZBbm5vdGF0aW9uKHJvb3RTcGFuLmFubm90YXRpb25zWzBdKSk7XG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIGFkZCBhbiBhbm5vdGF0aW9uIHdpdGhvdXQgYXR0cmlidXRlcyBhbmQgdGltZXN0YW1wJywgKCkgPT4ge1xuICAgICAgY29uc3Qgcm9vdFNwYW4gPSBuZXcgUm9vdFNwYW4odHJhY2VyLCBuYW1lLCBraW5kLCB0cmFjZUlkLCBwYXJlbnRTcGFuSWQpO1xuICAgICAgcm9vdFNwYW4uc3RhcnQoKTtcblxuICAgICAgcm9vdFNwYW4uYWRkQW5ub3RhdGlvbignZGVzY3JpcHRpb24gdGVzdCcpO1xuXG4gICAgICBhc3NlcnQub2socm9vdFNwYW4uYW5ub3RhdGlvbnMubGVuZ3RoID4gMCk7XG4gICAgICBhc3NlcnQuc3RyaWN0RXF1YWwocm9vdFNwYW4uZHJvcHBlZEFubm90YXRpb25zQ291bnQsIDApO1xuICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKFxuICAgICAgICByb290U3Bhbi5hbm5vdGF0aW9uc1swXS5kZXNjcmlwdGlvbixcbiAgICAgICAgJ2Rlc2NyaXB0aW9uIHRlc3QnXG4gICAgICApO1xuICAgICAgYXNzZXJ0LmRlZXBTdHJpY3RFcXVhbChyb290U3Bhbi5hbm5vdGF0aW9uc1swXS5hdHRyaWJ1dGVzLCB7fSk7XG4gICAgICBhc3NlcnQub2socm9vdFNwYW4uYW5ub3RhdGlvbnNbMF0udGltZXN0YW1wID4gMCk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIC8qKlxuICAgKiBTaG91bGQgYWRkIGEgTGluay5cbiAgICovXG4gIGRlc2NyaWJlKCdhZGRMaW5rKCknLCAoKSA9PiB7XG4gICAgaXQoJ3Nob3VsZCBhZGQgYSBMaW5rJywgKCkgPT4ge1xuICAgICAgLy8gdHNsaW50OmRpc2FibGU6bm8tYW55XG4gICAgICBmdW5jdGlvbiBpbnN0YW5jZU9mTGluayhvYmplY3Q6IGFueSk6IG9iamVjdCBpcyBMaW5rIHtcbiAgICAgICAgcmV0dXJuICd0cmFjZUlkJyBpbiBvYmplY3QgJiYgJ3NwYW5JZCcgaW4gb2JqZWN0ICYmICd0eXBlJyBpbiBvYmplY3Q7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHJvb3RTcGFuID0gbmV3IFJvb3RTcGFuKHRyYWNlciwgbmFtZSwga2luZCwgdHJhY2VJZCwgcGFyZW50U3BhbklkKTtcbiAgICAgIHJvb3RTcGFuLnN0YXJ0KCk7XG5cbiAgICAgIGNvbnN0IHNwYW4gPSBuZXcgU3Bhbih0cmFjZXIsIHJvb3RTcGFuKTtcbiAgICAgIHNwYW4uc3RhcnQoKTtcblxuICAgICAgcm9vdFNwYW4uYWRkTGluayhcbiAgICAgICAgcm9vdFNwYW4udHJhY2VJZCxcbiAgICAgICAgc3Bhbi5pZCxcbiAgICAgICAgdHlwZXMuTGlua1R5cGUuQ0hJTERfTElOS0VEX1NQQU5cbiAgICAgICk7XG5cbiAgICAgIGFzc2VydC5vayhyb290U3Bhbi5saW5rcy5sZW5ndGggPiAwKTtcbiAgICAgIGFzc2VydC5zdHJpY3RFcXVhbChyb290U3Bhbi5kcm9wcGVkTGlua3NDb3VudCwgMCk7XG4gICAgICBhc3NlcnQub2soaW5zdGFuY2VPZkxpbmsocm9vdFNwYW4ubGlua3NbMF0pKTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgLyoqXG4gICAqIFNob3VsZCBhZGQgYSBNZXNzYWdlIEV2ZW50LlxuICAgKi9cbiAgZGVzY3JpYmUoJ2FkZE1lc3NhZ2VFdmVudCgpJywgKCkgPT4ge1xuICAgIGl0KCdzaG91bGQgYWRkIGEgTWVzc2FnZSBFdmVudCcsICgpID0+IHtcbiAgICAgIC8vIHRzbGludDpkaXNhYmxlOm5vLWFueVxuICAgICAgZnVuY3Rpb24gaW5zdGFuY2VPZkxpbmsob2JqZWN0OiBhbnkpOiBvYmplY3QgaXMgTGluayB7XG4gICAgICAgIHJldHVybiAndHlwZScgaW4gb2JqZWN0ICYmICdpZCcgaW4gb2JqZWN0O1xuICAgICAgfVxuXG4gICAgICBjb25zdCByb290U3BhbiA9IG5ldyBSb290U3Bhbih0cmFjZXIsIG5hbWUsIGtpbmQsIHRyYWNlSWQsIHBhcmVudFNwYW5JZCk7XG4gICAgICByb290U3Bhbi5zdGFydCgpO1xuICAgICAgcm9vdFNwYW4uYWRkTWVzc2FnZUV2ZW50KHR5cGVzLk1lc3NhZ2VFdmVudFR5cGUuVU5TUEVDSUZJRUQsIDEpO1xuXG4gICAgICBhc3NlcnQub2socm9vdFNwYW4ubWVzc2FnZUV2ZW50cy5sZW5ndGggPiAwKTtcbiAgICAgIGFzc2VydC5zdHJpY3RFcXVhbChyb290U3Bhbi5kcm9wcGVkTWVzc2FnZUV2ZW50c0NvdW50LCAwKTtcbiAgICAgIGFzc2VydC5vayhpbnN0YW5jZU9mTGluayhyb290U3Bhbi5tZXNzYWdlRXZlbnRzWzBdKSk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGRlc2NyaWJlKCdnZXQgdHJhY2VTdGF0ZSgpJywgKCkgPT4ge1xuICAgIGl0KCdzaG91bGQgaGFuZGxlIG9wdGlvbmFsIC8gdW5kZWZpbmVkIHRyYWNlU3RhdGUnLCAoKSA9PiB7XG4gICAgICBjb25zdCByb290ID0gbmV3IFJvb3RTcGFuKHRyYWNlciwgbmFtZSwga2luZCwgdHJhY2VJZCwgcGFyZW50U3BhbklkKTtcbiAgICAgIGFzc2VydC5vayhyb290IGluc3RhbmNlb2YgUm9vdFNwYW4pO1xuICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKHJvb3QudHJhY2VTdGF0ZSwgdW5kZWZpbmVkKTtcbiAgICB9KTtcblxuICAgIGl0KCdzaG91bGQgY3JlYXRlIGEgUm9vdFNwYW4gaW5zdGFuY2Ugd2l0aCB0cmFjZVN0YXRlJywgKCkgPT4ge1xuICAgICAgY29uc3Qgcm9vdCA9IG5ldyBSb290U3BhbihcbiAgICAgICAgdHJhY2VyLFxuICAgICAgICBuYW1lLFxuICAgICAgICBraW5kLFxuICAgICAgICB0cmFjZUlkLFxuICAgICAgICBwYXJlbnRTcGFuSWQsXG4gICAgICAgICd0cmFjZVN0YXRlJ1xuICAgICAgKTtcbiAgICAgIGFzc2VydC5vayhyb290IGluc3RhbmNlb2YgUm9vdFNwYW4pO1xuICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKHJvb3QudHJhY2VTdGF0ZSwgJ3RyYWNlU3RhdGUnKTtcbiAgICB9KTtcbiAgfSk7XG59KTtcbiJdfQ==
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
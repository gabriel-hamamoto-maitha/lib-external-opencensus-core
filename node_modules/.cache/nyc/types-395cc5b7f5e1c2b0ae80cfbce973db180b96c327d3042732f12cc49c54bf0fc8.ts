"use strict";/**
 * Copyright 2018, OpenCensus Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function cov_2dd7rl6yhf(){var path="/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/src/metrics/gauges/types.ts";var hash="826554e51bdf90d417b49adb55b235857890ac94";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/src/metrics/gauges/types.ts",statementMap:{"0":{start:{line:17,column:0},end:{line:17,column:62}}},fnMap:{},branchMap:{},s:{"0":0},f:{},b:{},inputSourceMap:{version:3,file:"/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/src/metrics/gauges/types.ts",sources:["/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/src/metrics/gauges/types.ts"],names:[],mappings:";AAAA;;;;;;;;;;;;;;GAcG",sourcesContent:["/**\n * Copyright 2018, OpenCensus Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TimeSeries, Timestamp } from '../export/types';\n\nexport interface Point {\n  /**\n   * Adds the given value to the current value. The values can be negative.\n   *\n   * @param amt The value to add.\n   */\n  add(amt: number): void;\n\n  /**\n   * Sets the given value.\n   *\n   * @param val The new value.\n   */\n  set(val: number): void;\n\n  /**\n   * Returns the TimeSeries with one or more Point.\n   *\n   * @param timestamp The time at which the gauge is recorded.\n   * @returns The TimeSeries.\n   */\n  getTimeSeries(timestamp: Timestamp): TimeSeries;\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"826554e51bdf90d417b49adb55b235857890ac94"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2dd7rl6yhf=function(){return actualCoverage;};}return actualCoverage;}cov_2dd7rl6yhf();cov_2dd7rl6yhf().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3VzZXJtYWl0aGEvdHJhZGVtYXN0ZXIvbGlicy9saWItZXh0ZXJuYWwtb3BlbmNlbnN1cy1ub2RlL3NyYy9tZXRyaWNzL2dhdWdlcy90eXBlcy50cyIsInNvdXJjZXMiOlsiL1VzZXJzL3VzZXJtYWl0aGEvdHJhZGVtYXN0ZXIvbGlicy9saWItZXh0ZXJuYWwtb3BlbmNlbnN1cy1ub2RlL3NyYy9tZXRyaWNzL2dhdWdlcy90eXBlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7Ozs7Ozs7O0dBY0ciLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAyMDE4LCBPcGVuQ2Vuc3VzIEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IFRpbWVTZXJpZXMsIFRpbWVzdGFtcCB9IGZyb20gJy4uL2V4cG9ydC90eXBlcyc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUG9pbnQge1xuICAvKipcbiAgICogQWRkcyB0aGUgZ2l2ZW4gdmFsdWUgdG8gdGhlIGN1cnJlbnQgdmFsdWUuIFRoZSB2YWx1ZXMgY2FuIGJlIG5lZ2F0aXZlLlxuICAgKlxuICAgKiBAcGFyYW0gYW10IFRoZSB2YWx1ZSB0byBhZGQuXG4gICAqL1xuICBhZGQoYW10OiBudW1iZXIpOiB2b2lkO1xuXG4gIC8qKlxuICAgKiBTZXRzIHRoZSBnaXZlbiB2YWx1ZS5cbiAgICpcbiAgICogQHBhcmFtIHZhbCBUaGUgbmV3IHZhbHVlLlxuICAgKi9cbiAgc2V0KHZhbDogbnVtYmVyKTogdm9pZDtcblxuICAvKipcbiAgICogUmV0dXJucyB0aGUgVGltZVNlcmllcyB3aXRoIG9uZSBvciBtb3JlIFBvaW50LlxuICAgKlxuICAgKiBAcGFyYW0gdGltZXN0YW1wIFRoZSB0aW1lIGF0IHdoaWNoIHRoZSBnYXVnZSBpcyByZWNvcmRlZC5cbiAgICogQHJldHVybnMgVGhlIFRpbWVTZXJpZXMuXG4gICAqL1xuICBnZXRUaW1lU2VyaWVzKHRpbWVzdGFtcDogVGltZXN0YW1wKTogVGltZVNlcmllcztcbn1cbiJdfQ==
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMmRkN3JsNnloZiIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsImJyYW5jaE1hcCIsInMiLCJmIiwiYiIsImlucHV0U291cmNlTWFwIiwidmVyc2lvbiIsImZpbGUiLCJzb3VyY2VzIiwibmFtZXMiLCJtYXBwaW5ncyIsInNvdXJjZXNDb250ZW50IiwiX2NvdmVyYWdlU2NoZW1hIiwiY292ZXJhZ2UiLCJhY3R1YWxDb3ZlcmFnZSJdLCJzb3VyY2VzIjpbIi9Vc2Vycy91c2VybWFpdGhhL3RyYWRlbWFzdGVyL2xpYnMvbGliLWV4dGVybmFsLW9wZW5jZW5zdXMtbm9kZS9zcmMvbWV0cmljcy9nYXVnZXMvdHlwZXMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgMjAxOCwgT3BlbkNlbnN1cyBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBUaW1lU2VyaWVzLCBUaW1lc3RhbXAgfSBmcm9tICcuLi9leHBvcnQvdHlwZXMnO1xuXG5leHBvcnQgaW50ZXJmYWNlIFBvaW50IHtcbiAgLyoqXG4gICAqIEFkZHMgdGhlIGdpdmVuIHZhbHVlIHRvIHRoZSBjdXJyZW50IHZhbHVlLiBUaGUgdmFsdWVzIGNhbiBiZSBuZWdhdGl2ZS5cbiAgICpcbiAgICogQHBhcmFtIGFtdCBUaGUgdmFsdWUgdG8gYWRkLlxuICAgKi9cbiAgYWRkKGFtdDogbnVtYmVyKTogdm9pZDtcblxuICAvKipcbiAgICogU2V0cyB0aGUgZ2l2ZW4gdmFsdWUuXG4gICAqXG4gICAqIEBwYXJhbSB2YWwgVGhlIG5ldyB2YWx1ZS5cbiAgICovXG4gIHNldCh2YWw6IG51bWJlcik6IHZvaWQ7XG5cbiAgLyoqXG4gICAqIFJldHVybnMgdGhlIFRpbWVTZXJpZXMgd2l0aCBvbmUgb3IgbW9yZSBQb2ludC5cbiAgICpcbiAgICogQHBhcmFtIHRpbWVzdGFtcCBUaGUgdGltZSBhdCB3aGljaCB0aGUgZ2F1Z2UgaXMgcmVjb3JkZWQuXG4gICAqIEByZXR1cm5zIFRoZSBUaW1lU2VyaWVzLlxuICAgKi9cbiAgZ2V0VGltZVNlcmllcyh0aW1lc3RhbXA6IFRpbWVzdGFtcCk6IFRpbWVTZXJpZXM7XG59XG4iXSwibWFwcGluZ3MiOiJhQUFBOzs7Ozs7Ozs7Ozs7OztHQUFBLFNBQUFBLGVBQUEsTUFBQUMsSUFBQSxtR0FBQUMsSUFBQSxnREFBQUMsTUFBQSxLQUFBQyxRQUFBLHNCQUFBQyxHQUFBLG9CQUFBQyxZQUFBLEVBQUFMLElBQUEsK0ZBQUFNLFlBQUEsT0FBQUMsS0FBQSxFQUFBQyxJQUFBLElBQUFDLE1BQUEsSUFBQUMsR0FBQSxFQUFBRixJQUFBLElBQUFDLE1BQUEsT0FBQUUsS0FBQSxJQUFBQyxTQUFBLElBQUFDLENBQUEsU0FBQUMsQ0FBQSxJQUFBQyxDQUFBLElBQUFDLGNBQUEsRUFBQUMsT0FBQSxHQUFBQyxJQUFBLCtGQUFBQyxPQUFBLGlHQUFBQyxLQUFBLElBQUFDLFFBQUEsMkJBQUFDLGNBQUEsNHJDQUFBQyxlQUFBLDRDQUFBdEIsSUFBQSxpREFBQXVCLFFBQUEsQ0FBQXRCLE1BQUEsQ0FBQUUsR0FBQSxJQUFBRixNQUFBLENBQUFFLEdBQUEsVUFBQW9CLFFBQUEsQ0FBQXhCLElBQUEsR0FBQXdCLFFBQUEsQ0FBQXhCLElBQUEsRUFBQUMsSUFBQSxHQUFBQSxJQUFBLEVBQUF1QixRQUFBLENBQUF4QixJQUFBLEVBQUFLLFlBQUEsTUFBQW9CLGNBQUEsQ0FBQUQsUUFBQSxDQUFBeEIsSUFBQSxHQWNHO0FBQUFELGNBQUEsU0FBQUEsQ0FBQSxTQUFBMEIsY0FBQSxXQUFBQSxjQUFBLEVBQUExQixjQUFBLEdBQUFBLGNBQUEsR0FBQWMsQ0FBQSxNIn0=
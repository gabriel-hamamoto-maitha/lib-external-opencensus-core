"use strict";/**
 * Copyright 2019, OpenCensus Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function cov_1mhoed6qez(){var path="/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/src/tags/tagger.ts";var hash="9856401ebccace8cabaa1c8139ad5a9135873ec0";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/src/tags/tagger.ts",statementMap:{"0":{start:{line:17,column:0},end:{line:17,column:62}},"1":{start:{line:18,column:0},end:{line:18,column:134}},"2":{start:{line:19,column:18},end:{line:19,column:38}},"3":{start:{line:20,column:0},end:{line:20,column:47}},"4":{start:{line:21,column:28},end:{line:21,column:45}},"5":{start:{line:24,column:28},end:{line:24,column:67}},"6":{start:{line:25,column:4},end:{line:27,column:5}},"7":{start:{line:26,column:8},end:{line:26,column:45}},"8":{start:{line:28,column:4},end:{line:28,column:34}},"9":{start:{line:30,column:0},end:{line:30,column:52}},"10":{start:{line:36,column:4},end:{line:36,column:64}},"11":{start:{line:38,column:0},end:{line:38,column:52}},"12":{start:{line:47,column:23},end:{line:47,column:59}},"13":{start:{line:48,column:4},end:{line:58,column:7}},"14":{start:{line:49,column:27},end:{line:49,column:49}},"15":{start:{line:50,column:8},end:{line:52,column:9}},"16":{start:{line:51,column:12},end:{line:51,column:45}},"17":{start:{line:53,column:8},end:{line:55,column:9}},"18":{start:{line:54,column:12},end:{line:54,column:45}},"19":{start:{line:56,column:8},end:{line:56,column:57}},"20":{start:{line:57,column:8},end:{line:57,column:20}},"21":{start:{line:60,column:0},end:{line:60,column:40}},"22":{start:{line:63,column:4},end:{line:63,column:68}},"23":{start:{line:65,column:0},end:{line:65,column:22}},"24":{start:{line:67,column:21},end:{line:67,column:43}},"25":{start:{line:68,column:4},end:{line:70,column:5}},"26":{start:{line:69,column:8},end:{line:69,column:88}},"27":{start:{line:71,column:4},end:{line:71,column:20}}},fnMap:{"0":{name:"getCurrentTagContext",decl:{start:{line:23,column:9},end:{line:23,column:29}},loc:{start:{line:23,column:46},end:{line:29,column:1}},line:23},"1":{name:"setCurrentTagContext",decl:{start:{line:35,column:9},end:{line:35,column:29}},loc:{start:{line:35,column:52},end:{line:37,column:1}},line:35},"2":{name:"withTagContext",decl:{start:{line:46,column:9},end:{line:46,column:23}},loc:{start:{line:46,column:50},end:{line:59,column:1}},line:46},"3":{name:"(anonymous_3)",decl:{start:{line:48,column:39},end:{line:48,column:40}},loc:{start:{line:48,column:45},end:{line:58,column:5}},line:48},"4":{name:"clear",decl:{start:{line:62,column:9},end:{line:62,column:14}},loc:{start:{line:62,column:31},end:{line:64,column:1}},line:62},"5":{name:"makeDeepCopy",decl:{start:{line:66,column:9},end:{line:66,column:21}},loc:{start:{line:66,column:28},end:{line:72,column:1}},line:66}},branchMap:{"0":{loc:{start:{line:25,column:4},end:{line:27,column:5}},type:"if",locations:[{start:{line:25,column:4},end:{line:27,column:5}},{start:{line:25,column:4},end:{line:27,column:5}}],line:25}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},b:{"0":[0,0]},inputSourceMap:{version:3,file:"/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/src/tags/tagger.ts",sources:["/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/src/tags/tagger.ts"],names:[],mappings:";AAAA;;;;;;;;;;;;;;GAcG;;;AAGH,uCAAmC;AAEtB,QAAA,aAAa,GAAG,IAAI,gBAAM,EAAE,CAAC;AAC1C,MAAM,mBAAmB,GAAG,iBAAiB,CAAC;AAE9C,oCAAoC;AACpC,SAAgB,oBAAoB,CAAC,cAA6B;IAChE,MAAM,eAAe,GAAG,cAAc,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;IAChE,IAAI,eAAe,EAAE;QACnB,OAAO,YAAY,CAAC,eAAyB,CAAC,CAAC;KAChD;IACD,OAAO,IAAI,gBAAM,EAAE,CAAC;AACtB,CAAC;AAND,oDAMC;AAED;;;GAGG;AACH,SAAgB,oBAAoB,CAClC,cAA6B,EAC7B,IAAY;IAEZ,cAAc,CAAC,GAAG,CAAC,mBAAmB,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;AAC9D,CAAC;AALD,oDAKC;AAED;;;;;;GAMG;AACH,SAAgB,cAAc,CAC5B,cAA6B,EAC7B,IAAY,EACZ,EAAe;IAEf,MAAM,UAAU,GAAG,oBAAoB,CAAC,cAAc,CAAC,CAAC;IACxD,OAAO,cAAc,CAAC,YAAY,CAAC,GAAG,EAAE;QACtC,MAAM,UAAU,GAAG,IAAI,gBAAM,EAAE,CAAC;QAChC,KAAK,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC,IAAI,UAAU,CAAC,IAAI,EAAE;YAChD,UAAU,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;SAClC;QACD,KAAK,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE;YAC1C,UAAU,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;SAClC;QACD,oBAAoB,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC;QACjD,OAAO,EAAE,EAAE,CAAC;IACd,CAAC,CAAC,CAAC;AACL,CAAC;AAjBD,wCAiBC;AAED,qCAAqC;AACrC,SAAgB,KAAK,CAAC,cAA6B;IACjD,cAAc,CAAC,GAAG,CAAC,mBAAmB,EAAE,IAAI,gBAAM,EAAE,CAAC,CAAC;AACxD,CAAC;AAFD,sBAEC;AAED,SAAS,YAAY,CAAC,IAAY;IAChC,MAAM,QAAQ,GAAG,IAAI,gBAAM,EAAE,CAAC;IAC9B,KAAK,MAAM,CAAC,MAAM,EAAE,iBAAiB,CAAC,IAAI,IAAI,CAAC,gBAAgB,EAAE;QAC/D,QAAQ,CAAC,GAAG,CACV,MAAM,EACN,iBAAiB,CAAC,QAAQ,EAC1B,iBAAiB,CAAC,WAAW,CAC9B,CAAC;KACH;IACD,OAAO,QAAQ,CAAC;AAClB,CAAC",sourcesContent:["/**\n * Copyright 2019, OpenCensus Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as cls from '../internal/cls';\nimport { TagMap } from './tag-map';\n\nexport const EMPTY_TAG_MAP = new TagMap();\nconst CURRENT_TAG_MAP_KEY = 'current_tag_map';\n\n/** Gets the current tag context. */\nexport function getCurrentTagContext(contextManager: cls.Namespace): TagMap {\n  const tagsFromContext = contextManager.get(CURRENT_TAG_MAP_KEY);\n  if (tagsFromContext) {\n    return makeDeepCopy(tagsFromContext as TagMap);\n  }\n  return new TagMap();\n}\n\n/**\n * Sets the current tag context.\n * @param tags The TagMap.\n */\nexport function setCurrentTagContext(\n  contextManager: cls.Namespace,\n  tags: TagMap\n) {\n  contextManager.set(CURRENT_TAG_MAP_KEY, makeDeepCopy(tags));\n}\n\n/**\n * Enters the scope of code where the given `TagMap` is in the current context\n * (replacing the previous `TagMap`).\n * @param tags The TagMap to be set to the current context.\n * @param fn Callback function.\n * @returns The callback return.\n */\nexport function withTagContext<T>(\n  contextManager: cls.Namespace,\n  tags: TagMap,\n  fn: cls.Func<T>\n): T {\n  const oldContext = getCurrentTagContext(contextManager);\n  return contextManager.runAndReturn(() => {\n    const newContext = new TagMap();\n    for (const [tagKey, tagValue] of oldContext.tags) {\n      newContext.set(tagKey, tagValue);\n    }\n    for (const [tagKey, tagValue] of tags.tags) {\n      newContext.set(tagKey, tagValue);\n    }\n    setCurrentTagContext(contextManager, newContext);\n    return fn();\n  });\n}\n\n/** Clear the current tag context. */\nexport function clear(contextManager: cls.Namespace) {\n  contextManager.set(CURRENT_TAG_MAP_KEY, new TagMap());\n}\n\nfunction makeDeepCopy(tags: TagMap) {\n  const tagsCopy = new TagMap();\n  for (const [tagKey, valueWithMetadata] of tags.tagsWithMetadata) {\n    tagsCopy.set(\n      tagKey,\n      valueWithMetadata.tagValue,\n      valueWithMetadata.tagMetadata\n    );\n  }\n  return tagsCopy;\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"9856401ebccace8cabaa1c8139ad5a9135873ec0"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1mhoed6qez=function(){return actualCoverage;};}return actualCoverage;}cov_1mhoed6qez();cov_1mhoed6qez().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_1mhoed6qez().s[1]++;exports.clear=exports.withTagContext=exports.setCurrentTagContext=exports.getCurrentTagContext=exports.EMPTY_TAG_MAP=void 0;const tag_map_1=(cov_1mhoed6qez().s[2]++,require("./tag-map"));cov_1mhoed6qez().s[3]++;exports.EMPTY_TAG_MAP=new tag_map_1.TagMap();const CURRENT_TAG_MAP_KEY=(cov_1mhoed6qez().s[4]++,'current_tag_map');/** Gets the current tag context. */function getCurrentTagContext(contextManager){cov_1mhoed6qez().f[0]++;const tagsFromContext=(cov_1mhoed6qez().s[5]++,contextManager.get(CURRENT_TAG_MAP_KEY));cov_1mhoed6qez().s[6]++;if(tagsFromContext){cov_1mhoed6qez().b[0][0]++;cov_1mhoed6qez().s[7]++;return makeDeepCopy(tagsFromContext);}else{cov_1mhoed6qez().b[0][1]++;}cov_1mhoed6qez().s[8]++;return new tag_map_1.TagMap();}cov_1mhoed6qez().s[9]++;exports.getCurrentTagContext=getCurrentTagContext;/**
 * Sets the current tag context.
 * @param tags The TagMap.
 */function setCurrentTagContext(contextManager,tags){cov_1mhoed6qez().f[1]++;cov_1mhoed6qez().s[10]++;contextManager.set(CURRENT_TAG_MAP_KEY,makeDeepCopy(tags));}cov_1mhoed6qez().s[11]++;exports.setCurrentTagContext=setCurrentTagContext;/**
 * Enters the scope of code where the given `TagMap` is in the current context
 * (replacing the previous `TagMap`).
 * @param tags The TagMap to be set to the current context.
 * @param fn Callback function.
 * @returns The callback return.
 */function withTagContext(contextManager,tags,fn){cov_1mhoed6qez().f[2]++;const oldContext=(cov_1mhoed6qez().s[12]++,getCurrentTagContext(contextManager));cov_1mhoed6qez().s[13]++;return contextManager.runAndReturn(()=>{cov_1mhoed6qez().f[3]++;const newContext=(cov_1mhoed6qez().s[14]++,new tag_map_1.TagMap());cov_1mhoed6qez().s[15]++;for(const[tagKey,tagValue]of oldContext.tags){cov_1mhoed6qez().s[16]++;newContext.set(tagKey,tagValue);}cov_1mhoed6qez().s[17]++;for(const[tagKey,tagValue]of tags.tags){cov_1mhoed6qez().s[18]++;newContext.set(tagKey,tagValue);}cov_1mhoed6qez().s[19]++;setCurrentTagContext(contextManager,newContext);cov_1mhoed6qez().s[20]++;return fn();});}cov_1mhoed6qez().s[21]++;exports.withTagContext=withTagContext;/** Clear the current tag context. */function clear(contextManager){cov_1mhoed6qez().f[4]++;cov_1mhoed6qez().s[22]++;contextManager.set(CURRENT_TAG_MAP_KEY,new tag_map_1.TagMap());}cov_1mhoed6qez().s[23]++;exports.clear=clear;function makeDeepCopy(tags){cov_1mhoed6qez().f[5]++;const tagsCopy=(cov_1mhoed6qez().s[24]++,new tag_map_1.TagMap());cov_1mhoed6qez().s[25]++;for(const[tagKey,valueWithMetadata]of tags.tagsWithMetadata){cov_1mhoed6qez().s[26]++;tagsCopy.set(tagKey,valueWithMetadata.tagValue,valueWithMetadata.tagMetadata);}cov_1mhoed6qez().s[27]++;return tagsCopy;}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3VzZXJtYWl0aGEvdHJhZGVtYXN0ZXIvbGlicy9saWItZXh0ZXJuYWwtb3BlbmNlbnN1cy1ub2RlL3NyYy90YWdzL3RhZ2dlci50cyIsInNvdXJjZXMiOlsiL1VzZXJzL3VzZXJtYWl0aGEvdHJhZGVtYXN0ZXIvbGlicy9saWItZXh0ZXJuYWwtb3BlbmNlbnN1cy1ub2RlL3NyYy90YWdzL3RhZ2dlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7Ozs7Ozs7O0dBY0c7OztBQUdILHVDQUFtQztBQUV0QixRQUFBLGFBQWEsR0FBRyxJQUFJLGdCQUFNLEVBQUUsQ0FBQztBQUMxQyxNQUFNLG1CQUFtQixHQUFHLGlCQUFpQixDQUFDO0FBRTlDLG9DQUFvQztBQUNwQyxTQUFnQixvQkFBb0IsQ0FBQyxjQUE2QjtJQUNoRSxNQUFNLGVBQWUsR0FBRyxjQUFjLENBQUMsR0FBRyxDQUFDLG1CQUFtQixDQUFDLENBQUM7SUFDaEUsSUFBSSxlQUFlLEVBQUU7UUFDbkIsT0FBTyxZQUFZLENBQUMsZUFBeUIsQ0FBQyxDQUFDO0tBQ2hEO0lBQ0QsT0FBTyxJQUFJLGdCQUFNLEVBQUUsQ0FBQztBQUN0QixDQUFDO0FBTkQsb0RBTUM7QUFFRDs7O0dBR0c7QUFDSCxTQUFnQixvQkFBb0IsQ0FDbEMsY0FBNkIsRUFDN0IsSUFBWTtJQUVaLGNBQWMsQ0FBQyxHQUFHLENBQUMsbUJBQW1CLEVBQUUsWUFBWSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7QUFDOUQsQ0FBQztBQUxELG9EQUtDO0FBRUQ7Ozs7OztHQU1HO0FBQ0gsU0FBZ0IsY0FBYyxDQUM1QixjQUE2QixFQUM3QixJQUFZLEVBQ1osRUFBZTtJQUVmLE1BQU0sVUFBVSxHQUFHLG9CQUFvQixDQUFDLGNBQWMsQ0FBQyxDQUFDO0lBQ3hELE9BQU8sY0FBYyxDQUFDLFlBQVksQ0FBQyxHQUFHLEVBQUU7UUFDdEMsTUFBTSxVQUFVLEdBQUcsSUFBSSxnQkFBTSxFQUFFLENBQUM7UUFDaEMsS0FBSyxNQUFNLENBQUMsTUFBTSxFQUFFLFFBQVEsQ0FBQyxJQUFJLFVBQVUsQ0FBQyxJQUFJLEVBQUU7WUFDaEQsVUFBVSxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsUUFBUSxDQUFDLENBQUM7U0FDbEM7UUFDRCxLQUFLLE1BQU0sQ0FBQyxNQUFNLEVBQUUsUUFBUSxDQUFDLElBQUksSUFBSSxDQUFDLElBQUksRUFBRTtZQUMxQyxVQUFVLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FBQztTQUNsQztRQUNELG9CQUFvQixDQUFDLGNBQWMsRUFBRSxVQUFVLENBQUMsQ0FBQztRQUNqRCxPQUFPLEVBQUUsRUFBRSxDQUFDO0lBQ2QsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDO0FBakJELHdDQWlCQztBQUVELHFDQUFxQztBQUNyQyxTQUFnQixLQUFLLENBQUMsY0FBNkI7SUFDakQsY0FBYyxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsRUFBRSxJQUFJLGdCQUFNLEVBQUUsQ0FBQyxDQUFDO0FBQ3hELENBQUM7QUFGRCxzQkFFQztBQUVELFNBQVMsWUFBWSxDQUFDLElBQVk7SUFDaEMsTUFBTSxRQUFRLEdBQUcsSUFBSSxnQkFBTSxFQUFFLENBQUM7SUFDOUIsS0FBSyxNQUFNLENBQUMsTUFBTSxFQUFFLGlCQUFpQixDQUFDLElBQUksSUFBSSxDQUFDLGdCQUFnQixFQUFFO1FBQy9ELFFBQVEsQ0FBQyxHQUFHLENBQ1YsTUFBTSxFQUNOLGlCQUFpQixDQUFDLFFBQVEsRUFDMUIsaUJBQWlCLENBQUMsV0FBVyxDQUM5QixDQUFDO0tBQ0g7SUFDRCxPQUFPLFFBQVEsQ0FBQztBQUNsQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgMjAxOSwgT3BlbkNlbnN1cyBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgKiBhcyBjbHMgZnJvbSAnLi4vaW50ZXJuYWwvY2xzJztcbmltcG9ydCB7IFRhZ01hcCB9IGZyb20gJy4vdGFnLW1hcCc7XG5cbmV4cG9ydCBjb25zdCBFTVBUWV9UQUdfTUFQID0gbmV3IFRhZ01hcCgpO1xuY29uc3QgQ1VSUkVOVF9UQUdfTUFQX0tFWSA9ICdjdXJyZW50X3RhZ19tYXAnO1xuXG4vKiogR2V0cyB0aGUgY3VycmVudCB0YWcgY29udGV4dC4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRDdXJyZW50VGFnQ29udGV4dChjb250ZXh0TWFuYWdlcjogY2xzLk5hbWVzcGFjZSk6IFRhZ01hcCB7XG4gIGNvbnN0IHRhZ3NGcm9tQ29udGV4dCA9IGNvbnRleHRNYW5hZ2VyLmdldChDVVJSRU5UX1RBR19NQVBfS0VZKTtcbiAgaWYgKHRhZ3NGcm9tQ29udGV4dCkge1xuICAgIHJldHVybiBtYWtlRGVlcENvcHkodGFnc0Zyb21Db250ZXh0IGFzIFRhZ01hcCk7XG4gIH1cbiAgcmV0dXJuIG5ldyBUYWdNYXAoKTtcbn1cblxuLyoqXG4gKiBTZXRzIHRoZSBjdXJyZW50IHRhZyBjb250ZXh0LlxuICogQHBhcmFtIHRhZ3MgVGhlIFRhZ01hcC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNldEN1cnJlbnRUYWdDb250ZXh0KFxuICBjb250ZXh0TWFuYWdlcjogY2xzLk5hbWVzcGFjZSxcbiAgdGFnczogVGFnTWFwXG4pIHtcbiAgY29udGV4dE1hbmFnZXIuc2V0KENVUlJFTlRfVEFHX01BUF9LRVksIG1ha2VEZWVwQ29weSh0YWdzKSk7XG59XG5cbi8qKlxuICogRW50ZXJzIHRoZSBzY29wZSBvZiBjb2RlIHdoZXJlIHRoZSBnaXZlbiBgVGFnTWFwYCBpcyBpbiB0aGUgY3VycmVudCBjb250ZXh0XG4gKiAocmVwbGFjaW5nIHRoZSBwcmV2aW91cyBgVGFnTWFwYCkuXG4gKiBAcGFyYW0gdGFncyBUaGUgVGFnTWFwIHRvIGJlIHNldCB0byB0aGUgY3VycmVudCBjb250ZXh0LlxuICogQHBhcmFtIGZuIENhbGxiYWNrIGZ1bmN0aW9uLlxuICogQHJldHVybnMgVGhlIGNhbGxiYWNrIHJldHVybi5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHdpdGhUYWdDb250ZXh0PFQ+KFxuICBjb250ZXh0TWFuYWdlcjogY2xzLk5hbWVzcGFjZSxcbiAgdGFnczogVGFnTWFwLFxuICBmbjogY2xzLkZ1bmM8VD5cbik6IFQge1xuICBjb25zdCBvbGRDb250ZXh0ID0gZ2V0Q3VycmVudFRhZ0NvbnRleHQoY29udGV4dE1hbmFnZXIpO1xuICByZXR1cm4gY29udGV4dE1hbmFnZXIucnVuQW5kUmV0dXJuKCgpID0+IHtcbiAgICBjb25zdCBuZXdDb250ZXh0ID0gbmV3IFRhZ01hcCgpO1xuICAgIGZvciAoY29uc3QgW3RhZ0tleSwgdGFnVmFsdWVdIG9mIG9sZENvbnRleHQudGFncykge1xuICAgICAgbmV3Q29udGV4dC5zZXQodGFnS2V5LCB0YWdWYWx1ZSk7XG4gICAgfVxuICAgIGZvciAoY29uc3QgW3RhZ0tleSwgdGFnVmFsdWVdIG9mIHRhZ3MudGFncykge1xuICAgICAgbmV3Q29udGV4dC5zZXQodGFnS2V5LCB0YWdWYWx1ZSk7XG4gICAgfVxuICAgIHNldEN1cnJlbnRUYWdDb250ZXh0KGNvbnRleHRNYW5hZ2VyLCBuZXdDb250ZXh0KTtcbiAgICByZXR1cm4gZm4oKTtcbiAgfSk7XG59XG5cbi8qKiBDbGVhciB0aGUgY3VycmVudCB0YWcgY29udGV4dC4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjbGVhcihjb250ZXh0TWFuYWdlcjogY2xzLk5hbWVzcGFjZSkge1xuICBjb250ZXh0TWFuYWdlci5zZXQoQ1VSUkVOVF9UQUdfTUFQX0tFWSwgbmV3IFRhZ01hcCgpKTtcbn1cblxuZnVuY3Rpb24gbWFrZURlZXBDb3B5KHRhZ3M6IFRhZ01hcCkge1xuICBjb25zdCB0YWdzQ29weSA9IG5ldyBUYWdNYXAoKTtcbiAgZm9yIChjb25zdCBbdGFnS2V5LCB2YWx1ZVdpdGhNZXRhZGF0YV0gb2YgdGFncy50YWdzV2l0aE1ldGFkYXRhKSB7XG4gICAgdGFnc0NvcHkuc2V0KFxuICAgICAgdGFnS2V5LFxuICAgICAgdmFsdWVXaXRoTWV0YWRhdGEudGFnVmFsdWUsXG4gICAgICB2YWx1ZVdpdGhNZXRhZGF0YS50YWdNZXRhZGF0YVxuICAgICk7XG4gIH1cbiAgcmV0dXJuIHRhZ3NDb3B5O1xufVxuIl19
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
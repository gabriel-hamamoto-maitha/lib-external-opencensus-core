"use strict";/**
 * Copyright 2018, OpenCensus Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function cov_2mk6ql1crp(){var path="/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/test/test-span.ts";var hash="1de73240a7e816dedf203bd7bc59d8c19d621aa1";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/test/test-span.ts",statementMap:{"0":{start:{line:17,column:0},end:{line:17,column:62}},"1":{start:{line:18,column:15},end:{line:18,column:32}},"2":{start:{line:19,column:20},end:{line:19,column:59}},"3":{start:{line:20,column:15},end:{line:20,column:49}},"4":{start:{line:21,column:17},end:{line:21,column:53}},"5":{start:{line:22,column:14},end:{line:22,column:49}},"6":{start:{line:25,column:15},end:{line:25,column:40}},"7":{start:{line:26,column:0},end:{line:31,column:2}},"8":{start:{line:32,column:0},end:{line:360,column:3}},"9":{start:{line:33,column:17},end:{line:33,column:29}},"10":{start:{line:34,column:17},end:{line:34,column:38}},"11":{start:{line:35,column:20},end:{line:35,column:54}},"12":{start:{line:36,column:25},end:{line:36,column:27}},"13":{start:{line:40,column:4},end:{line:53,column:7}},"14":{start:{line:41,column:8},end:{line:45,column:11}},"15":{start:{line:42,column:29},end:{line:42,column:96}},"16":{start:{line:43,column:25},end:{line:43,column:58}},"17":{start:{line:44,column:12},end:{line:44,column:51}},"18":{start:{line:46,column:8},end:{line:52,column:11}},"19":{start:{line:47,column:29},end:{line:47,column:96}},"20":{start:{line:48,column:12},end:{line:48,column:29}},"21":{start:{line:49,column:25},end:{line:49,column:58}},"22":{start:{line:50,column:12},end:{line:50,column:25}},"23":{start:{line:51,column:12},end:{line:51,column:80}},"24":{start:{line:57,column:4},end:{line:64,column:7}},"25":{start:{line:58,column:8},end:{line:63,column:11}},"26":{start:{line:59,column:29},end:{line:59,column:96}},"27":{start:{line:60,column:12},end:{line:60,column:29}},"28":{start:{line:61,column:25},end:{line:61,column:58}},"29":{start:{line:62,column:12},end:{line:62,column:63}},"30":{start:{line:68,column:4},end:{line:78,column:7}},"31":{start:{line:69,column:8},end:{line:77,column:11}},"32":{start:{line:70,column:29},end:{line:70,column:96}},"33":{start:{line:71,column:12},end:{line:71,column:29}},"34":{start:{line:72,column:25},end:{line:72,column:58}},"35":{start:{line:73,column:28},end:{line:73,column:44}},"36":{start:{line:74,column:12},end:{line:74,column:66}},"37":{start:{line:75,column:12},end:{line:75,column:56}},"38":{start:{line:76,column:12},end:{line:76,column:51}},"39":{start:{line:83,column:4},end:{line:99,column:7}},"40":{start:{line:85,column:8},end:{line:89,column:11}},"41":{start:{line:86,column:29},end:{line:86,column:96}},"42":{start:{line:87,column:12},end:{line:87,column:29}},"43":{start:{line:88,column:12},end:{line:88,column:53}},"44":{start:{line:90,column:8},end:{line:92,column:11}},"45":{start:{line:91,column:12},end:{line:91,column:38}},"46":{start:{line:93,column:8},end:{line:95,column:11}},"47":{start:{line:94,column:12},end:{line:94,column:36}},"48":{start:{line:96,column:8},end:{line:98,column:11}},"49":{start:{line:97,column:12},end:{line:97,column:49}},"50":{start:{line:103,column:4},end:{line:129,column:7}},"51":{start:{line:104,column:8},end:{line:110,column:11}},"52":{start:{line:105,column:29},end:{line:105,column:96}},"53":{start:{line:106,column:12},end:{line:106,column:29}},"54":{start:{line:107,column:25},end:{line:107,column:58}},"55":{start:{line:108,column:12},end:{line:108,column:25}},"56":{start:{line:109,column:12},end:{line:109,column:36}},"57":{start:{line:111,column:8},end:{line:119,column:11}},"58":{start:{line:112,column:29},end:{line:112,column:86}},"59":{start:{line:113,column:12},end:{line:113,column:29}},"60":{start:{line:114,column:12},end:{line:114,column:65}},"61":{start:{line:115,column:25},end:{line:115,column:58}},"62":{start:{line:116,column:12},end:{line:116,column:25}},"63":{start:{line:117,column:12},end:{line:117,column:65}},"64":{start:{line:118,column:12},end:{line:118,column:36}},"65":{start:{line:120,column:8},end:{line:128,column:11}},"66":{start:{line:121,column:29},end:{line:121,column:102}},"67":{start:{line:122,column:12},end:{line:122,column:29}},"68":{start:{line:123,column:12},end:{line:123,column:65}},"69":{start:{line:124,column:25},end:{line:124,column:58}},"70":{start:{line:125,column:12},end:{line:125,column:25}},"71":{start:{line:126,column:12},end:{line:126,column:65}},"72":{start:{line:127,column:12},end:{line:127,column:36}},"73":{start:{line:133,column:4},end:{line:143,column:7}},"74":{start:{line:134,column:8},end:{line:142,column:11}},"75":{start:{line:135,column:29},end:{line:135,column:96}},"76":{start:{line:136,column:12},end:{line:136,column:29}},"77":{start:{line:137,column:25},end:{line:137,column:58}},"78":{start:{line:138,column:12},end:{line:138,column:25}},"79":{start:{line:139,column:37},end:{line:139,column:51}},"80":{start:{line:140,column:12},end:{line:140,column:25}},"81":{start:{line:141,column:12},end:{line:141,column:65}},"82":{start:{line:147,column:4},end:{line:156,column:7}},"83":{start:{line:148,column:8},end:{line:155,column:11}},"84":{start:{line:149,column:29},end:{line:149,column:96}},"85":{start:{line:150,column:12},end:{line:150,column:29}},"86":{start:{line:151,column:25},end:{line:151,column:58}},"87":{start:{line:152,column:12},end:{line:152,column:25}},"88":{start:{line:153,column:12},end:{line:153,column:23}},"89":{start:{line:154,column:12},end:{line:154,column:34}},"90":{start:{line:160,column:4},end:{line:168,column:7}},"91":{start:{line:161,column:8},end:{line:167,column:11}},"92":{start:{line:162,column:29},end:{line:162,column:96}},"93":{start:{line:163,column:12},end:{line:163,column:29}},"94":{start:{line:164,column:25},end:{line:164,column:58}},"95":{start:{line:165,column:12},end:{line:165,column:23}},"96":{start:{line:166,column:12},end:{line:166,column:35}},"97":{start:{line:172,column:4},end:{line:183,column:7}},"98":{start:{line:173,column:8},end:{line:182,column:11}},"99":{start:{line:174,column:29},end:{line:174,column:96}},"100":{start:{line:175,column:12},end:{line:175,column:29}},"101":{start:{line:176,column:25},end:{line:176,column:58}},"102":{start:{line:177,column:12},end:{line:177,column:25}},"103":{start:{line:178,column:12},end:{line:178,column:23}},"104":{start:{line:179,column:35},end:{line:179,column:47}},"105":{start:{line:180,column:12},end:{line:180,column:23}},"106":{start:{line:181,column:12},end:{line:181,column:81}},"107":{start:{line:187,column:4},end:{line:213,column:7}},"108":{start:{line:188,column:8},end:{line:201,column:11}},"109":{start:{line:189,column:29},end:{line:189,column:96}},"110":{start:{line:190,column:12},end:{line:190,column:29}},"111":{start:{line:191,column:25},end:{line:191,column:58}},"112":{start:{line:192,column:12},end:{line:192,column:25}},"113":{start:{line:193,column:12},end:{line:196,column:15}},"114":{start:{line:194,column:16},end:{line:194,column:78}},"115":{start:{line:195,column:16},end:{line:195,column:96}},"116":{start:{line:197,column:12},end:{line:197,column:56}},"117":{start:{line:198,column:12},end:{line:198,column:75}},"118":{start:{line:199,column:12},end:{line:199,column:50}},"119":{start:{line:200,column:12},end:{line:200,column:68}},"120":{start:{line:202,column:8},end:{line:212,column:11}},"121":{start:{line:203,column:29},end:{line:203,column:96}},"122":{start:{line:204,column:12},end:{line:204,column:29}},"123":{start:{line:205,column:25},end:{line:205,column:58}},"124":{start:{line:206,column:12},end:{line:206,column:25}},"125":{start:{line:207,column:12},end:{line:209,column:13}},"126":{start:{line:207,column:25},end:{line:207,column:26}},"127":{start:{line:208,column:16},end:{line:208,column:51}},"128":{start:{line:210,column:12},end:{line:210,column:72}},"129":{start:{line:211,column:12},end:{line:211,column:63}},"130":{start:{line:217,column:4},end:{line:245,column:7}},"131":{start:{line:218,column:8},end:{line:233,column:11}},"132":{start:{line:221,column:16},end:{line:223,column:44}},"133":{start:{line:225,column:29},end:{line:225,column:96}},"134":{start:{line:226,column:12},end:{line:226,column:29}},"135":{start:{line:227,column:25},end:{line:227,column:58}},"136":{start:{line:228,column:12},end:{line:228,column:25}},"137":{start:{line:229,column:12},end:{line:229,column:67}},"138":{start:{line:230,column:12},end:{line:230,column:51}},"139":{start:{line:231,column:12},end:{line:231,column:64}},"140":{start:{line:232,column:12},end:{line:232,column:65}},"141":{start:{line:234,column:8},end:{line:244,column:11}},"142":{start:{line:235,column:29},end:{line:235,column:96}},"143":{start:{line:236,column:12},end:{line:236,column:29}},"144":{start:{line:237,column:25},end:{line:237,column:58}},"145":{start:{line:238,column:12},end:{line:238,column:25}},"146":{start:{line:239,column:12},end:{line:241,column:13}},"147":{start:{line:239,column:25},end:{line:239,column:26}},"148":{start:{line:240,column:16},end:{line:240,column:71}},"149":{start:{line:242,column:12},end:{line:242,column:60}},"150":{start:{line:243,column:12},end:{line:243,column:64}},"151":{start:{line:249,column:4},end:{line:275,column:7}},"152":{start:{line:250,column:8},end:{line:263,column:11}},"153":{start:{line:253,column:16},end:{line:253,column:85}},"154":{start:{line:255,column:29},end:{line:255,column:96}},"155":{start:{line:256,column:12},end:{line:256,column:29}},"156":{start:{line:257,column:25},end:{line:257,column:58}},"157":{start:{line:258,column:12},end:{line:258,column:25}},"158":{start:{line:259,column:12},end:{line:259,column:87}},"159":{start:{line:260,column:12},end:{line:260,column:45}},"160":{start:{line:261,column:12},end:{line:261,column:58}},"161":{start:{line:262,column:12},end:{line:262,column:53}},"162":{start:{line:264,column:8},end:{line:274,column:11}},"163":{start:{line:265,column:29},end:{line:265,column:96}},"164":{start:{line:266,column:12},end:{line:266,column:29}},"165":{start:{line:267,column:25},end:{line:267,column:58}},"166":{start:{line:268,column:12},end:{line:268,column:25}},"167":{start:{line:269,column:12},end:{line:271,column:13}},"168":{start:{line:269,column:25},end:{line:269,column:26}},"169":{start:{line:270,column:16},end:{line:270,column:91}},"170":{start:{line:272,column:12},end:{line:272,column:54}},"171":{start:{line:273,column:12},end:{line:273,column:58}},"172":{start:{line:279,column:4},end:{line:318,column:7}},"173":{start:{line:280,column:8},end:{line:306,column:11}},"174":{start:{line:283,column:16},end:{line:283,column:58}},"175":{start:{line:285,column:29},end:{line:285,column:96}},"176":{start:{line:286,column:12},end:{line:286,column:29}},"177":{start:{line:287,column:25},end:{line:287,column:58}},"178":{start:{line:288,column:12},end:{line:288,column:25}},"179":{start:{line:289,column:12},end:{line:293,column:38}},"180":{start:{line:294,column:12},end:{line:294,column:53}},"181":{start:{line:295,column:12},end:{line:303,column:15}},"182":{start:{line:304,column:12},end:{line:304,column:66}},"183":{start:{line:305,column:12},end:{line:305,column:61}},"184":{start:{line:307,column:8},end:{line:317,column:11}},"185":{start:{line:308,column:29},end:{line:308,column:96}},"186":{start:{line:309,column:12},end:{line:309,column:29}},"187":{start:{line:310,column:25},end:{line:310,column:58}},"188":{start:{line:311,column:12},end:{line:311,column:25}},"189":{start:{line:312,column:12},end:{line:314,column:13}},"190":{start:{line:312,column:25},end:{line:312,column:26}},"191":{start:{line:313,column:16},end:{line:313,column:76}},"192":{start:{line:315,column:12},end:{line:315,column:62}},"193":{start:{line:316,column:12},end:{line:316,column:66}},"194":{start:{line:319,column:4},end:{line:341,column:7}},"195":{start:{line:320,column:8},end:{line:329,column:11}},"196":{start:{line:321,column:29},end:{line:321,column:96}},"197":{start:{line:322,column:12},end:{line:322,column:29}},"198":{start:{line:323,column:25},end:{line:323,column:58}},"199":{start:{line:324,column:12},end:{line:324,column:25}},"200":{start:{line:325,column:12},end:{line:325,column:56}},"201":{start:{line:326,column:12},end:{line:326,column:67}},"202":{start:{line:327,column:12},end:{line:327,column:52}},"203":{start:{line:328,column:12},end:{line:328,column:63}},"204":{start:{line:330,column:8},end:{line:340,column:11}},"205":{start:{line:331,column:29},end:{line:331,column:96}},"206":{start:{line:332,column:12},end:{line:332,column:29}},"207":{start:{line:333,column:25},end:{line:333,column:58}},"208":{start:{line:334,column:12},end:{line:334,column:25}},"209":{start:{line:335,column:12},end:{line:335,column:86}},"210":{start:{line:336,column:12},end:{line:336,column:56}},"211":{start:{line:337,column:12},end:{line:337,column:67}},"212":{start:{line:338,column:12},end:{line:338,column:52}},"213":{start:{line:339,column:12},end:{line:339,column:72}},"214":{start:{line:342,column:4},end:{line:359,column:7}},"215":{start:{line:343,column:8},end:{line:350,column:11}},"216":{start:{line:344,column:29},end:{line:344,column:110}},"217":{start:{line:345,column:12},end:{line:345,column:29}},"218":{start:{line:346,column:12},end:{line:346,column:66}},"219":{start:{line:347,column:25},end:{line:347,column:58}},"220":{start:{line:348,column:12},end:{line:348,column:63}},"221":{start:{line:349,column:12},end:{line:349,column:62}},"222":{start:{line:351,column:8},end:{line:358,column:11}},"223":{start:{line:352,column:29},end:{line:352,column:96}},"224":{start:{line:353,column:12},end:{line:353,column:29}},"225":{start:{line:354,column:12},end:{line:354,column:63}},"226":{start:{line:355,column:25},end:{line:355,column:58}},"227":{start:{line:356,column:12},end:{line:356,column:63}},"228":{start:{line:357,column:12},end:{line:357,column:59}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:32,column:17},end:{line:32,column:18}},loc:{start:{line:32,column:23},end:{line:360,column:1}},line:32},"1":{name:"(anonymous_1)",decl:{start:{line:40,column:27},end:{line:40,column:28}},loc:{start:{line:40,column:33},end:{line:53,column:5}},line:40},"2":{name:"(anonymous_2)",decl:{start:{line:41,column:44},end:{line:41,column:45}},loc:{start:{line:41,column:50},end:{line:45,column:9}},line:41},"3":{name:"(anonymous_3)",decl:{start:{line:46,column:56},end:{line:46,column:57}},loc:{start:{line:46,column:62},end:{line:52,column:9}},line:46},"4":{name:"(anonymous_4)",decl:{start:{line:57,column:30},end:{line:57,column:31}},loc:{start:{line:57,column:36},end:{line:64,column:5}},line:57},"5":{name:"(anonymous_5)",decl:{start:{line:58,column:41},end:{line:58,column:42}},loc:{start:{line:58,column:47},end:{line:63,column:9}},line:58},"6":{name:"(anonymous_6)",decl:{start:{line:68,column:32},end:{line:68,column:33}},loc:{start:{line:68,column:38},end:{line:78,column:5}},line:68},"7":{name:"(anonymous_7)",decl:{start:{line:69,column:46},end:{line:69,column:47}},loc:{start:{line:69,column:52},end:{line:77,column:9}},line:69},"8":{name:"(anonymous_8)",decl:{start:{line:83,column:51},end:{line:83,column:52}},loc:{start:{line:83,column:57},end:{line:99,column:5}},line:83},"9":{name:"(anonymous_9)",decl:{start:{line:85,column:15},end:{line:85,column:16}},loc:{start:{line:85,column:21},end:{line:89,column:9}},line:85},"10":{name:"(anonymous_10)",decl:{start:{line:90,column:37},end:{line:90,column:38}},loc:{start:{line:90,column:43},end:{line:92,column:9}},line:90},"11":{name:"(anonymous_11)",decl:{start:{line:93,column:35},end:{line:93,column:36}},loc:{start:{line:93,column:41},end:{line:95,column:9}},line:93},"12":{name:"(anonymous_12)",decl:{start:{line:96,column:45},end:{line:96,column:46}},loc:{start:{line:96,column:51},end:{line:98,column:9}},line:96},"13":{name:"(anonymous_13)",decl:{start:{line:103,column:24},end:{line:103,column:25}},loc:{start:{line:103,column:30},end:{line:129,column:5}},line:103},"14":{name:"(anonymous_14)",decl:{start:{line:104,column:43},end:{line:104,column:44}},loc:{start:{line:104,column:49},end:{line:110,column:9}},line:104},"15":{name:"(anonymous_15)",decl:{start:{line:111,column:89},end:{line:111,column:90}},loc:{start:{line:111,column:95},end:{line:119,column:9}},line:111},"16":{name:"(anonymous_16)",decl:{start:{line:120,column:93},end:{line:120,column:94}},loc:{start:{line:120,column:99},end:{line:128,column:9}},line:120},"17":{name:"(anonymous_17)",decl:{start:{line:133,column:48},end:{line:133,column:49}},loc:{start:{line:133,column:54},end:{line:143,column:5}},line:133},"18":{name:"(anonymous_18)",decl:{start:{line:134,column:54},end:{line:134,column:55}},loc:{start:{line:134,column:60},end:{line:142,column:9}},line:134},"19":{name:"(anonymous_19)",decl:{start:{line:147,column:22},end:{line:147,column:23}},loc:{start:{line:147,column:28},end:{line:156,column:5}},line:147},"20":{name:"(anonymous_20)",decl:{start:{line:148,column:41},end:{line:148,column:42}},loc:{start:{line:148,column:47},end:{line:155,column:9}},line:148},"21":{name:"(anonymous_21)",decl:{start:{line:160,column:37},end:{line:160,column:38}},loc:{start:{line:160,column:43},end:{line:168,column:5}},line:160},"22":{name:"(anonymous_22)",decl:{start:{line:161,column:45},end:{line:161,column:46}},loc:{start:{line:161,column:51},end:{line:167,column:9}},line:161},"23":{name:"(anonymous_23)",decl:{start:{line:172,column:44},end:{line:172,column:45}},loc:{start:{line:172,column:50},end:{line:183,column:5}},line:172},"24":{name:"(anonymous_24)",decl:{start:{line:173,column:44},end:{line:173,column:45}},loc:{start:{line:173,column:50},end:{line:182,column:9}},line:173},"25":{name:"(anonymous_25)",decl:{start:{line:187,column:30},end:{line:187,column:31}},loc:{start:{line:187,column:36},end:{line:213,column:5}},line:187},"26":{name:"(anonymous_26)",decl:{start:{line:188,column:38},end:{line:188,column:39}},loc:{start:{line:188,column:44},end:{line:201,column:9}},line:188},"27":{name:"(anonymous_27)",decl:{start:{line:193,column:48},end:{line:193,column:49}},loc:{start:{line:193,column:59},end:{line:196,column:13}},line:193},"28":{name:"(anonymous_28)",decl:{start:{line:202,column:43},end:{line:202,column:44}},loc:{start:{line:202,column:49},end:{line:212,column:9}},line:202},"29":{name:"(anonymous_29)",decl:{start:{line:217,column:32},end:{line:217,column:33}},loc:{start:{line:217,column:38},end:{line:245,column:5}},line:217},"30":{name:"(anonymous_30)",decl:{start:{line:218,column:39},end:{line:218,column:40}},loc:{start:{line:218,column:45},end:{line:233,column:9}},line:218},"31":{name:"instanceOfAnnotation",decl:{start:{line:220,column:21},end:{line:220,column:41}},loc:{start:{line:220,column:50},end:{line:224,column:13}},line:220},"32":{name:"(anonymous_32)",decl:{start:{line:234,column:44},end:{line:234,column:45}},loc:{start:{line:234,column:50},end:{line:244,column:9}},line:234},"33":{name:"(anonymous_33)",decl:{start:{line:249,column:26},end:{line:249,column:27}},loc:{start:{line:249,column:32},end:{line:275,column:5}},line:249},"34":{name:"(anonymous_34)",decl:{start:{line:250,column:32},end:{line:250,column:33}},loc:{start:{line:250,column:38},end:{line:263,column:9}},line:250},"35":{name:"instanceOfLink",decl:{start:{line:252,column:21},end:{line:252,column:35}},loc:{start:{line:252,column:44},end:{line:254,column:13}},line:252},"36":{name:"(anonymous_36)",decl:{start:{line:264,column:38},end:{line:264,column:39}},loc:{start:{line:264,column:44},end:{line:274,column:9}},line:264},"37":{name:"(anonymous_37)",decl:{start:{line:279,column:34},end:{line:279,column:35}},loc:{start:{line:279,column:40},end:{line:318,column:5}},line:279},"38":{name:"(anonymous_38)",decl:{start:{line:280,column:41},end:{line:280,column:42}},loc:{start:{line:280,column:47},end:{line:306,column:9}},line:280},"39":{name:"instanceOfLink",decl:{start:{line:282,column:21},end:{line:282,column:35}},loc:{start:{line:282,column:44},end:{line:284,column:13}},line:282},"40":{name:"(anonymous_40)",decl:{start:{line:307,column:47},end:{line:307,column:48}},loc:{start:{line:307,column:53},end:{line:317,column:9}},line:307},"41":{name:"(anonymous_41)",decl:{start:{line:319,column:28},end:{line:319,column:29}},loc:{start:{line:319,column:34},end:{line:341,column:5}},line:319},"42":{name:"(anonymous_42)",decl:{start:{line:320,column:43},end:{line:320,column:44}},loc:{start:{line:320,column:49},end:{line:329,column:9}},line:320},"43":{name:"(anonymous_43)",decl:{start:{line:330,column:41},end:{line:330,column:42}},loc:{start:{line:330,column:47},end:{line:340,column:9}},line:330},"44":{name:"(anonymous_44)",decl:{start:{line:342,column:33},end:{line:342,column:34}},loc:{start:{line:342,column:39},end:{line:359,column:5}},line:342},"45":{name:"(anonymous_45)",decl:{start:{line:343,column:43},end:{line:343,column:44}},loc:{start:{line:343,column:49},end:{line:350,column:9}},line:343},"46":{name:"(anonymous_46)",decl:{start:{line:351,column:60},end:{line:351,column:61}},loc:{start:{line:351,column:66},end:{line:358,column:9}},line:351}},branchMap:{"0":{loc:{start:{line:221,column:24},end:{line:223,column:42}},type:"binary-expr",locations:[{start:{line:221,column:24},end:{line:221,column:47}},{start:{line:222,column:20},end:{line:222,column:41}},{start:{line:223,column:20},end:{line:223,column:42}}],line:221},"1":{loc:{start:{line:253,column:23},end:{line:253,column:84}},type:"binary-expr",locations:[{start:{line:253,column:23},end:{line:253,column:42}},{start:{line:253,column:46},end:{line:253,column:64}},{start:{line:253,column:68},end:{line:253,column:84}}],line:253},"2":{loc:{start:{line:283,column:23},end:{line:283,column:57}},type:"binary-expr",locations:[{start:{line:283,column:23},end:{line:283,column:39}},{start:{line:283,column:43},end:{line:283,column:57}}],line:283}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0},b:{"0":[0,0,0],"1":[0,0,0],"2":[0,0]},inputSourceMap:{version:3,file:"/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/test/test-span.ts",sources:["/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/test/test-span.ts"],names:[],mappings:"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",sourcesContent:["/**\n * Copyright 2018, OpenCensus Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assert from 'assert';\nimport { RootSpan } from '../src/trace/model/root-span';\nimport { Span } from '../src/trace/model/span';\nimport { CoreTracer } from '../src/trace/model/tracer';\nimport * as types from '../src/trace/model/types';\nimport { Annotation, Link } from '../src/trace/model/types';\n\n// TODO: we should evaluate a way to merge similar test cases between span and\n// rootspan\n\nconst tracer = new CoreTracer();\ntracer.activeTraceParams = {\n  numberOfAttributesPerSpan: 32,\n  numberOfLinksPerSpan: 32,\n  numberOfAnnontationEventsPerSpan: 32,\n  numberOfMessageEventsPerSpan: 32,\n};\n\ndescribe('Span', () => {\n  const name = 'MySpanName';\n  const kind = types.SpanKind.SERVER;\n  const traceId = 'd4cda95b652f4a1592b449d5929fda1b';\n  const parentSpanId = '';\n\n  /**\n   * Should create a span\n   */\n  describe('new Span()', () => {\n    it('should create a Span instance', () => {\n      const rootSpan = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      const span = new Span(tracer, rootSpan);\n      assert.ok(span instanceof Span);\n    });\n\n    it('should use relative clock for child spans', () => {\n      const rootSpan = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      rootSpan.start();\n      const span = new Span(tracer, rootSpan);\n      span.start();\n      assert.ok(rootSpan.startTime.getTime() <= span.startTime.getTime());\n    });\n  });\n\n  /**\n   * Should return the Trace ID\n   */\n  describe('get traceId()', () => {\n    it('should return the trace id', () => {\n      const rootSpan = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      rootSpan.start();\n      const span = new Span(tracer, rootSpan);\n      assert.strictEqual(span.traceId, rootSpan.traceId);\n    });\n  });\n\n  /**\n   * Should the span context of span\n   */\n  describe('get spanContext', () => {\n    it('should the span context of span', () => {\n      const rootSpan = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      rootSpan.start();\n\n      const span = new Span(tracer, rootSpan);\n      const context = span.spanContext;\n\n      assert.strictEqual(context.traceId, rootSpan.traceId);\n      assert.strictEqual(context.spanId, span.id);\n      assert.strictEqual(context.options, 1);\n    });\n  });\n\n  /**\n   * startTime, endTime and durantion proprieties called before start() - no\n   * clock instance created\n   */\n  describe('get time properties before start()', () => {\n    let span: types.Span;\n    before(() => {\n      const rootSpan = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      rootSpan.start();\n      span = new Span(tracer, rootSpan);\n    });\n    it('should get startTime()', () => {\n      assert.ok(span.startTime);\n    });\n    it('should get endTime()', () => {\n      assert.ok(span.endTime);\n    });\n    it('should get duration() return 0', () => {\n      assert.strictEqual(span.duration, 0);\n    });\n  });\n\n  /**\n   * Should start a span instance\n   */\n  describe('start()', () => {\n    it('should start a span instance', () => {\n      const rootSpan = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      rootSpan.start();\n\n      const span = new Span(tracer, rootSpan);\n      span.start();\n\n      assert.ok(span.started);\n    });\n\n    it('should start a RootSpan and set CurrentRootSpan when parentSpanId is empty', () => {\n      const rootSpan = new RootSpan(tracer, name, kind, traceId, '');\n      rootSpan.start();\n      assert.strictEqual(tracer.currentRootSpan, rootSpan);\n\n      const span = new Span(tracer, rootSpan);\n      span.start();\n      assert.strictEqual(tracer.currentRootSpan, rootSpan);\n\n      assert.ok(span.started);\n    });\n\n    it('should start a RootSpan and set CurrentRootSpan when parentSpanId is not empty', () => {\n      const rootSpan = new RootSpan(\n        tracer,\n        name,\n        kind,\n        traceId,\n        'd5955a12632d46a1'\n      );\n      rootSpan.start();\n      assert.strictEqual(tracer.currentRootSpan, rootSpan);\n\n      const span = new Span(tracer, rootSpan);\n      span.start();\n      assert.strictEqual(tracer.currentRootSpan, rootSpan);\n\n      assert.ok(span.started);\n    });\n  });\n\n  /**\n   * Should not change the initial startTime\n   */\n  describe('start() an already started span', () => {\n    it('should not change the initial startTime', () => {\n      const rootSpan = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      rootSpan.start();\n      const span = new Span(tracer, rootSpan);\n      span.start();\n      const initialStartTime = span.startTime;\n      span.start();\n\n      assert.strictEqual(span.startTime, initialStartTime);\n    });\n  });\n\n  /**\n   * Should end a span instance\n   */\n  describe('end()', () => {\n    it('should end a span instance', () => {\n      const rootSpan = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      rootSpan.start();\n\n      const span = new Span(tracer, rootSpan);\n      span.start();\n      span.end();\n\n      assert.ok(span.ended);\n    });\n  });\n\n  /**\n   * Should not end a span instance\n   */\n  describe('end() before start()', () => {\n    it('should not end a span instance', () => {\n      const rootSpan = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      rootSpan.start();\n\n      const span = new Span(tracer, rootSpan);\n      span.end();\n\n      assert.ok(!span.ended);\n    });\n  });\n\n  /**\n   * Should not change the endTime\n   */\n  describe('end() an already ended span', () => {\n    it('should not change the endTime', () => {\n      const rootSpan = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      rootSpan.start();\n      const span = new Span(tracer, rootSpan);\n      span.start();\n      span.end();\n      const initialEndTime = span.endTime;\n      span.end();\n\n      assert.strictEqual(span.endTime!.getTime(), initialEndTime!.getTime());\n    });\n  });\n\n  /**\n   * Should add an attrinbutes\n   */\n  describe('addAtribute()', () => {\n    it('should add an attribute', () => {\n      const rootSpan = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      rootSpan.start();\n\n      const span = new Span(tracer, rootSpan);\n      span.start();\n\n      ['String', 'Number', 'Boolean'].map(attType => {\n        span.addAttribute('testKey' + attType, 'testValue' + attType);\n        assert.strictEqual(\n          span.attributes['testKey' + attType],\n          'testValue' + attType\n        );\n      });\n      span.addAttribute('object', { foo: 'bar' });\n      assert.strictEqual(span.attributes['object'], '{\"foo\":\"bar\"}');\n      span.addAttribute('array', [1, 2, 3]);\n      assert.strictEqual(span.attributes['array'], '[1,2,3]');\n    });\n\n    it('should drop extra attributes', () => {\n      const rootSpan = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      rootSpan.start();\n\n      const span = new Span(tracer, rootSpan);\n      span.start();\n      for (let i = 0; i < 40; i++) {\n        span.addAttribute('attr' + i, 100);\n      }\n\n      assert.strictEqual(Object.keys(span.attributes).length, 32);\n      assert.strictEqual(span.droppedAttributesCount, 8);\n    });\n  });\n\n  /**\n   * Should add an annotation\n   */\n  describe('addAnnotation()', () => {\n    it('should add an annotation', () => {\n      // tslint:disable:no-any\n      function instanceOfAnnotation(object: any): object is Annotation {\n        return (\n          'description' in object &&\n          'timestamp' in object &&\n          'attributes' in object\n        );\n      }\n\n      const rootSpan = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      rootSpan.start();\n\n      const span = new Span(tracer, rootSpan);\n      span.start();\n\n      span.addAnnotation('description test', {}, Date.now());\n\n      assert.ok(span.annotations.length > 0);\n      assert.strictEqual(span.droppedAnnotationsCount, 0);\n      assert.ok(instanceOfAnnotation(span.annotations[0]));\n    });\n\n    it('should drop extra annotations', () => {\n      const rootSpan = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      rootSpan.start();\n\n      const span = new Span(tracer, rootSpan);\n      span.start();\n      for (let i = 0; i < 40; i++) {\n        span.addAnnotation('description test', {}, Date.now());\n      }\n\n      assert.strictEqual(span.annotations.length, 32);\n      assert.strictEqual(span.droppedAnnotationsCount, 8);\n    });\n  });\n\n  /**\n   * Should add a Link.\n   */\n  describe('addLink()', () => {\n    it('should add a Link', () => {\n      // tslint:disable:no-any\n      function instanceOfLink(object: any): object is Link {\n        return 'traceId' in object && 'spanId' in object && 'type' in object;\n      }\n\n      const rootSpan = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      rootSpan.start();\n\n      const span = new Span(tracer, rootSpan);\n      span.start();\n\n      span.addLink(\n        span.traceId,\n        rootSpan.id,\n        types.LinkType.PARENT_LINKED_SPAN\n      );\n\n      assert.ok(span.links.length > 0);\n      assert.strictEqual(span.droppedLinksCount, 0);\n      assert.ok(instanceOfLink(span.links[0]));\n    });\n\n    it('should drop extra links', () => {\n      const rootSpan = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      rootSpan.start();\n      const span = new Span(tracer, rootSpan);\n      span.start();\n\n      for (let i = 0; i < 35; i++) {\n        span.addLink(\n          span.traceId,\n          rootSpan.id,\n          types.LinkType.PARENT_LINKED_SPAN\n        );\n      }\n\n      assert.strictEqual(span.links.length, 32);\n      assert.strictEqual(span.droppedLinksCount, 3);\n    });\n  });\n\n  /**\n   * Should add a Message Event.\n   */\n  describe('addMessageEvent()', () => {\n    it('should add a Message Event', () => {\n      // tslint:disable:no-any\n      function instanceOfLink(object: any): object is Link {\n        return 'type' in object && 'id' in object;\n      }\n\n      const rootSpan = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      rootSpan.start();\n\n      const span = new Span(tracer, rootSpan);\n      span.start();\n\n      span.addMessageEvent(\n        types.MessageEventType.UNSPECIFIED,\n        /* id */ 1,\n        /* timestamp */ 1550000000000,\n        /* uncompressedSize */ 55,\n        /** compressedSize */ 40\n      );\n\n      assert.ok(span.messageEvents.length > 0);\n      assert.deepStrictEqual(span.messageEvents, [\n        {\n          type: types.MessageEventType.UNSPECIFIED,\n          id: 1,\n          timestamp: 1550000000000,\n          uncompressedSize: 55,\n          compressedSize: 40,\n        },\n      ]);\n      assert.strictEqual(span.droppedMessageEventsCount, 0);\n      assert.ok(instanceOfLink(span.messageEvents[0]));\n    });\n\n    it('should drop extra  Message Event', () => {\n      const rootSpan = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      rootSpan.start();\n\n      const span = new Span(tracer, rootSpan);\n      span.start();\n      for (let i = 0; i < 35; i++) {\n        span.addMessageEvent(types.MessageEventType.UNSPECIFIED, 1);\n      }\n\n      assert.strictEqual(span.messageEvents.length, 32);\n      assert.strictEqual(span.droppedMessageEventsCount, 3);\n    });\n  });\n\n  describe('setStatus()', () => {\n    it('should return default status', () => {\n      const rootSpan = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      rootSpan.start();\n\n      const span = new Span(tracer, rootSpan);\n      span.start();\n\n      assert.strictEqual(rootSpan.status.code, 0);\n      assert.strictEqual(rootSpan.status.message, undefined);\n      assert.strictEqual(span.status.code, 0);\n      assert.strictEqual(span.status.message, undefined);\n    });\n\n    it('should set an error status', () => {\n      const rootSpan = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      rootSpan.start();\n      const span = new Span(tracer, rootSpan);\n      span.start();\n      span.setStatus(types.CanonicalCode.PERMISSION_DENIED, 'This is an error');\n\n      assert.strictEqual(rootSpan.status.code, 0);\n      assert.strictEqual(rootSpan.status.message, undefined);\n      assert.strictEqual(span.status.code, 7);\n      assert.strictEqual(span.status.message, 'This is an error');\n    });\n  });\n\n  describe('get traceState()', () => {\n    it('should return the traceState', () => {\n      const rootSpan = new RootSpan(\n        tracer,\n        name,\n        kind,\n        traceId,\n        parentSpanId,\n        'traceState'\n      );\n      rootSpan.start();\n      assert.strictEqual(rootSpan.traceState, 'traceState');\n\n      const span = new Span(tracer, rootSpan);\n      assert.strictEqual(span.traceId, rootSpan.traceId);\n      assert.strictEqual(span.traceState, 'traceState');\n    });\n\n    it('should handle optional / undefined traceState', () => {\n      const rootSpan = new RootSpan(tracer, name, kind, traceId, parentSpanId);\n      rootSpan.start();\n      assert.strictEqual(rootSpan.traceState, undefined);\n\n      const span = new Span(tracer, rootSpan);\n      assert.strictEqual(span.traceId, rootSpan.traceId);\n      assert.strictEqual(span.traceState, undefined);\n    });\n  });\n});\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"1de73240a7e816dedf203bd7bc59d8c19d621aa1"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2mk6ql1crp=function(){return actualCoverage;};}return actualCoverage;}cov_2mk6ql1crp();cov_2mk6ql1crp().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const assert=(cov_2mk6ql1crp().s[1]++,require("assert"));const root_span_1=(cov_2mk6ql1crp().s[2]++,require("../src/trace/model/root-span"));const span_1=(cov_2mk6ql1crp().s[3]++,require("../src/trace/model/span"));const tracer_1=(cov_2mk6ql1crp().s[4]++,require("../src/trace/model/tracer"));const types=(cov_2mk6ql1crp().s[5]++,require("../src/trace/model/types"));// TODO: we should evaluate a way to merge similar test cases between span and
// rootspan
const tracer=(cov_2mk6ql1crp().s[6]++,new tracer_1.CoreTracer());cov_2mk6ql1crp().s[7]++;tracer.activeTraceParams={numberOfAttributesPerSpan:32,numberOfLinksPerSpan:32,numberOfAnnontationEventsPerSpan:32,numberOfMessageEventsPerSpan:32};cov_2mk6ql1crp().s[8]++;describe('Span',()=>{cov_2mk6ql1crp().f[0]++;const name=(cov_2mk6ql1crp().s[9]++,'MySpanName');const kind=(cov_2mk6ql1crp().s[10]++,types.SpanKind.SERVER);const traceId=(cov_2mk6ql1crp().s[11]++,'d4cda95b652f4a1592b449d5929fda1b');const parentSpanId=(cov_2mk6ql1crp().s[12]++,'');/**
     * Should create a span
     */cov_2mk6ql1crp().s[13]++;describe('new Span()',()=>{cov_2mk6ql1crp().f[1]++;cov_2mk6ql1crp().s[14]++;it('should create a Span instance',()=>{cov_2mk6ql1crp().f[2]++;const rootSpan=(cov_2mk6ql1crp().s[15]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));const span=(cov_2mk6ql1crp().s[16]++,new span_1.Span(tracer,rootSpan));cov_2mk6ql1crp().s[17]++;assert.ok(span instanceof span_1.Span);});cov_2mk6ql1crp().s[18]++;it('should use relative clock for child spans',()=>{cov_2mk6ql1crp().f[3]++;const rootSpan=(cov_2mk6ql1crp().s[19]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));cov_2mk6ql1crp().s[20]++;rootSpan.start();const span=(cov_2mk6ql1crp().s[21]++,new span_1.Span(tracer,rootSpan));cov_2mk6ql1crp().s[22]++;span.start();cov_2mk6ql1crp().s[23]++;assert.ok(rootSpan.startTime.getTime()<=span.startTime.getTime());});});/**
     * Should return the Trace ID
     */cov_2mk6ql1crp().s[24]++;describe('get traceId()',()=>{cov_2mk6ql1crp().f[4]++;cov_2mk6ql1crp().s[25]++;it('should return the trace id',()=>{cov_2mk6ql1crp().f[5]++;const rootSpan=(cov_2mk6ql1crp().s[26]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));cov_2mk6ql1crp().s[27]++;rootSpan.start();const span=(cov_2mk6ql1crp().s[28]++,new span_1.Span(tracer,rootSpan));cov_2mk6ql1crp().s[29]++;assert.strictEqual(span.traceId,rootSpan.traceId);});});/**
     * Should the span context of span
     */cov_2mk6ql1crp().s[30]++;describe('get spanContext',()=>{cov_2mk6ql1crp().f[6]++;cov_2mk6ql1crp().s[31]++;it('should the span context of span',()=>{cov_2mk6ql1crp().f[7]++;const rootSpan=(cov_2mk6ql1crp().s[32]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));cov_2mk6ql1crp().s[33]++;rootSpan.start();const span=(cov_2mk6ql1crp().s[34]++,new span_1.Span(tracer,rootSpan));const context=(cov_2mk6ql1crp().s[35]++,span.spanContext);cov_2mk6ql1crp().s[36]++;assert.strictEqual(context.traceId,rootSpan.traceId);cov_2mk6ql1crp().s[37]++;assert.strictEqual(context.spanId,span.id);cov_2mk6ql1crp().s[38]++;assert.strictEqual(context.options,1);});});/**
     * startTime, endTime and durantion proprieties called before start() - no
     * clock instance created
     */cov_2mk6ql1crp().s[39]++;describe('get time properties before start()',()=>{cov_2mk6ql1crp().f[8]++;let span;cov_2mk6ql1crp().s[40]++;before(()=>{cov_2mk6ql1crp().f[9]++;const rootSpan=(cov_2mk6ql1crp().s[41]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));cov_2mk6ql1crp().s[42]++;rootSpan.start();cov_2mk6ql1crp().s[43]++;span=new span_1.Span(tracer,rootSpan);});cov_2mk6ql1crp().s[44]++;it('should get startTime()',()=>{cov_2mk6ql1crp().f[10]++;cov_2mk6ql1crp().s[45]++;assert.ok(span.startTime);});cov_2mk6ql1crp().s[46]++;it('should get endTime()',()=>{cov_2mk6ql1crp().f[11]++;cov_2mk6ql1crp().s[47]++;assert.ok(span.endTime);});cov_2mk6ql1crp().s[48]++;it('should get duration() return 0',()=>{cov_2mk6ql1crp().f[12]++;cov_2mk6ql1crp().s[49]++;assert.strictEqual(span.duration,0);});});/**
     * Should start a span instance
     */cov_2mk6ql1crp().s[50]++;describe('start()',()=>{cov_2mk6ql1crp().f[13]++;cov_2mk6ql1crp().s[51]++;it('should start a span instance',()=>{cov_2mk6ql1crp().f[14]++;const rootSpan=(cov_2mk6ql1crp().s[52]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));cov_2mk6ql1crp().s[53]++;rootSpan.start();const span=(cov_2mk6ql1crp().s[54]++,new span_1.Span(tracer,rootSpan));cov_2mk6ql1crp().s[55]++;span.start();cov_2mk6ql1crp().s[56]++;assert.ok(span.started);});cov_2mk6ql1crp().s[57]++;it('should start a RootSpan and set CurrentRootSpan when parentSpanId is empty',()=>{cov_2mk6ql1crp().f[15]++;const rootSpan=(cov_2mk6ql1crp().s[58]++,new root_span_1.RootSpan(tracer,name,kind,traceId,''));cov_2mk6ql1crp().s[59]++;rootSpan.start();cov_2mk6ql1crp().s[60]++;assert.strictEqual(tracer.currentRootSpan,rootSpan);const span=(cov_2mk6ql1crp().s[61]++,new span_1.Span(tracer,rootSpan));cov_2mk6ql1crp().s[62]++;span.start();cov_2mk6ql1crp().s[63]++;assert.strictEqual(tracer.currentRootSpan,rootSpan);cov_2mk6ql1crp().s[64]++;assert.ok(span.started);});cov_2mk6ql1crp().s[65]++;it('should start a RootSpan and set CurrentRootSpan when parentSpanId is not empty',()=>{cov_2mk6ql1crp().f[16]++;const rootSpan=(cov_2mk6ql1crp().s[66]++,new root_span_1.RootSpan(tracer,name,kind,traceId,'d5955a12632d46a1'));cov_2mk6ql1crp().s[67]++;rootSpan.start();cov_2mk6ql1crp().s[68]++;assert.strictEqual(tracer.currentRootSpan,rootSpan);const span=(cov_2mk6ql1crp().s[69]++,new span_1.Span(tracer,rootSpan));cov_2mk6ql1crp().s[70]++;span.start();cov_2mk6ql1crp().s[71]++;assert.strictEqual(tracer.currentRootSpan,rootSpan);cov_2mk6ql1crp().s[72]++;assert.ok(span.started);});});/**
     * Should not change the initial startTime
     */cov_2mk6ql1crp().s[73]++;describe('start() an already started span',()=>{cov_2mk6ql1crp().f[17]++;cov_2mk6ql1crp().s[74]++;it('should not change the initial startTime',()=>{cov_2mk6ql1crp().f[18]++;const rootSpan=(cov_2mk6ql1crp().s[75]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));cov_2mk6ql1crp().s[76]++;rootSpan.start();const span=(cov_2mk6ql1crp().s[77]++,new span_1.Span(tracer,rootSpan));cov_2mk6ql1crp().s[78]++;span.start();const initialStartTime=(cov_2mk6ql1crp().s[79]++,span.startTime);cov_2mk6ql1crp().s[80]++;span.start();cov_2mk6ql1crp().s[81]++;assert.strictEqual(span.startTime,initialStartTime);});});/**
     * Should end a span instance
     */cov_2mk6ql1crp().s[82]++;describe('end()',()=>{cov_2mk6ql1crp().f[19]++;cov_2mk6ql1crp().s[83]++;it('should end a span instance',()=>{cov_2mk6ql1crp().f[20]++;const rootSpan=(cov_2mk6ql1crp().s[84]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));cov_2mk6ql1crp().s[85]++;rootSpan.start();const span=(cov_2mk6ql1crp().s[86]++,new span_1.Span(tracer,rootSpan));cov_2mk6ql1crp().s[87]++;span.start();cov_2mk6ql1crp().s[88]++;span.end();cov_2mk6ql1crp().s[89]++;assert.ok(span.ended);});});/**
     * Should not end a span instance
     */cov_2mk6ql1crp().s[90]++;describe('end() before start()',()=>{cov_2mk6ql1crp().f[21]++;cov_2mk6ql1crp().s[91]++;it('should not end a span instance',()=>{cov_2mk6ql1crp().f[22]++;const rootSpan=(cov_2mk6ql1crp().s[92]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));cov_2mk6ql1crp().s[93]++;rootSpan.start();const span=(cov_2mk6ql1crp().s[94]++,new span_1.Span(tracer,rootSpan));cov_2mk6ql1crp().s[95]++;span.end();cov_2mk6ql1crp().s[96]++;assert.ok(!span.ended);});});/**
     * Should not change the endTime
     */cov_2mk6ql1crp().s[97]++;describe('end() an already ended span',()=>{cov_2mk6ql1crp().f[23]++;cov_2mk6ql1crp().s[98]++;it('should not change the endTime',()=>{cov_2mk6ql1crp().f[24]++;const rootSpan=(cov_2mk6ql1crp().s[99]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));cov_2mk6ql1crp().s[100]++;rootSpan.start();const span=(cov_2mk6ql1crp().s[101]++,new span_1.Span(tracer,rootSpan));cov_2mk6ql1crp().s[102]++;span.start();cov_2mk6ql1crp().s[103]++;span.end();const initialEndTime=(cov_2mk6ql1crp().s[104]++,span.endTime);cov_2mk6ql1crp().s[105]++;span.end();cov_2mk6ql1crp().s[106]++;assert.strictEqual(span.endTime.getTime(),initialEndTime.getTime());});});/**
     * Should add an attrinbutes
     */cov_2mk6ql1crp().s[107]++;describe('addAtribute()',()=>{cov_2mk6ql1crp().f[25]++;cov_2mk6ql1crp().s[108]++;it('should add an attribute',()=>{cov_2mk6ql1crp().f[26]++;const rootSpan=(cov_2mk6ql1crp().s[109]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));cov_2mk6ql1crp().s[110]++;rootSpan.start();const span=(cov_2mk6ql1crp().s[111]++,new span_1.Span(tracer,rootSpan));cov_2mk6ql1crp().s[112]++;span.start();cov_2mk6ql1crp().s[113]++;['String','Number','Boolean'].map(attType=>{cov_2mk6ql1crp().f[27]++;cov_2mk6ql1crp().s[114]++;span.addAttribute('testKey'+attType,'testValue'+attType);cov_2mk6ql1crp().s[115]++;assert.strictEqual(span.attributes['testKey'+attType],'testValue'+attType);});cov_2mk6ql1crp().s[116]++;span.addAttribute('object',{foo:'bar'});cov_2mk6ql1crp().s[117]++;assert.strictEqual(span.attributes['object'],'{"foo":"bar"}');cov_2mk6ql1crp().s[118]++;span.addAttribute('array',[1,2,3]);cov_2mk6ql1crp().s[119]++;assert.strictEqual(span.attributes['array'],'[1,2,3]');});cov_2mk6ql1crp().s[120]++;it('should drop extra attributes',()=>{cov_2mk6ql1crp().f[28]++;const rootSpan=(cov_2mk6ql1crp().s[121]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));cov_2mk6ql1crp().s[122]++;rootSpan.start();const span=(cov_2mk6ql1crp().s[123]++,new span_1.Span(tracer,rootSpan));cov_2mk6ql1crp().s[124]++;span.start();cov_2mk6ql1crp().s[125]++;for(let i=(cov_2mk6ql1crp().s[126]++,0);i<40;i++){cov_2mk6ql1crp().s[127]++;span.addAttribute('attr'+i,100);}cov_2mk6ql1crp().s[128]++;assert.strictEqual(Object.keys(span.attributes).length,32);cov_2mk6ql1crp().s[129]++;assert.strictEqual(span.droppedAttributesCount,8);});});/**
     * Should add an annotation
     */cov_2mk6ql1crp().s[130]++;describe('addAnnotation()',()=>{cov_2mk6ql1crp().f[29]++;cov_2mk6ql1crp().s[131]++;it('should add an annotation',()=>{cov_2mk6ql1crp().f[30]++;// tslint:disable:no-any
function instanceOfAnnotation(object){cov_2mk6ql1crp().f[31]++;cov_2mk6ql1crp().s[132]++;return(cov_2mk6ql1crp().b[0][0]++,'description'in object)&&(cov_2mk6ql1crp().b[0][1]++,'timestamp'in object)&&(cov_2mk6ql1crp().b[0][2]++,'attributes'in object);}const rootSpan=(cov_2mk6ql1crp().s[133]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));cov_2mk6ql1crp().s[134]++;rootSpan.start();const span=(cov_2mk6ql1crp().s[135]++,new span_1.Span(tracer,rootSpan));cov_2mk6ql1crp().s[136]++;span.start();cov_2mk6ql1crp().s[137]++;span.addAnnotation('description test',{},Date.now());cov_2mk6ql1crp().s[138]++;assert.ok(span.annotations.length>0);cov_2mk6ql1crp().s[139]++;assert.strictEqual(span.droppedAnnotationsCount,0);cov_2mk6ql1crp().s[140]++;assert.ok(instanceOfAnnotation(span.annotations[0]));});cov_2mk6ql1crp().s[141]++;it('should drop extra annotations',()=>{cov_2mk6ql1crp().f[32]++;const rootSpan=(cov_2mk6ql1crp().s[142]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));cov_2mk6ql1crp().s[143]++;rootSpan.start();const span=(cov_2mk6ql1crp().s[144]++,new span_1.Span(tracer,rootSpan));cov_2mk6ql1crp().s[145]++;span.start();cov_2mk6ql1crp().s[146]++;for(let i=(cov_2mk6ql1crp().s[147]++,0);i<40;i++){cov_2mk6ql1crp().s[148]++;span.addAnnotation('description test',{},Date.now());}cov_2mk6ql1crp().s[149]++;assert.strictEqual(span.annotations.length,32);cov_2mk6ql1crp().s[150]++;assert.strictEqual(span.droppedAnnotationsCount,8);});});/**
     * Should add a Link.
     */cov_2mk6ql1crp().s[151]++;describe('addLink()',()=>{cov_2mk6ql1crp().f[33]++;cov_2mk6ql1crp().s[152]++;it('should add a Link',()=>{cov_2mk6ql1crp().f[34]++;// tslint:disable:no-any
function instanceOfLink(object){cov_2mk6ql1crp().f[35]++;cov_2mk6ql1crp().s[153]++;return(cov_2mk6ql1crp().b[1][0]++,'traceId'in object)&&(cov_2mk6ql1crp().b[1][1]++,'spanId'in object)&&(cov_2mk6ql1crp().b[1][2]++,'type'in object);}const rootSpan=(cov_2mk6ql1crp().s[154]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));cov_2mk6ql1crp().s[155]++;rootSpan.start();const span=(cov_2mk6ql1crp().s[156]++,new span_1.Span(tracer,rootSpan));cov_2mk6ql1crp().s[157]++;span.start();cov_2mk6ql1crp().s[158]++;span.addLink(span.traceId,rootSpan.id,types.LinkType.PARENT_LINKED_SPAN);cov_2mk6ql1crp().s[159]++;assert.ok(span.links.length>0);cov_2mk6ql1crp().s[160]++;assert.strictEqual(span.droppedLinksCount,0);cov_2mk6ql1crp().s[161]++;assert.ok(instanceOfLink(span.links[0]));});cov_2mk6ql1crp().s[162]++;it('should drop extra links',()=>{cov_2mk6ql1crp().f[36]++;const rootSpan=(cov_2mk6ql1crp().s[163]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));cov_2mk6ql1crp().s[164]++;rootSpan.start();const span=(cov_2mk6ql1crp().s[165]++,new span_1.Span(tracer,rootSpan));cov_2mk6ql1crp().s[166]++;span.start();cov_2mk6ql1crp().s[167]++;for(let i=(cov_2mk6ql1crp().s[168]++,0);i<35;i++){cov_2mk6ql1crp().s[169]++;span.addLink(span.traceId,rootSpan.id,types.LinkType.PARENT_LINKED_SPAN);}cov_2mk6ql1crp().s[170]++;assert.strictEqual(span.links.length,32);cov_2mk6ql1crp().s[171]++;assert.strictEqual(span.droppedLinksCount,3);});});/**
     * Should add a Message Event.
     */cov_2mk6ql1crp().s[172]++;describe('addMessageEvent()',()=>{cov_2mk6ql1crp().f[37]++;cov_2mk6ql1crp().s[173]++;it('should add a Message Event',()=>{cov_2mk6ql1crp().f[38]++;// tslint:disable:no-any
function instanceOfLink(object){cov_2mk6ql1crp().f[39]++;cov_2mk6ql1crp().s[174]++;return(cov_2mk6ql1crp().b[2][0]++,'type'in object)&&(cov_2mk6ql1crp().b[2][1]++,'id'in object);}const rootSpan=(cov_2mk6ql1crp().s[175]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));cov_2mk6ql1crp().s[176]++;rootSpan.start();const span=(cov_2mk6ql1crp().s[177]++,new span_1.Span(tracer,rootSpan));cov_2mk6ql1crp().s[178]++;span.start();cov_2mk6ql1crp().s[179]++;span.addMessageEvent(types.MessageEventType.UNSPECIFIED,/* id */1,/* timestamp */1550000000000,/* uncompressedSize */55,/** compressedSize */40);cov_2mk6ql1crp().s[180]++;assert.ok(span.messageEvents.length>0);cov_2mk6ql1crp().s[181]++;assert.deepStrictEqual(span.messageEvents,[{type:types.MessageEventType.UNSPECIFIED,id:1,timestamp:1550000000000,uncompressedSize:55,compressedSize:40}]);cov_2mk6ql1crp().s[182]++;assert.strictEqual(span.droppedMessageEventsCount,0);cov_2mk6ql1crp().s[183]++;assert.ok(instanceOfLink(span.messageEvents[0]));});cov_2mk6ql1crp().s[184]++;it('should drop extra  Message Event',()=>{cov_2mk6ql1crp().f[40]++;const rootSpan=(cov_2mk6ql1crp().s[185]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));cov_2mk6ql1crp().s[186]++;rootSpan.start();const span=(cov_2mk6ql1crp().s[187]++,new span_1.Span(tracer,rootSpan));cov_2mk6ql1crp().s[188]++;span.start();cov_2mk6ql1crp().s[189]++;for(let i=(cov_2mk6ql1crp().s[190]++,0);i<35;i++){cov_2mk6ql1crp().s[191]++;span.addMessageEvent(types.MessageEventType.UNSPECIFIED,1);}cov_2mk6ql1crp().s[192]++;assert.strictEqual(span.messageEvents.length,32);cov_2mk6ql1crp().s[193]++;assert.strictEqual(span.droppedMessageEventsCount,3);});});cov_2mk6ql1crp().s[194]++;describe('setStatus()',()=>{cov_2mk6ql1crp().f[41]++;cov_2mk6ql1crp().s[195]++;it('should return default status',()=>{cov_2mk6ql1crp().f[42]++;const rootSpan=(cov_2mk6ql1crp().s[196]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));cov_2mk6ql1crp().s[197]++;rootSpan.start();const span=(cov_2mk6ql1crp().s[198]++,new span_1.Span(tracer,rootSpan));cov_2mk6ql1crp().s[199]++;span.start();cov_2mk6ql1crp().s[200]++;assert.strictEqual(rootSpan.status.code,0);cov_2mk6ql1crp().s[201]++;assert.strictEqual(rootSpan.status.message,undefined);cov_2mk6ql1crp().s[202]++;assert.strictEqual(span.status.code,0);cov_2mk6ql1crp().s[203]++;assert.strictEqual(span.status.message,undefined);});cov_2mk6ql1crp().s[204]++;it('should set an error status',()=>{cov_2mk6ql1crp().f[43]++;const rootSpan=(cov_2mk6ql1crp().s[205]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));cov_2mk6ql1crp().s[206]++;rootSpan.start();const span=(cov_2mk6ql1crp().s[207]++,new span_1.Span(tracer,rootSpan));cov_2mk6ql1crp().s[208]++;span.start();cov_2mk6ql1crp().s[209]++;span.setStatus(types.CanonicalCode.PERMISSION_DENIED,'This is an error');cov_2mk6ql1crp().s[210]++;assert.strictEqual(rootSpan.status.code,0);cov_2mk6ql1crp().s[211]++;assert.strictEqual(rootSpan.status.message,undefined);cov_2mk6ql1crp().s[212]++;assert.strictEqual(span.status.code,7);cov_2mk6ql1crp().s[213]++;assert.strictEqual(span.status.message,'This is an error');});});cov_2mk6ql1crp().s[214]++;describe('get traceState()',()=>{cov_2mk6ql1crp().f[44]++;cov_2mk6ql1crp().s[215]++;it('should return the traceState',()=>{cov_2mk6ql1crp().f[45]++;const rootSpan=(cov_2mk6ql1crp().s[216]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId,'traceState'));cov_2mk6ql1crp().s[217]++;rootSpan.start();cov_2mk6ql1crp().s[218]++;assert.strictEqual(rootSpan.traceState,'traceState');const span=(cov_2mk6ql1crp().s[219]++,new span_1.Span(tracer,rootSpan));cov_2mk6ql1crp().s[220]++;assert.strictEqual(span.traceId,rootSpan.traceId);cov_2mk6ql1crp().s[221]++;assert.strictEqual(span.traceState,'traceState');});cov_2mk6ql1crp().s[222]++;it('should handle optional / undefined traceState',()=>{cov_2mk6ql1crp().f[46]++;const rootSpan=(cov_2mk6ql1crp().s[223]++,new root_span_1.RootSpan(tracer,name,kind,traceId,parentSpanId));cov_2mk6ql1crp().s[224]++;rootSpan.start();cov_2mk6ql1crp().s[225]++;assert.strictEqual(rootSpan.traceState,undefined);const span=(cov_2mk6ql1crp().s[226]++,new span_1.Span(tracer,rootSpan));cov_2mk6ql1crp().s[227]++;assert.strictEqual(span.traceId,rootSpan.traceId);cov_2mk6ql1crp().s[228]++;assert.strictEqual(span.traceState,undefined);});});});//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
"use strict";/**
 * Copyright 2018, OpenCensus Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function cov_kywng8aon(){var path="/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/src/internal/clock.ts";var hash="485f389700d1e4d6f071775da7cc62ecbc32b60b";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/src/internal/clock.ts",statementMap:{"0":{start:{line:17,column:0},end:{line:17,column:62}},"1":{start:{line:18,column:0},end:{line:18,column:23}},"2":{start:{line:26,column:8},end:{line:26,column:32}},"3":{start:{line:28,column:8},end:{line:28,column:27}},"4":{start:{line:31,column:8},end:{line:31,column:54}},"5":{start:{line:32,column:8},end:{line:32,column:44}},"6":{start:{line:36,column:8},end:{line:38,column:9}},"7":{start:{line:37,column:12},end:{line:37,column:19}},"8":{start:{line:39,column:8},end:{line:39,column:53}},"9":{start:{line:40,column:8},end:{line:40,column:31}},"10":{start:{line:44,column:21},end:{line:44,column:53}},"11":{start:{line:45,column:19},end:{line:45,column:42}},"12":{start:{line:46,column:25},end:{line:46,column:33}},"13":{start:{line:47,column:8},end:{line:47,column:61}},"14":{start:{line:51,column:8},end:{line:53,column:9}},"15":{start:{line:52,column:12},end:{line:52,column:21}},"16":{start:{line:54,column:19},end:{line:54,column:52}},"17":{start:{line:55,column:8},end:{line:55,column:24}},"18":{start:{line:59,column:8},end:{line:59,column:35}},"19":{start:{line:66,column:8},end:{line:68,column:9}},"20":{start:{line:67,column:12},end:{line:67,column:70}},"21":{start:{line:69,column:8},end:{line:69,column:26}},"22":{start:{line:73,column:8},end:{line:73,column:31}},"23":{start:{line:76,column:0},end:{line:76,column:22}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:24,column:4},end:{line:24,column:5}},loc:{start:{line:24,column:27},end:{line:33,column:5}},line:24},"1":{name:"(anonymous_1)",decl:{start:{line:35,column:4},end:{line:35,column:5}},loc:{start:{line:35,column:10},end:{line:41,column:5}},line:35},"2":{name:"(anonymous_2)",decl:{start:{line:43,column:4},end:{line:43,column:5}},loc:{start:{line:43,column:22},end:{line:48,column:5}},line:43},"3":{name:"(anonymous_3)",decl:{start:{line:50,column:4},end:{line:50,column:5}},loc:{start:{line:50,column:19},end:{line:56,column:5}},line:50},"4":{name:"(anonymous_4)",decl:{start:{line:58,column:4},end:{line:58,column:5}},loc:{start:{line:58,column:20},end:{line:60,column:5}},line:58},"5":{name:"(anonymous_5)",decl:{start:{line:65,column:4},end:{line:65,column:5}},loc:{start:{line:65,column:18},end:{line:70,column:5}},line:65},"6":{name:"(anonymous_6)",decl:{start:{line:72,column:4},end:{line:72,column:5}},loc:{start:{line:72,column:16},end:{line:74,column:5}},line:72}},branchMap:{"0":{loc:{start:{line:31,column:30},end:{line:31,column:53}},type:"binary-expr",locations:[{start:{line:31,column:30},end:{line:31,column:39}},{start:{line:31,column:43},end:{line:31,column:53}}],line:31},"1":{loc:{start:{line:36,column:8},end:{line:38,column:9}},type:"if",locations:[{start:{line:36,column:8},end:{line:38,column:9}},{start:{line:36,column:8},end:{line:38,column:9}}],line:36},"2":{loc:{start:{line:51,column:8},end:{line:53,column:9}},type:"if",locations:[{start:{line:51,column:8},end:{line:53,column:9}},{start:{line:51,column:8},end:{line:53,column:9}}],line:51},"3":{loc:{start:{line:66,column:8},end:{line:68,column:9}},type:"if",locations:[{start:{line:66,column:8},end:{line:68,column:9}},{start:{line:66,column:8},end:{line:68,column:9}}],line:66}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0]},inputSourceMap:{version:3,file:"/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/src/internal/clock.ts",sources:["/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/src/internal/clock.ts"],names:[],mappings:";AAAA;;;;;;;;;;;;;;GAcG;;;AAEH;;GAEG;AACH,MAAa,KAAK;IAUhB,uCAAuC;IACvC,YAAY,SAAgB;QAV5B,wCAAwC;QAChC,eAAU,GAAG,KAAK,CAAC;QAK3B,uDAAuD;QAC/C,SAAI,GAAqB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAItC,yEAAyE;QACzE,+BAA+B;QAC/B,IAAI,CAAC,cAAc,GAAG,SAAS,IAAI,IAAI,IAAI,EAAE,CAAC;QAC9C,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;IACtC,CAAC;IAED,sBAAsB;IACtB,GAAG;QACD,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,OAAO;SACR;QACD,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC7C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IACzB,CAAC;IAED,uEAAuE;IACvE,IAAI,WAAW;QACb,MAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC9C,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACnC,MAAM,QAAQ,GAAG,EAAE,GAAG,GAAG,CAAC;QAC1B,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,GAAG,QAAQ,CAAC,CAAC;IACvD,CAAC;IAED,sCAAsC;IACtC,IAAI,QAAQ;QACV,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,OAAO,CAAC,CAAC;SACV;QACD,MAAM,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC7C,OAAO,EAAE,GAAG,GAAG,CAAC;IAClB,CAAC;IAED,wBAAwB;IACxB,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,cAAc,CAAC;IAC7B,CAAC;IAED;;;OAGG;IACH,IAAI,OAAO;QACT,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC3D;QACD,OAAO,IAAI,IAAI,EAAE,CAAC;IACpB,CAAC;IAED,wCAAwC;IACxC,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;CACF;AAhED,sBAgEC",sourcesContent:["/**\n * Copyright 2018, OpenCensus Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The Clock class is used to record the duration and endTime for spans.\n */\nexport class Clock {\n  /** Indicates if the clock is endend. */\n  private endedLocal = false;\n  /** Indicates the clock's start time. */\n  private startTimeLocal: Date;\n  /** The time in high resolution in a [seconds, nanoseconds]. */\n  private hrtimeLocal: [number, number];\n  /** The duration between start and end of the clock. */\n  private diff: [number, number] = [0, 0];\n\n  /** Constructs a new Clock instance. */\n  constructor(startTime?: Date) {\n    // In some cases clocks need to be relative to other resources, passing a\n    // startTime makes it possible.\n    this.startTimeLocal = startTime || new Date();\n    this.hrtimeLocal = process.hrtime();\n  }\n\n  /** Ends the clock. */\n  end(): void {\n    if (this.endedLocal) {\n      return;\n    }\n    this.diff = process.hrtime(this.hrtimeLocal);\n    this.endedLocal = true;\n  }\n\n  /** Gets the current date from ellapsed milliseconds and start time. */\n  get currentDate(): Date {\n    const diff = process.hrtime(this.hrtimeLocal);\n    const ns = diff[0] * 1e9 + diff[1];\n    const ellapsed = ns / 1e6;\n    return new Date(this.startTime.getTime() + ellapsed);\n  }\n\n  /** Gets the duration of the clock. */\n  get duration(): number {\n    if (!this.endedLocal) {\n      return 0;\n    }\n    const ns = this.diff[0] * 1e9 + this.diff[1];\n    return ns / 1e6;\n  }\n\n  /** Starts the clock. */\n  get startTime(): Date {\n    return this.startTimeLocal;\n  }\n\n  /**\n   * Gets the time so far.\n   * @returns A Date object with the current duration.\n   */\n  get endTime(): Date {\n    if (this.ended) {\n      return new Date(this.startTime.getTime() + this.duration);\n    }\n    return new Date();\n  }\n\n  /** Indicates if the clock was ended. */\n  get ended(): boolean {\n    return this.endedLocal;\n  }\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"485f389700d1e4d6f071775da7cc62ecbc32b60b"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_kywng8aon=function(){return actualCoverage;};}return actualCoverage;}cov_kywng8aon();cov_kywng8aon().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_kywng8aon().s[1]++;exports.Clock=void 0;/**
 * The Clock class is used to record the duration and endTime for spans.
 */class Clock{/** Constructs a new Clock instance. */constructor(startTime){cov_kywng8aon().f[0]++;cov_kywng8aon().s[2]++;/** Indicates if the clock is endend. */this.endedLocal=false;/** The duration between start and end of the clock. */cov_kywng8aon().s[3]++;this.diff=[0,0];// In some cases clocks need to be relative to other resources, passing a
// startTime makes it possible.
cov_kywng8aon().s[4]++;this.startTimeLocal=(cov_kywng8aon().b[0][0]++,startTime)||(cov_kywng8aon().b[0][1]++,new Date());cov_kywng8aon().s[5]++;this.hrtimeLocal=process.hrtime();}/** Ends the clock. */end(){cov_kywng8aon().f[1]++;cov_kywng8aon().s[6]++;if(this.endedLocal){cov_kywng8aon().b[1][0]++;cov_kywng8aon().s[7]++;return;}else{cov_kywng8aon().b[1][1]++;}cov_kywng8aon().s[8]++;this.diff=process.hrtime(this.hrtimeLocal);cov_kywng8aon().s[9]++;this.endedLocal=true;}/** Gets the current date from ellapsed milliseconds and start time. */get currentDate(){cov_kywng8aon().f[2]++;const diff=(cov_kywng8aon().s[10]++,process.hrtime(this.hrtimeLocal));const ns=(cov_kywng8aon().s[11]++,diff[0]*1e9+diff[1]);const ellapsed=(cov_kywng8aon().s[12]++,ns/1e6);cov_kywng8aon().s[13]++;return new Date(this.startTime.getTime()+ellapsed);}/** Gets the duration of the clock. */get duration(){cov_kywng8aon().f[3]++;cov_kywng8aon().s[14]++;if(!this.endedLocal){cov_kywng8aon().b[2][0]++;cov_kywng8aon().s[15]++;return 0;}else{cov_kywng8aon().b[2][1]++;}const ns=(cov_kywng8aon().s[16]++,this.diff[0]*1e9+this.diff[1]);cov_kywng8aon().s[17]++;return ns/1e6;}/** Starts the clock. */get startTime(){cov_kywng8aon().f[4]++;cov_kywng8aon().s[18]++;return this.startTimeLocal;}/**
     * Gets the time so far.
     * @returns A Date object with the current duration.
     */get endTime(){cov_kywng8aon().f[5]++;cov_kywng8aon().s[19]++;if(this.ended){cov_kywng8aon().b[3][0]++;cov_kywng8aon().s[20]++;return new Date(this.startTime.getTime()+this.duration);}else{cov_kywng8aon().b[3][1]++;}cov_kywng8aon().s[21]++;return new Date();}/** Indicates if the clock was ended. */get ended(){cov_kywng8aon().f[6]++;cov_kywng8aon().s[22]++;return this.endedLocal;}}cov_kywng8aon().s[23]++;exports.Clock=Clock;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3VzZXJtYWl0aGEvdHJhZGVtYXN0ZXIvbGlicy9saWItZXh0ZXJuYWwtb3BlbmNlbnN1cy1ub2RlL3NyYy9pbnRlcm5hbC9jbG9jay50cyIsInNvdXJjZXMiOlsiL1VzZXJzL3VzZXJtYWl0aGEvdHJhZGVtYXN0ZXIvbGlicy9saWItZXh0ZXJuYWwtb3BlbmNlbnN1cy1ub2RlL3NyYy9pbnRlcm5hbC9jbG9jay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7Ozs7Ozs7O0dBY0c7OztBQUVIOztHQUVHO0FBQ0gsTUFBYSxLQUFLO0lBVWhCLHVDQUF1QztJQUN2QyxZQUFZLFNBQWdCO1FBVjVCLHdDQUF3QztRQUNoQyxlQUFVLEdBQUcsS0FBSyxDQUFDO1FBSzNCLHVEQUF1RDtRQUMvQyxTQUFJLEdBQXFCLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBSXRDLHlFQUF5RTtRQUN6RSwrQkFBK0I7UUFDL0IsSUFBSSxDQUFDLGNBQWMsR0FBRyxTQUFTLElBQUksSUFBSSxJQUFJLEVBQUUsQ0FBQztRQUM5QyxJQUFJLENBQUMsV0FBVyxHQUFHLE9BQU8sQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUN0QyxDQUFDO0lBRUQsc0JBQXNCO0lBQ3RCLEdBQUc7UUFDRCxJQUFJLElBQUksQ0FBQyxVQUFVLEVBQUU7WUFDbkIsT0FBTztTQUNSO1FBQ0QsSUFBSSxDQUFDLElBQUksR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUM3QyxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQztJQUN6QixDQUFDO0lBRUQsdUVBQXVFO0lBQ3ZFLElBQUksV0FBVztRQUNiLE1BQU0sSUFBSSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQzlDLE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ25DLE1BQU0sUUFBUSxHQUFHLEVBQUUsR0FBRyxHQUFHLENBQUM7UUFDMUIsT0FBTyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sRUFBRSxHQUFHLFFBQVEsQ0FBQyxDQUFDO0lBQ3ZELENBQUM7SUFFRCxzQ0FBc0M7SUFDdEMsSUFBSSxRQUFRO1FBQ1YsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUU7WUFDcEIsT0FBTyxDQUFDLENBQUM7U0FDVjtRQUNELE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDN0MsT0FBTyxFQUFFLEdBQUcsR0FBRyxDQUFDO0lBQ2xCLENBQUM7SUFFRCx3QkFBd0I7SUFDeEIsSUFBSSxTQUFTO1FBQ1gsT0FBTyxJQUFJLENBQUMsY0FBYyxDQUFDO0lBQzdCLENBQUM7SUFFRDs7O09BR0c7SUFDSCxJQUFJLE9BQU87UUFDVCxJQUFJLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDZCxPQUFPLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxFQUFFLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1NBQzNEO1FBQ0QsT0FBTyxJQUFJLElBQUksRUFBRSxDQUFDO0lBQ3BCLENBQUM7SUFFRCx3Q0FBd0M7SUFDeEMsSUFBSSxLQUFLO1FBQ1AsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDO0lBQ3pCLENBQUM7Q0FDRjtBQWhFRCxzQkFnRUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAyMDE4LCBPcGVuQ2Vuc3VzIEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbi8qKlxuICogVGhlIENsb2NrIGNsYXNzIGlzIHVzZWQgdG8gcmVjb3JkIHRoZSBkdXJhdGlvbiBhbmQgZW5kVGltZSBmb3Igc3BhbnMuXG4gKi9cbmV4cG9ydCBjbGFzcyBDbG9jayB7XG4gIC8qKiBJbmRpY2F0ZXMgaWYgdGhlIGNsb2NrIGlzIGVuZGVuZC4gKi9cbiAgcHJpdmF0ZSBlbmRlZExvY2FsID0gZmFsc2U7XG4gIC8qKiBJbmRpY2F0ZXMgdGhlIGNsb2NrJ3Mgc3RhcnQgdGltZS4gKi9cbiAgcHJpdmF0ZSBzdGFydFRpbWVMb2NhbDogRGF0ZTtcbiAgLyoqIFRoZSB0aW1lIGluIGhpZ2ggcmVzb2x1dGlvbiBpbiBhIFtzZWNvbmRzLCBuYW5vc2Vjb25kc10uICovXG4gIHByaXZhdGUgaHJ0aW1lTG9jYWw6IFtudW1iZXIsIG51bWJlcl07XG4gIC8qKiBUaGUgZHVyYXRpb24gYmV0d2VlbiBzdGFydCBhbmQgZW5kIG9mIHRoZSBjbG9jay4gKi9cbiAgcHJpdmF0ZSBkaWZmOiBbbnVtYmVyLCBudW1iZXJdID0gWzAsIDBdO1xuXG4gIC8qKiBDb25zdHJ1Y3RzIGEgbmV3IENsb2NrIGluc3RhbmNlLiAqL1xuICBjb25zdHJ1Y3RvcihzdGFydFRpbWU/OiBEYXRlKSB7XG4gICAgLy8gSW4gc29tZSBjYXNlcyBjbG9ja3MgbmVlZCB0byBiZSByZWxhdGl2ZSB0byBvdGhlciByZXNvdXJjZXMsIHBhc3NpbmcgYVxuICAgIC8vIHN0YXJ0VGltZSBtYWtlcyBpdCBwb3NzaWJsZS5cbiAgICB0aGlzLnN0YXJ0VGltZUxvY2FsID0gc3RhcnRUaW1lIHx8IG5ldyBEYXRlKCk7XG4gICAgdGhpcy5ocnRpbWVMb2NhbCA9IHByb2Nlc3MuaHJ0aW1lKCk7XG4gIH1cblxuICAvKiogRW5kcyB0aGUgY2xvY2suICovXG4gIGVuZCgpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5lbmRlZExvY2FsKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuZGlmZiA9IHByb2Nlc3MuaHJ0aW1lKHRoaXMuaHJ0aW1lTG9jYWwpO1xuICAgIHRoaXMuZW5kZWRMb2NhbCA9IHRydWU7XG4gIH1cblxuICAvKiogR2V0cyB0aGUgY3VycmVudCBkYXRlIGZyb20gZWxsYXBzZWQgbWlsbGlzZWNvbmRzIGFuZCBzdGFydCB0aW1lLiAqL1xuICBnZXQgY3VycmVudERhdGUoKTogRGF0ZSB7XG4gICAgY29uc3QgZGlmZiA9IHByb2Nlc3MuaHJ0aW1lKHRoaXMuaHJ0aW1lTG9jYWwpO1xuICAgIGNvbnN0IG5zID0gZGlmZlswXSAqIDFlOSArIGRpZmZbMV07XG4gICAgY29uc3QgZWxsYXBzZWQgPSBucyAvIDFlNjtcbiAgICByZXR1cm4gbmV3IERhdGUodGhpcy5zdGFydFRpbWUuZ2V0VGltZSgpICsgZWxsYXBzZWQpO1xuICB9XG5cbiAgLyoqIEdldHMgdGhlIGR1cmF0aW9uIG9mIHRoZSBjbG9jay4gKi9cbiAgZ2V0IGR1cmF0aW9uKCk6IG51bWJlciB7XG4gICAgaWYgKCF0aGlzLmVuZGVkTG9jYWwpIHtcbiAgICAgIHJldHVybiAwO1xuICAgIH1cbiAgICBjb25zdCBucyA9IHRoaXMuZGlmZlswXSAqIDFlOSArIHRoaXMuZGlmZlsxXTtcbiAgICByZXR1cm4gbnMgLyAxZTY7XG4gIH1cblxuICAvKiogU3RhcnRzIHRoZSBjbG9jay4gKi9cbiAgZ2V0IHN0YXJ0VGltZSgpOiBEYXRlIHtcbiAgICByZXR1cm4gdGhpcy5zdGFydFRpbWVMb2NhbDtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXRzIHRoZSB0aW1lIHNvIGZhci5cbiAgICogQHJldHVybnMgQSBEYXRlIG9iamVjdCB3aXRoIHRoZSBjdXJyZW50IGR1cmF0aW9uLlxuICAgKi9cbiAgZ2V0IGVuZFRpbWUoKTogRGF0ZSB7XG4gICAgaWYgKHRoaXMuZW5kZWQpIHtcbiAgICAgIHJldHVybiBuZXcgRGF0ZSh0aGlzLnN0YXJ0VGltZS5nZXRUaW1lKCkgKyB0aGlzLmR1cmF0aW9uKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBEYXRlKCk7XG4gIH1cblxuICAvKiogSW5kaWNhdGVzIGlmIHRoZSBjbG9jayB3YXMgZW5kZWQuICovXG4gIGdldCBlbmRlZCgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5lbmRlZExvY2FsO1xuICB9XG59XG4iXX0=
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
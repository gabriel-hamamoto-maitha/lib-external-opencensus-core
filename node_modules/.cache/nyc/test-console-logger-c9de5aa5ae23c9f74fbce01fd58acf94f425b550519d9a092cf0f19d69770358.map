{"version":3,"file":"/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/test/test-console-logger.ts","sources":["/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/test/test-console-logger.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright 2018, OpenCensus Authors\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assert from 'assert';\nimport * as logger from '../src/common/console-logger';\nimport { ConsoleLogger } from '../src/common/console-logger';\n\nconst LEVELS = ['silent', 'error', 'warn', 'info', 'debug'];\nlet consoleTxt = '';\n\n// TODO: Review test cases: Maybe testing the info log level is sufficient\n// because it already shows that lower levels will log, and higher levels won't.\n\ndescribe('ConsoleLogger', () => {\n  const intercept = require('intercept-stdout');\n  const unhookIntercept = intercept((txt: string) => {\n    consoleTxt = txt;\n    return txt;\n  });\n\n  /** Should create a new ConsoleLogger */\n  describe('new ConsoleLogger()', () => {\n    it('should log with default levels', () => {\n      logger.logger();\n      assert.strictEqual(LEVELS.length, ConsoleLogger.LEVELS.length);\n    });\n\n    it('should log with error', () => {\n      const consoleLogger = logger.logger(1);\n      assert.strictEqual(LEVELS[1], consoleLogger.level);\n    });\n  });\n\n  /** Should logger only error log */\n  describe('error logger', () => {\n    const consoleLogger = logger.logger(LEVELS[1]);\n\n    it('should log error', () => {\n      consoleTxt = '';\n      consoleLogger.error('error test logger');\n      unhookIntercept();\n      const validateString = consoleTxt.indexOf('error');\n\n      assert.ok(validateString >= 0);\n    });\n\n    it('should not log warn', () => {\n      consoleTxt = '';\n      consoleLogger.warn('warn test logger');\n      unhookIntercept();\n\n      const validateString = consoleTxt.indexOf('warn');\n\n      assert.strictEqual(validateString, -1);\n    });\n\n    it('should not log info', () => {\n      consoleTxt = '';\n      consoleLogger.info('info test logger');\n      unhookIntercept();\n\n      const validateString = consoleTxt.indexOf('info');\n\n      assert.strictEqual(validateString, -1);\n    });\n\n    it('should not log debug', () => {\n      consoleTxt = '';\n      consoleLogger.debug('debug test logger');\n      unhookIntercept();\n      const validateString = consoleTxt.indexOf('debug');\n\n      assert.strictEqual(validateString, -1);\n    });\n  });\n\n  /** Should disable logger  */\n  describe('silent logger', () => {\n    const consoleLogger = logger.logger(0);\n\n    it('should not log error', () => {\n      consoleTxt = '';\n      consoleLogger.error('error test logger');\n      unhookIntercept();\n      const validateString = consoleTxt.indexOf('error');\n\n      assert.strictEqual(validateString, -1);\n    });\n\n    it('should not log warn', () => {\n      consoleTxt = '';\n      consoleLogger.warn('warn test logger');\n      unhookIntercept();\n\n      const validateString = consoleTxt.indexOf('warn');\n\n      assert.strictEqual(validateString, -1);\n    });\n\n    it('should not log info', () => {\n      consoleTxt = '';\n      consoleLogger.info('info test logger');\n      unhookIntercept();\n\n      const validateString = consoleTxt.indexOf('info');\n\n      assert.strictEqual(validateString, -1);\n    });\n\n    it('should not log debug', () => {\n      consoleTxt = '';\n      consoleLogger.debug('debug test logger');\n      unhookIntercept();\n      const validateString = consoleTxt.indexOf('debug');\n\n      assert.strictEqual(validateString, -1);\n    });\n  });\n});\n"]}
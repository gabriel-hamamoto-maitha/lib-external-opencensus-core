{"version":3,"file":"/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/src/tags/validation.ts","sources":["/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/src/tags/validation.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;AAIH,MAAM,sBAAsB,GAAG,kBAAkB,CAAC;AAClD,MAAM,kBAAkB,GAAG,GAAG,CAAC;AAE/B,8DAA8D;AAC9D,SAAgB,aAAa,CAAC,MAAc;IAC1C,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;QAC3B,OAAO,KAAK,CAAC;KACd;IACD,OAAO,CACL,iBAAiB,CAAC,MAAM,CAAC,IAAI,CAAC;QAC9B,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC;QACtB,MAAM,CAAC,IAAI,CAAC,MAAM,IAAI,kBAAkB,CACzC,CAAC;AACJ,CAAC;AATD,sCASC;AAED,gEAAgE;AAChE,SAAgB,eAAe,CAAC,QAAkB;IAChD,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,KAAK,KAAK,IAAI,IAAI,QAAQ,CAAC,KAAK,KAAK,SAAS,EAAE;QACxE,OAAO,KAAK,CAAC;KACd;IACD,OAAO,CACL,iBAAiB,CAAC,QAAQ,CAAC,KAAK,CAAC;QACjC,QAAQ,CAAC,KAAK,CAAC,MAAM,IAAI,kBAAkB,CAC5C,CAAC;AACJ,CAAC;AARD,0CAQC;AAED,SAAS,iBAAiB,CAAC,IAAY;IACrC,OAAO,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC5C,CAAC","sourcesContent":["/**\n * Copyright 2019, OpenCensus Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TagKey, TagValue } from './types';\n\nconst nonPrintableCharsRegex = /[^\\u0020-\\u007e]/;\nconst TAG_KEY_MAX_LENGTH = 255;\n\n/** Determines whether the given String is a valid tag key. */\nexport function isValidTagKey(tagKey: TagKey): boolean {\n  if (!tagKey || !tagKey.name) {\n    return false;\n  }\n  return (\n    isPrintableString(tagKey.name) &&\n    tagKey.name.length > 0 &&\n    tagKey.name.length <= TAG_KEY_MAX_LENGTH\n  );\n}\n\n/** Determines whether the given String is a valid tag value. */\nexport function isValidTagValue(tagValue: TagValue): boolean {\n  if (!tagValue || tagValue.value === null || tagValue.value === undefined) {\n    return false;\n  }\n  return (\n    isPrintableString(tagValue.value) &&\n    tagValue.value.length <= TAG_KEY_MAX_LENGTH\n  );\n}\n\nfunction isPrintableString(name: string): boolean {\n  return !nonPrintableCharsRegex.test(name);\n}\n"]}
"use strict";/**
 * Copyright 2019, OpenCensus Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function cov_1obkv4947e(){var path="/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/src/metrics/types.ts";var hash="ed4fdc6b4900d445df651ed6148072e83d31d80b";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/src/metrics/types.ts",statementMap:{"0":{start:{line:17,column:0},end:{line:17,column:62}}},fnMap:{},branchMap:{},s:{"0":0},f:{},b:{},inputSourceMap:{version:3,file:"/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/src/metrics/types.ts",sources:["/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/src/metrics/types.ts"],names:[],mappings:";AAAA;;;;;;;;;;;;;;GAcG",sourcesContent:["/**\n * Copyright 2019, OpenCensus Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MeasureUnit } from './../stats/types';\nimport { LabelKey, LabelValue, Metric } from './export/types';\n\n/** Provides a {@link Metric} with one or more {@link TimeSeries} */\nexport interface Meter {\n  /**\n   * Provides a Metric with one or more TimeSeries.\n   *\n   * @returns The Metric, or null if TimeSeries is not present in Metric.\n   */\n  getMetric(): Metric | null;\n}\n\n/** Options for every metric added to the MetricRegistry. */\nexport interface MetricOptions {\n  /** The description of the metric. */\n  readonly description?: string;\n  /** The unit of the metric. */\n  readonly unit?: MeasureUnit;\n  /** The list of the label keys. */\n  readonly labelKeys?: LabelKey[];\n  /** The map of constant labels for the Metric. */\n  readonly constantLabels?: Map<LabelKey, LabelValue>;\n\n  // TODO(mayurkale): Add resource information.\n  // https://github.com/census-instrumentation/opencensus-specs/pull/248\n}\n\n/** Interface for objects with \"length()\" method. */\nexport interface LengthMethodInterface {\n  length(): number;\n}\n\n/** Interface for objects with \"length\" attribute (e.g. Array). */\nexport interface LengthAttributeInterface {\n  length: number;\n}\n\n/** Interface for objects with \"size\" method. */\nexport interface SizeMethodInterface {\n  size(): number;\n}\n\n/** Interface for objects with \"size\" attribute (e.g. Map, Set). */\nexport interface SizeAttributeInterface {\n  size: number;\n}\n\n/** Interface for objects with \"getValue\" method. */\nexport interface ToValueInterface {\n  getValue(): number;\n}\n\nexport interface AccessorFunction {\n  (): number;\n}\n\nexport type AccessorInterface =\n  | LengthAttributeInterface\n  | LengthMethodInterface\n  | SizeAttributeInterface\n  | SizeMethodInterface\n  | ToValueInterface\n  | AccessorFunction;\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"ed4fdc6b4900d445df651ed6148072e83d31d80b"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1obkv4947e=function(){return actualCoverage;};}return actualCoverage;}cov_1obkv4947e();cov_1obkv4947e().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3VzZXJtYWl0aGEvdHJhZGVtYXN0ZXIvbGlicy9saWItZXh0ZXJuYWwtb3BlbmNlbnN1cy1ub2RlL3NyYy9tZXRyaWNzL3R5cGVzLnRzIiwic291cmNlcyI6WyIvVXNlcnMvdXNlcm1haXRoYS90cmFkZW1hc3Rlci9saWJzL2xpYi1leHRlcm5hbC1vcGVuY2Vuc3VzLW5vZGUvc3JjL21ldHJpY3MvdHlwZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7Ozs7Ozs7Ozs7OztHQWNHIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgMjAxOSwgT3BlbkNlbnN1cyBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBNZWFzdXJlVW5pdCB9IGZyb20gJy4vLi4vc3RhdHMvdHlwZXMnO1xuaW1wb3J0IHsgTGFiZWxLZXksIExhYmVsVmFsdWUsIE1ldHJpYyB9IGZyb20gJy4vZXhwb3J0L3R5cGVzJztcblxuLyoqIFByb3ZpZGVzIGEge0BsaW5rIE1ldHJpY30gd2l0aCBvbmUgb3IgbW9yZSB7QGxpbmsgVGltZVNlcmllc30gKi9cbmV4cG9ydCBpbnRlcmZhY2UgTWV0ZXIge1xuICAvKipcbiAgICogUHJvdmlkZXMgYSBNZXRyaWMgd2l0aCBvbmUgb3IgbW9yZSBUaW1lU2VyaWVzLlxuICAgKlxuICAgKiBAcmV0dXJucyBUaGUgTWV0cmljLCBvciBudWxsIGlmIFRpbWVTZXJpZXMgaXMgbm90IHByZXNlbnQgaW4gTWV0cmljLlxuICAgKi9cbiAgZ2V0TWV0cmljKCk6IE1ldHJpYyB8IG51bGw7XG59XG5cbi8qKiBPcHRpb25zIGZvciBldmVyeSBtZXRyaWMgYWRkZWQgdG8gdGhlIE1ldHJpY1JlZ2lzdHJ5LiAqL1xuZXhwb3J0IGludGVyZmFjZSBNZXRyaWNPcHRpb25zIHtcbiAgLyoqIFRoZSBkZXNjcmlwdGlvbiBvZiB0aGUgbWV0cmljLiAqL1xuICByZWFkb25seSBkZXNjcmlwdGlvbj86IHN0cmluZztcbiAgLyoqIFRoZSB1bml0IG9mIHRoZSBtZXRyaWMuICovXG4gIHJlYWRvbmx5IHVuaXQ/OiBNZWFzdXJlVW5pdDtcbiAgLyoqIFRoZSBsaXN0IG9mIHRoZSBsYWJlbCBrZXlzLiAqL1xuICByZWFkb25seSBsYWJlbEtleXM/OiBMYWJlbEtleVtdO1xuICAvKiogVGhlIG1hcCBvZiBjb25zdGFudCBsYWJlbHMgZm9yIHRoZSBNZXRyaWMuICovXG4gIHJlYWRvbmx5IGNvbnN0YW50TGFiZWxzPzogTWFwPExhYmVsS2V5LCBMYWJlbFZhbHVlPjtcblxuICAvLyBUT0RPKG1heXVya2FsZSk6IEFkZCByZXNvdXJjZSBpbmZvcm1hdGlvbi5cbiAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2NlbnN1cy1pbnN0cnVtZW50YXRpb24vb3BlbmNlbnN1cy1zcGVjcy9wdWxsLzI0OFxufVxuXG4vKiogSW50ZXJmYWNlIGZvciBvYmplY3RzIHdpdGggXCJsZW5ndGgoKVwiIG1ldGhvZC4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgTGVuZ3RoTWV0aG9kSW50ZXJmYWNlIHtcbiAgbGVuZ3RoKCk6IG51bWJlcjtcbn1cblxuLyoqIEludGVyZmFjZSBmb3Igb2JqZWN0cyB3aXRoIFwibGVuZ3RoXCIgYXR0cmlidXRlIChlLmcuIEFycmF5KS4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgTGVuZ3RoQXR0cmlidXRlSW50ZXJmYWNlIHtcbiAgbGVuZ3RoOiBudW1iZXI7XG59XG5cbi8qKiBJbnRlcmZhY2UgZm9yIG9iamVjdHMgd2l0aCBcInNpemVcIiBtZXRob2QuICovXG5leHBvcnQgaW50ZXJmYWNlIFNpemVNZXRob2RJbnRlcmZhY2Uge1xuICBzaXplKCk6IG51bWJlcjtcbn1cblxuLyoqIEludGVyZmFjZSBmb3Igb2JqZWN0cyB3aXRoIFwic2l6ZVwiIGF0dHJpYnV0ZSAoZS5nLiBNYXAsIFNldCkuICovXG5leHBvcnQgaW50ZXJmYWNlIFNpemVBdHRyaWJ1dGVJbnRlcmZhY2Uge1xuICBzaXplOiBudW1iZXI7XG59XG5cbi8qKiBJbnRlcmZhY2UgZm9yIG9iamVjdHMgd2l0aCBcImdldFZhbHVlXCIgbWV0aG9kLiAqL1xuZXhwb3J0IGludGVyZmFjZSBUb1ZhbHVlSW50ZXJmYWNlIHtcbiAgZ2V0VmFsdWUoKTogbnVtYmVyO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEFjY2Vzc29yRnVuY3Rpb24ge1xuICAoKTogbnVtYmVyO1xufVxuXG5leHBvcnQgdHlwZSBBY2Nlc3NvckludGVyZmFjZSA9XG4gIHwgTGVuZ3RoQXR0cmlidXRlSW50ZXJmYWNlXG4gIHwgTGVuZ3RoTWV0aG9kSW50ZXJmYWNlXG4gIHwgU2l6ZUF0dHJpYnV0ZUludGVyZmFjZVxuICB8IFNpemVNZXRob2RJbnRlcmZhY2VcbiAgfCBUb1ZhbHVlSW50ZXJmYWNlXG4gIHwgQWNjZXNzb3JGdW5jdGlvbjtcbiJdfQ==
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMW9ia3Y0OTQ3ZSIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsImJyYW5jaE1hcCIsInMiLCJmIiwiYiIsImlucHV0U291cmNlTWFwIiwidmVyc2lvbiIsImZpbGUiLCJzb3VyY2VzIiwibmFtZXMiLCJtYXBwaW5ncyIsInNvdXJjZXNDb250ZW50IiwiX2NvdmVyYWdlU2NoZW1hIiwiY292ZXJhZ2UiLCJhY3R1YWxDb3ZlcmFnZSJdLCJzb3VyY2VzIjpbIi9Vc2Vycy91c2VybWFpdGhhL3RyYWRlbWFzdGVyL2xpYnMvbGliLWV4dGVybmFsLW9wZW5jZW5zdXMtbm9kZS9zcmMvbWV0cmljcy90eXBlcy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAyMDE5LCBPcGVuQ2Vuc3VzIEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IE1lYXN1cmVVbml0IH0gZnJvbSAnLi8uLi9zdGF0cy90eXBlcyc7XG5pbXBvcnQgeyBMYWJlbEtleSwgTGFiZWxWYWx1ZSwgTWV0cmljIH0gZnJvbSAnLi9leHBvcnQvdHlwZXMnO1xuXG4vKiogUHJvdmlkZXMgYSB7QGxpbmsgTWV0cmljfSB3aXRoIG9uZSBvciBtb3JlIHtAbGluayBUaW1lU2VyaWVzfSAqL1xuZXhwb3J0IGludGVyZmFjZSBNZXRlciB7XG4gIC8qKlxuICAgKiBQcm92aWRlcyBhIE1ldHJpYyB3aXRoIG9uZSBvciBtb3JlIFRpbWVTZXJpZXMuXG4gICAqXG4gICAqIEByZXR1cm5zIFRoZSBNZXRyaWMsIG9yIG51bGwgaWYgVGltZVNlcmllcyBpcyBub3QgcHJlc2VudCBpbiBNZXRyaWMuXG4gICAqL1xuICBnZXRNZXRyaWMoKTogTWV0cmljIHwgbnVsbDtcbn1cblxuLyoqIE9wdGlvbnMgZm9yIGV2ZXJ5IG1ldHJpYyBhZGRlZCB0byB0aGUgTWV0cmljUmVnaXN0cnkuICovXG5leHBvcnQgaW50ZXJmYWNlIE1ldHJpY09wdGlvbnMge1xuICAvKiogVGhlIGRlc2NyaXB0aW9uIG9mIHRoZSBtZXRyaWMuICovXG4gIHJlYWRvbmx5IGRlc2NyaXB0aW9uPzogc3RyaW5nO1xuICAvKiogVGhlIHVuaXQgb2YgdGhlIG1ldHJpYy4gKi9cbiAgcmVhZG9ubHkgdW5pdD86IE1lYXN1cmVVbml0O1xuICAvKiogVGhlIGxpc3Qgb2YgdGhlIGxhYmVsIGtleXMuICovXG4gIHJlYWRvbmx5IGxhYmVsS2V5cz86IExhYmVsS2V5W107XG4gIC8qKiBUaGUgbWFwIG9mIGNvbnN0YW50IGxhYmVscyBmb3IgdGhlIE1ldHJpYy4gKi9cbiAgcmVhZG9ubHkgY29uc3RhbnRMYWJlbHM/OiBNYXA8TGFiZWxLZXksIExhYmVsVmFsdWU+O1xuXG4gIC8vIFRPRE8obWF5dXJrYWxlKTogQWRkIHJlc291cmNlIGluZm9ybWF0aW9uLlxuICAvLyBodHRwczovL2dpdGh1Yi5jb20vY2Vuc3VzLWluc3RydW1lbnRhdGlvbi9vcGVuY2Vuc3VzLXNwZWNzL3B1bGwvMjQ4XG59XG5cbi8qKiBJbnRlcmZhY2UgZm9yIG9iamVjdHMgd2l0aCBcImxlbmd0aCgpXCIgbWV0aG9kLiAqL1xuZXhwb3J0IGludGVyZmFjZSBMZW5ndGhNZXRob2RJbnRlcmZhY2Uge1xuICBsZW5ndGgoKTogbnVtYmVyO1xufVxuXG4vKiogSW50ZXJmYWNlIGZvciBvYmplY3RzIHdpdGggXCJsZW5ndGhcIiBhdHRyaWJ1dGUgKGUuZy4gQXJyYXkpLiAqL1xuZXhwb3J0IGludGVyZmFjZSBMZW5ndGhBdHRyaWJ1dGVJbnRlcmZhY2Uge1xuICBsZW5ndGg6IG51bWJlcjtcbn1cblxuLyoqIEludGVyZmFjZSBmb3Igb2JqZWN0cyB3aXRoIFwic2l6ZVwiIG1ldGhvZC4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgU2l6ZU1ldGhvZEludGVyZmFjZSB7XG4gIHNpemUoKTogbnVtYmVyO1xufVxuXG4vKiogSW50ZXJmYWNlIGZvciBvYmplY3RzIHdpdGggXCJzaXplXCIgYXR0cmlidXRlIChlLmcuIE1hcCwgU2V0KS4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgU2l6ZUF0dHJpYnV0ZUludGVyZmFjZSB7XG4gIHNpemU6IG51bWJlcjtcbn1cblxuLyoqIEludGVyZmFjZSBmb3Igb2JqZWN0cyB3aXRoIFwiZ2V0VmFsdWVcIiBtZXRob2QuICovXG5leHBvcnQgaW50ZXJmYWNlIFRvVmFsdWVJbnRlcmZhY2Uge1xuICBnZXRWYWx1ZSgpOiBudW1iZXI7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQWNjZXNzb3JGdW5jdGlvbiB7XG4gICgpOiBudW1iZXI7XG59XG5cbmV4cG9ydCB0eXBlIEFjY2Vzc29ySW50ZXJmYWNlID1cbiAgfCBMZW5ndGhBdHRyaWJ1dGVJbnRlcmZhY2VcbiAgfCBMZW5ndGhNZXRob2RJbnRlcmZhY2VcbiAgfCBTaXplQXR0cmlidXRlSW50ZXJmYWNlXG4gIHwgU2l6ZU1ldGhvZEludGVyZmFjZVxuICB8IFRvVmFsdWVJbnRlcmZhY2VcbiAgfCBBY2Nlc3NvckZ1bmN0aW9uO1xuIl0sIm1hcHBpbmdzIjoiYUFBQTs7Ozs7Ozs7Ozs7Ozs7R0FBQSxTQUFBQSxlQUFBLE1BQUFDLElBQUEsNEZBQUFDLElBQUEsZ0RBQUFDLE1BQUEsS0FBQUMsUUFBQSxzQkFBQUMsR0FBQSxvQkFBQUMsWUFBQSxFQUFBTCxJQUFBLHdGQUFBTSxZQUFBLE9BQUFDLEtBQUEsRUFBQUMsSUFBQSxJQUFBQyxNQUFBLElBQUFDLEdBQUEsRUFBQUYsSUFBQSxJQUFBQyxNQUFBLE9BQUFFLEtBQUEsSUFBQUMsU0FBQSxJQUFBQyxDQUFBLFNBQUFDLENBQUEsSUFBQUMsQ0FBQSxJQUFBQyxjQUFBLEVBQUFDLE9BQUEsR0FBQUMsSUFBQSx3RkFBQUMsT0FBQSwwRkFBQUMsS0FBQSxJQUFBQyxRQUFBLDJCQUFBQyxjQUFBLDI1RUFBQUMsZUFBQSw0Q0FBQXRCLElBQUEsaURBQUF1QixRQUFBLENBQUF0QixNQUFBLENBQUFFLEdBQUEsSUFBQUYsTUFBQSxDQUFBRSxHQUFBLFVBQUFvQixRQUFBLENBQUF4QixJQUFBLEdBQUF3QixRQUFBLENBQUF4QixJQUFBLEVBQUFDLElBQUEsR0FBQUEsSUFBQSxFQUFBdUIsUUFBQSxDQUFBeEIsSUFBQSxFQUFBSyxZQUFBLE1BQUFvQixjQUFBLENBQUFELFFBQUEsQ0FBQXhCLElBQUEsR0FjRztBQUFBRCxjQUFBLFNBQUFBLENBQUEsU0FBQTBCLGNBQUEsV0FBQUEsY0FBQSxFQUFBMUIsY0FBQSxHQUFBQSxjQUFBLEdBQUFjLENBQUEsTSJ9
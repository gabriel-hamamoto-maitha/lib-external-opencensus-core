"use strict";/**
 * Copyright 2018, OpenCensus Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function cov_19gciq4k1o(){var path="/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/src/stats/bucket-boundaries.ts";var hash="b45b55d4768eeb80a139514f03459eb3a4cae472";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/src/stats/bucket-boundaries.ts",statementMap:{"0":{start:{line:17,column:0},end:{line:17,column:62}},"1":{start:{line:18,column:0},end:{line:18,column:34}},"2":{start:{line:19,column:22},end:{line:19,column:57}},"3":{start:{line:22,column:8},end:{line:22,column:38}},"4":{start:{line:23,column:8},end:{line:23,column:65}},"5":{start:{line:24,column:8},end:{line:24,column:63}},"6":{start:{line:30,column:8},end:{line:30,column:28}},"7":{start:{line:36,column:8},end:{line:36,column:33}},"8":{start:{line:44,column:23},end:{line:44,column:24}},"9":{start:{line:45,column:8},end:{line:46,column:22}},"10":{start:{line:46,column:12},end:{line:46,column:22}},"11":{start:{line:47,column:23},end:{line:57,column:14}},"12":{start:{line:48,column:12},end:{line:55,column:13}},"13":{start:{line:49,column:37},end:{line:49,column:64}},"14":{start:{line:50,column:16},end:{line:50,column:62}},"15":{start:{line:51,column:16},end:{line:51,column:43}},"16":{start:{line:54,column:16},end:{line:54,column:27}},"17":{start:{line:56,column:12},end:{line:56,column:31}},"18":{start:{line:58,column:8},end:{line:60,column:9}},"19":{start:{line:59,column:12},end:{line:59,column:114}},"20":{start:{line:61,column:8},end:{line:61,column:22}},"21":{start:{line:68,column:8},end:{line:69,column:22}},"22":{start:{line:69,column:12},end:{line:69,column:22}},"23":{start:{line:70,column:29},end:{line:70,column:58}},"24":{start:{line:71,column:8},end:{line:71,column:29}},"25":{start:{line:72,column:8},end:{line:72,column:28}},"26":{start:{line:80,column:8},end:{line:87,column:9}},"27":{start:{line:81,column:12},end:{line:83,column:13}},"28":{start:{line:82,column:16},end:{line:82,column:67}},"29":{start:{line:84,column:12},end:{line:86,column:13}},"30":{start:{line:85,column:16},end:{line:85,column:67}},"31":{start:{line:90,column:0},end:{line:90,column:44}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:21,column:4},end:{line:21,column:5}},loc:{start:{line:21,column:52},end:{line:25,column:5}},line:21},"1":{name:"(anonymous_1)",decl:{start:{line:29,column:4},end:{line:29,column:5}},loc:{start:{line:29,column:20},end:{line:31,column:5}},line:29},"2":{name:"(anonymous_2)",decl:{start:{line:35,column:4},end:{line:35,column:5}},loc:{start:{line:35,column:16},end:{line:37,column:5}},line:35},"3":{name:"(anonymous_3)",decl:{start:{line:43,column:4},end:{line:43,column:5}},loc:{start:{line:43,column:47},end:{line:62,column:5}},line:43},"4":{name:"(anonymous_4)",decl:{start:{line:47,column:47},end:{line:47,column:48}},loc:{start:{line:47,column:81},end:{line:57,column:9}},line:47},"5":{name:"(anonymous_5)",decl:{start:{line:67,column:4},end:{line:67,column:5}},loc:{start:{line:67,column:29},end:{line:73,column:5}},line:67},"6":{name:"(anonymous_6)",decl:{start:{line:79,column:4},end:{line:79,column:5}},loc:{start:{line:79,column:36},end:{line:88,column:5}},line:79}},branchMap:{"0":{loc:{start:{line:21,column:28},end:{line:21,column:50}},type:"default-arg",locations:[{start:{line:21,column:37},end:{line:21,column:50}}],line:21},"1":{loc:{start:{line:45,column:8},end:{line:46,column:22}},type:"if",locations:[{start:{line:45,column:8},end:{line:46,column:22}},{start:{line:45,column:8},end:{line:46,column:22}}],line:45},"2":{loc:{start:{line:48,column:12},end:{line:55,column:13}},type:"if",locations:[{start:{line:48,column:12},end:{line:55,column:13}},{start:{line:48,column:12},end:{line:55,column:13}}],line:48},"3":{loc:{start:{line:58,column:8},end:{line:60,column:9}},type:"if",locations:[{start:{line:58,column:8},end:{line:60,column:9}},{start:{line:58,column:8},end:{line:60,column:9}}],line:58},"4":{loc:{start:{line:68,column:8},end:{line:69,column:22}},type:"if",locations:[{start:{line:68,column:8},end:{line:69,column:22}},{start:{line:68,column:8},end:{line:69,column:22}}],line:68},"5":{loc:{start:{line:80,column:8},end:{line:87,column:9}},type:"if",locations:[{start:{line:80,column:8},end:{line:87,column:9}},{start:{line:80,column:8},end:{line:87,column:9}}],line:80},"6":{loc:{start:{line:81,column:12},end:{line:83,column:13}},type:"if",locations:[{start:{line:81,column:12},end:{line:83,column:13}},{start:{line:81,column:12},end:{line:83,column:13}}],line:81},"7":{loc:{start:{line:84,column:12},end:{line:86,column:13}},type:"if",locations:[{start:{line:84,column:12},end:{line:86,column:13}},{start:{line:84,column:12},end:{line:86,column:13}}],line:84}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},b:{"0":[0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},inputSourceMap:{version:3,file:"/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/src/stats/bucket-boundaries.ts",sources:["/Users/usermaitha/trademaster/libs/lib-external-opencensus-node/src/stats/bucket-boundaries.ts"],names:[],mappings:";AAAA;;;;;;;;;;;;;;GAcG;;;AAEH,0DAA0D;AAI1D,MAAa,gBAAgB;IAM3B,YAAY,UAAoB,EAAE,MAAM,GAAG,aAAa;QACtD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QAC9B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,CAAC,CAAC;QACzD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACzD,CAAC;IAED;;OAEG;IACH,aAAa;QACX,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAED;;OAEG;IACH,SAAS;QACP,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IAED;;;;OAIG;IACK,wBAAwB,CAAC,gBAA0B;QACzD,IAAI,QAAQ,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,gBAAgB;YAAE,OAAO,EAAE,CAAC;QACjC,MAAM,MAAM,GAAG,gBAAgB,CAAC,MAAM,CACpC,CAAC,WAAqB,EAAE,QAAgB,EAAE,KAAa,EAAE,EAAE;YACzD,IAAI,QAAQ,GAAG,CAAC,EAAE;gBAChB,MAAM,YAAY,GAAG,gBAAgB,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;gBACjD,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;gBAC9C,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC5B;iBAAM;gBACL,QAAQ,EAAE,CAAC;aACZ;YACD,OAAO,WAAW,CAAC;QACrB,CAAC,EACD,EAAE,CACH,CAAC;QACF,IAAI,QAAQ,EAAE;YACZ,IAAI,CAAC,MAAM,CAAC,IAAI,CACd,YAAY,QAAQ,+DAA+D,CACpF,CAAC;SACH;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;OAGG;IACK,eAAe,CAAC,OAAiB;QACvC,IAAI,CAAC,OAAO;YAAE,OAAO,EAAE,CAAC;QACxB,MAAM,YAAY,GAAG,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACnD,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACrB,OAAO,YAAY,CAAC;IACtB,CAAC;IAED;;;;OAIG;IACK,gBAAgB,CAAC,OAAe,EAAE,IAAY;QACpD,IAAI,IAAI,EAAE;YACR,IAAI,OAAO,GAAG,IAAI,EAAE;gBAClB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,+BAA+B,CAAC,CAAC;aACpD;YACD,IAAI,OAAO,KAAK,IAAI,EAAE;gBACpB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,+BAA+B,CAAC,CAAC;aACpD;SACF;IACH,CAAC;CACF;AAjFD,4CAiFC",sourcesContent:["/**\n * Copyright 2018, OpenCensus Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as defaultLogger from '../common/console-logger';\nimport * as loggerTypes from '../common/types';\nimport { Bucket } from './types';\n\nexport class BucketBoundaries {\n  readonly buckets: Bucket[];\n  readonly bucketCounts: number[];\n  /** An object to log information to */\n  private logger: loggerTypes.Logger;\n\n  constructor(boundaries: number[], logger = defaultLogger) {\n    this.logger = logger.logger();\n    this.buckets = this.dropNegativeBucketBounds(boundaries);\n    this.bucketCounts = this.getBucketCounts(this.buckets);\n  }\n\n  /**\n   * Gets bucket boundaries\n   */\n  getBoundaries(): Bucket[] {\n    return this.buckets;\n  }\n\n  /**\n   * Gets initial bucket counts\n   */\n  getCounts(): number[] {\n    return this.bucketCounts;\n  }\n\n  /**\n   * Drops negative (BucketBounds) are currently not supported by\n   * any of the backends that OC supports\n   * @param bucketBoundaries a list with the bucket boundaries\n   */\n  private dropNegativeBucketBounds(bucketBoundaries: number[]): Bucket[] {\n    let negative = 0;\n    if (!bucketBoundaries) return [];\n    const result = bucketBoundaries.reduce(\n      (accumulator: number[], boundary: number, index: number) => {\n        if (boundary > 0) {\n          const nextBoundary = bucketBoundaries[index + 1];\n          this.validateBoundary(boundary, nextBoundary);\n          accumulator.push(boundary);\n        } else {\n          negative++;\n        }\n        return accumulator;\n      },\n      []\n    );\n    if (negative) {\n      this.logger.warn(\n        `Dropping ${negative} negative bucket boundaries, the values must be strictly > 0.`\n      );\n    }\n    return result;\n  }\n\n  /**\n   * Gets initial list of bucket counters\n   * @param buckets Bucket boundaries\n   */\n  private getBucketCounts(buckets: Bucket[]): number[] {\n    if (!buckets) return [];\n    const bucketsCount = new Array(buckets.length + 1);\n    bucketsCount.fill(0);\n    return bucketsCount;\n  }\n\n  /**\n   * Checks boundaries order and duplicates\n   * @param current Boundary\n   * @param next Next boundary\n   */\n  private validateBoundary(current: number, next: number) {\n    if (next) {\n      if (current > next) {\n        this.logger.error('Bucket boundaries not sorted.');\n      }\n      if (current === next) {\n        this.logger.error('Bucket boundaries not unique.');\n      }\n    }\n  }\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"b45b55d4768eeb80a139514f03459eb3a4cae472"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_19gciq4k1o=function(){return actualCoverage;};}return actualCoverage;}cov_19gciq4k1o();cov_19gciq4k1o().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_19gciq4k1o().s[1]++;exports.BucketBoundaries=void 0;const defaultLogger=(cov_19gciq4k1o().s[2]++,require("../common/console-logger"));class BucketBoundaries{constructor(boundaries,logger=(cov_19gciq4k1o().b[0][0]++,defaultLogger)){cov_19gciq4k1o().f[0]++;cov_19gciq4k1o().s[3]++;this.logger=logger.logger();cov_19gciq4k1o().s[4]++;this.buckets=this.dropNegativeBucketBounds(boundaries);cov_19gciq4k1o().s[5]++;this.bucketCounts=this.getBucketCounts(this.buckets);}/**
     * Gets bucket boundaries
     */getBoundaries(){cov_19gciq4k1o().f[1]++;cov_19gciq4k1o().s[6]++;return this.buckets;}/**
     * Gets initial bucket counts
     */getCounts(){cov_19gciq4k1o().f[2]++;cov_19gciq4k1o().s[7]++;return this.bucketCounts;}/**
     * Drops negative (BucketBounds) are currently not supported by
     * any of the backends that OC supports
     * @param bucketBoundaries a list with the bucket boundaries
     */dropNegativeBucketBounds(bucketBoundaries){cov_19gciq4k1o().f[3]++;let negative=(cov_19gciq4k1o().s[8]++,0);cov_19gciq4k1o().s[9]++;if(!bucketBoundaries){cov_19gciq4k1o().b[1][0]++;cov_19gciq4k1o().s[10]++;return[];}else{cov_19gciq4k1o().b[1][1]++;}const result=(cov_19gciq4k1o().s[11]++,bucketBoundaries.reduce((accumulator,boundary,index)=>{cov_19gciq4k1o().f[4]++;cov_19gciq4k1o().s[12]++;if(boundary>0){cov_19gciq4k1o().b[2][0]++;const nextBoundary=(cov_19gciq4k1o().s[13]++,bucketBoundaries[index+1]);cov_19gciq4k1o().s[14]++;this.validateBoundary(boundary,nextBoundary);cov_19gciq4k1o().s[15]++;accumulator.push(boundary);}else{cov_19gciq4k1o().b[2][1]++;cov_19gciq4k1o().s[16]++;negative++;}cov_19gciq4k1o().s[17]++;return accumulator;},[]));cov_19gciq4k1o().s[18]++;if(negative){cov_19gciq4k1o().b[3][0]++;cov_19gciq4k1o().s[19]++;this.logger.warn(`Dropping ${negative} negative bucket boundaries, the values must be strictly > 0.`);}else{cov_19gciq4k1o().b[3][1]++;}cov_19gciq4k1o().s[20]++;return result;}/**
     * Gets initial list of bucket counters
     * @param buckets Bucket boundaries
     */getBucketCounts(buckets){cov_19gciq4k1o().f[5]++;cov_19gciq4k1o().s[21]++;if(!buckets){cov_19gciq4k1o().b[4][0]++;cov_19gciq4k1o().s[22]++;return[];}else{cov_19gciq4k1o().b[4][1]++;}const bucketsCount=(cov_19gciq4k1o().s[23]++,new Array(buckets.length+1));cov_19gciq4k1o().s[24]++;bucketsCount.fill(0);cov_19gciq4k1o().s[25]++;return bucketsCount;}/**
     * Checks boundaries order and duplicates
     * @param current Boundary
     * @param next Next boundary
     */validateBoundary(current,next){cov_19gciq4k1o().f[6]++;cov_19gciq4k1o().s[26]++;if(next){cov_19gciq4k1o().b[5][0]++;cov_19gciq4k1o().s[27]++;if(current>next){cov_19gciq4k1o().b[6][0]++;cov_19gciq4k1o().s[28]++;this.logger.error('Bucket boundaries not sorted.');}else{cov_19gciq4k1o().b[6][1]++;}cov_19gciq4k1o().s[29]++;if(current===next){cov_19gciq4k1o().b[7][0]++;cov_19gciq4k1o().s[30]++;this.logger.error('Bucket boundaries not unique.');}else{cov_19gciq4k1o().b[7][1]++;}}else{cov_19gciq4k1o().b[5][1]++;}}}cov_19gciq4k1o().s[31]++;exports.BucketBoundaries=BucketBoundaries;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3VzZXJtYWl0aGEvdHJhZGVtYXN0ZXIvbGlicy9saWItZXh0ZXJuYWwtb3BlbmNlbnN1cy1ub2RlL3NyYy9zdGF0cy9idWNrZXQtYm91bmRhcmllcy50cyIsInNvdXJjZXMiOlsiL1VzZXJzL3VzZXJtYWl0aGEvdHJhZGVtYXN0ZXIvbGlicy9saWItZXh0ZXJuYWwtb3BlbmNlbnN1cy1ub2RlL3NyYy9zdGF0cy9idWNrZXQtYm91bmRhcmllcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7Ozs7Ozs7O0dBY0c7OztBQUVILDBEQUEwRDtBQUkxRCxNQUFhLGdCQUFnQjtJQU0zQixZQUFZLFVBQW9CLEVBQUUsTUFBTSxHQUFHLGFBQWE7UUFDdEQsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUMsTUFBTSxFQUFFLENBQUM7UUFDOUIsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsd0JBQXdCLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDekQsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUN6RCxDQUFDO0lBRUQ7O09BRUc7SUFDSCxhQUFhO1FBQ1gsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQ3RCLENBQUM7SUFFRDs7T0FFRztJQUNILFNBQVM7UUFDUCxPQUFPLElBQUksQ0FBQyxZQUFZLENBQUM7SUFDM0IsQ0FBQztJQUVEOzs7O09BSUc7SUFDSyx3QkFBd0IsQ0FBQyxnQkFBMEI7UUFDekQsSUFBSSxRQUFRLEdBQUcsQ0FBQyxDQUFDO1FBQ2pCLElBQUksQ0FBQyxnQkFBZ0I7WUFBRSxPQUFPLEVBQUUsQ0FBQztRQUNqQyxNQUFNLE1BQU0sR0FBRyxnQkFBZ0IsQ0FBQyxNQUFNLENBQ3BDLENBQUMsV0FBcUIsRUFBRSxRQUFnQixFQUFFLEtBQWEsRUFBRSxFQUFFO1lBQ3pELElBQUksUUFBUSxHQUFHLENBQUMsRUFBRTtnQkFDaEIsTUFBTSxZQUFZLEdBQUcsZ0JBQWdCLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDO2dCQUNqRCxJQUFJLENBQUMsZ0JBQWdCLENBQUMsUUFBUSxFQUFFLFlBQVksQ0FBQyxDQUFDO2dCQUM5QyxXQUFXLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO2FBQzVCO2lCQUFNO2dCQUNMLFFBQVEsRUFBRSxDQUFDO2FBQ1o7WUFDRCxPQUFPLFdBQVcsQ0FBQztRQUNyQixDQUFDLEVBQ0QsRUFBRSxDQUNILENBQUM7UUFDRixJQUFJLFFBQVEsRUFBRTtZQUNaLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUNkLFlBQVksUUFBUSwrREFBK0QsQ0FDcEYsQ0FBQztTQUNIO1FBQ0QsT0FBTyxNQUFNLENBQUM7SUFDaEIsQ0FBQztJQUVEOzs7T0FHRztJQUNLLGVBQWUsQ0FBQyxPQUFpQjtRQUN2QyxJQUFJLENBQUMsT0FBTztZQUFFLE9BQU8sRUFBRSxDQUFDO1FBQ3hCLE1BQU0sWUFBWSxHQUFHLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDbkQsWUFBWSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNyQixPQUFPLFlBQVksQ0FBQztJQUN0QixDQUFDO0lBRUQ7Ozs7T0FJRztJQUNLLGdCQUFnQixDQUFDLE9BQWUsRUFBRSxJQUFZO1FBQ3BELElBQUksSUFBSSxFQUFFO1lBQ1IsSUFBSSxPQUFPLEdBQUcsSUFBSSxFQUFFO2dCQUNsQixJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQywrQkFBK0IsQ0FBQyxDQUFDO2FBQ3BEO1lBQ0QsSUFBSSxPQUFPLEtBQUssSUFBSSxFQUFFO2dCQUNwQixJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQywrQkFBK0IsQ0FBQyxDQUFDO2FBQ3BEO1NBQ0Y7SUFDSCxDQUFDO0NBQ0Y7QUFqRkQsNENBaUZDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgMjAxOCwgT3BlbkNlbnN1cyBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgKiBhcyBkZWZhdWx0TG9nZ2VyIGZyb20gJy4uL2NvbW1vbi9jb25zb2xlLWxvZ2dlcic7XG5pbXBvcnQgKiBhcyBsb2dnZXJUeXBlcyBmcm9tICcuLi9jb21tb24vdHlwZXMnO1xuaW1wb3J0IHsgQnVja2V0IH0gZnJvbSAnLi90eXBlcyc7XG5cbmV4cG9ydCBjbGFzcyBCdWNrZXRCb3VuZGFyaWVzIHtcbiAgcmVhZG9ubHkgYnVja2V0czogQnVja2V0W107XG4gIHJlYWRvbmx5IGJ1Y2tldENvdW50czogbnVtYmVyW107XG4gIC8qKiBBbiBvYmplY3QgdG8gbG9nIGluZm9ybWF0aW9uIHRvICovXG4gIHByaXZhdGUgbG9nZ2VyOiBsb2dnZXJUeXBlcy5Mb2dnZXI7XG5cbiAgY29uc3RydWN0b3IoYm91bmRhcmllczogbnVtYmVyW10sIGxvZ2dlciA9IGRlZmF1bHRMb2dnZXIpIHtcbiAgICB0aGlzLmxvZ2dlciA9IGxvZ2dlci5sb2dnZXIoKTtcbiAgICB0aGlzLmJ1Y2tldHMgPSB0aGlzLmRyb3BOZWdhdGl2ZUJ1Y2tldEJvdW5kcyhib3VuZGFyaWVzKTtcbiAgICB0aGlzLmJ1Y2tldENvdW50cyA9IHRoaXMuZ2V0QnVja2V0Q291bnRzKHRoaXMuYnVja2V0cyk7XG4gIH1cblxuICAvKipcbiAgICogR2V0cyBidWNrZXQgYm91bmRhcmllc1xuICAgKi9cbiAgZ2V0Qm91bmRhcmllcygpOiBCdWNrZXRbXSB7XG4gICAgcmV0dXJuIHRoaXMuYnVja2V0cztcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXRzIGluaXRpYWwgYnVja2V0IGNvdW50c1xuICAgKi9cbiAgZ2V0Q291bnRzKCk6IG51bWJlcltdIHtcbiAgICByZXR1cm4gdGhpcy5idWNrZXRDb3VudHM7XG4gIH1cblxuICAvKipcbiAgICogRHJvcHMgbmVnYXRpdmUgKEJ1Y2tldEJvdW5kcykgYXJlIGN1cnJlbnRseSBub3Qgc3VwcG9ydGVkIGJ5XG4gICAqIGFueSBvZiB0aGUgYmFja2VuZHMgdGhhdCBPQyBzdXBwb3J0c1xuICAgKiBAcGFyYW0gYnVja2V0Qm91bmRhcmllcyBhIGxpc3Qgd2l0aCB0aGUgYnVja2V0IGJvdW5kYXJpZXNcbiAgICovXG4gIHByaXZhdGUgZHJvcE5lZ2F0aXZlQnVja2V0Qm91bmRzKGJ1Y2tldEJvdW5kYXJpZXM6IG51bWJlcltdKTogQnVja2V0W10ge1xuICAgIGxldCBuZWdhdGl2ZSA9IDA7XG4gICAgaWYgKCFidWNrZXRCb3VuZGFyaWVzKSByZXR1cm4gW107XG4gICAgY29uc3QgcmVzdWx0ID0gYnVja2V0Qm91bmRhcmllcy5yZWR1Y2UoXG4gICAgICAoYWNjdW11bGF0b3I6IG51bWJlcltdLCBib3VuZGFyeTogbnVtYmVyLCBpbmRleDogbnVtYmVyKSA9PiB7XG4gICAgICAgIGlmIChib3VuZGFyeSA+IDApIHtcbiAgICAgICAgICBjb25zdCBuZXh0Qm91bmRhcnkgPSBidWNrZXRCb3VuZGFyaWVzW2luZGV4ICsgMV07XG4gICAgICAgICAgdGhpcy52YWxpZGF0ZUJvdW5kYXJ5KGJvdW5kYXJ5LCBuZXh0Qm91bmRhcnkpO1xuICAgICAgICAgIGFjY3VtdWxhdG9yLnB1c2goYm91bmRhcnkpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG5lZ2F0aXZlKys7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGFjY3VtdWxhdG9yO1xuICAgICAgfSxcbiAgICAgIFtdXG4gICAgKTtcbiAgICBpZiAobmVnYXRpdmUpIHtcbiAgICAgIHRoaXMubG9nZ2VyLndhcm4oXG4gICAgICAgIGBEcm9wcGluZyAke25lZ2F0aXZlfSBuZWdhdGl2ZSBidWNrZXQgYm91bmRhcmllcywgdGhlIHZhbHVlcyBtdXN0IGJlIHN0cmljdGx5ID4gMC5gXG4gICAgICApO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgLyoqXG4gICAqIEdldHMgaW5pdGlhbCBsaXN0IG9mIGJ1Y2tldCBjb3VudGVyc1xuICAgKiBAcGFyYW0gYnVja2V0cyBCdWNrZXQgYm91bmRhcmllc1xuICAgKi9cbiAgcHJpdmF0ZSBnZXRCdWNrZXRDb3VudHMoYnVja2V0czogQnVja2V0W10pOiBudW1iZXJbXSB7XG4gICAgaWYgKCFidWNrZXRzKSByZXR1cm4gW107XG4gICAgY29uc3QgYnVja2V0c0NvdW50ID0gbmV3IEFycmF5KGJ1Y2tldHMubGVuZ3RoICsgMSk7XG4gICAgYnVja2V0c0NvdW50LmZpbGwoMCk7XG4gICAgcmV0dXJuIGJ1Y2tldHNDb3VudDtcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVja3MgYm91bmRhcmllcyBvcmRlciBhbmQgZHVwbGljYXRlc1xuICAgKiBAcGFyYW0gY3VycmVudCBCb3VuZGFyeVxuICAgKiBAcGFyYW0gbmV4dCBOZXh0IGJvdW5kYXJ5XG4gICAqL1xuICBwcml2YXRlIHZhbGlkYXRlQm91bmRhcnkoY3VycmVudDogbnVtYmVyLCBuZXh0OiBudW1iZXIpIHtcbiAgICBpZiAobmV4dCkge1xuICAgICAgaWYgKGN1cnJlbnQgPiBuZXh0KSB7XG4gICAgICAgIHRoaXMubG9nZ2VyLmVycm9yKCdCdWNrZXQgYm91bmRhcmllcyBub3Qgc29ydGVkLicpO1xuICAgICAgfVxuICAgICAgaWYgKGN1cnJlbnQgPT09IG5leHQpIHtcbiAgICAgICAgdGhpcy5sb2dnZXIuZXJyb3IoJ0J1Y2tldCBib3VuZGFyaWVzIG5vdCB1bmlxdWUuJyk7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iXX0=
//# sourceMappingURL=data:application/json;charset=utf-8;base64,